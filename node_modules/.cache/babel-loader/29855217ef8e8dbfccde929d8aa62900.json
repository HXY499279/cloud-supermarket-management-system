{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\n\nvar Mirror =\n/** @class */\nfunction (_super) {\n  __extends(Mirror, _super);\n\n  function Mirror() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Mirror.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'mirror',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this),\n      transpose: false\n    });\n  };\n\n  Mirror.prototype.render = function () {\n    _super.prototype.render.call(this);\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n\n  Mirror.prototype.beforeEachView = function (view, facet) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  };\n\n  Mirror.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n\n  Mirror.prototype.generateFacets = function (data) {\n    var _this = this;\n\n    var f = this.cfg.fields[0];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    var columnField;\n    var rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n\n      rowValuesLength = rowValues.length;\n    } // 获取每个维度对应的数据配置片段\n\n\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // do nothing\n    return option;\n  };\n\n  Mirror.prototype.renderTitle = function () {\n    var _this = this;\n\n    each(this.facets, function (facet, facetIndex) {\n      var columnValue = facet.columnValue,\n          rowValue = facet.rowValue,\n          view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n\n      if (_this.cfg.transpose) {\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n        view.annotation().text(config);\n      } else {\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);\n        view.annotation().text(config);\n      }\n    });\n  };\n\n  return Mirror;\n}(Facet);\n\nexport default Mirror;","map":{"version":3,"sources":["../../src/facet/mirror.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MirrorCfg, MirrorData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Mirror extends Facet<MirrorCfg, MirrorData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'mirror',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n      transpose: false,\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected beforeEachView(view: View, facet: MirrorData) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  }\n\n  protected afterEachView(view: View, facet: MirrorData) {\n    this.processAxis(view, facet);\n  }\n\n  protected generateFacets(data: Datum[]): MirrorData[] {\n    const [f] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    let columnField;\n    let rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: MirrorData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // do nothing\n    return option;\n  }\n\n  private renderTitle() {\n    each(this.facets, (facet: MirrorData, facetIndex: number) => {\n      const { columnValue, rowValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      if (this.cfg.transpose) {\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      } else {\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}