{"ast":null,"code":"/**\n * @fileoverview 判断点是否在多边形内\n * @author dxq613@gmail.com\n */\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6; // 三态函数，判断两个double在eps精度下的大小关系\n\nfunction dcmp(x) {\n  if (Math.abs(x) < tolerance) {\n    return 0;\n  }\n\n  return x < 0 ? -1 : 1;\n} // 判断点Q是否在p1和p2的线段上\n\n\nfunction onSegment(p1, p2, q) {\n  if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {\n    return true;\n  }\n\n  return false;\n} // 判断点P在多边形内-射线法\n\n\nexport default function isInPolygon(points, x, y) {\n  var isHit = false;\n  var n = points.length;\n\n  if (n <= 2) {\n    // svg 中点小于 3 个时，不显示，也无法被拾取\n    return false;\n  }\n\n  for (var i = 0; i < n; i++) {\n    var p1 = points[i];\n    var p2 = points[(i + 1) % n];\n\n    if (onSegment(p1, p2, [x, y])) {\n      // 点在多边形一条边上\n      return true;\n    } // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n    // 后一个判断被测点 在 射线与边交点 的左边\n\n\n    if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {\n      isHit = !isHit;\n    }\n  }\n\n  return isHit;\n}","map":{"version":3,"sources":["../src/point-in-polygon.ts"],"names":[],"mappings":"AAAA;;;AAGG;AAEH;AACA,IAAM,SAAS,GAAG,IAAlB,C,CACA;;AACA,SAAS,IAAT,CAAc,CAAd,EAAe;AACb,MAAI,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,SAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AAED,SAAO,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACD,C,CAED;;;AACA,SAAS,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,CAA3B,EAA4B;AAC1B,MACE,CAAC,CAAC,CAAC,CAAD,CAAD,GAAO,EAAE,CAAC,CAAD,CAAV,KAAkB,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA5B,MAAqC,CAAC,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAAX,KAAmB,CAAC,CAAC,CAAD,CAAD,GAAO,EAAE,CAAC,CAAD,CAA5B,CAArC,IACA,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAD,CAAX,EAAgB,EAAE,CAAC,CAAD,CAAlB,KAA0B,CAAC,CAAC,CAAD,CAD3B,IAEA,CAAC,CAAC,CAAD,CAAD,IAAQ,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAD,CAAX,EAAgB,EAAE,CAAC,CAAD,CAAlB,CAFR,IAGA,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAD,CAAX,EAAgB,EAAE,CAAC,CAAD,CAAlB,KAA0B,CAAC,CAAC,CAAD,CAH3B,IAIA,CAAC,CAAC,CAAD,CAAD,IAAQ,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAD,CAAX,EAAgB,EAAE,CAAC,CAAD,CAAlB,CALV,EAME;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,C,CAED;;;AACA,eAAc,SAAU,WAAV,CAAsB,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAkC;AAC9C,MAAI,KAAK,GAAG,KAAZ;AACA,MAAM,CAAC,GAAG,MAAM,CAAC,MAAjB;;AACA,MAAI,CAAC,IAAI,CAAT,EAAY;AACV;AACA,WAAO,KAAP;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,QAAM,EAAE,GAAG,MAAM,CAAC,CAAD,CAAjB;AACA,QAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAL,IAAU,CAAX,CAAjB;;AACA,QAAI,SAAS,CAAC,EAAD,EAAK,EAAL,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAAb,EAA+B;AAC7B;AACA,aAAO,IAAP;AACD,KANyB,CAO1B;AACA;;;AACA,QACE,IAAI,CAAC,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,CAAJ,GAAkB,CAAlB,KAAwB,IAAI,CAAC,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,CAAJ,GAAkB,CAA1C,IACA,IAAI,CAAC,CAAC,GAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAD,CAAP,KAAe,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAAzB,CAAD,IAAmC,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA7C,CAAJ,GAAwD,EAAE,CAAC,CAAD,CAA3D,CAAJ,GAAsE,CAFxE,EAGE;AACA,MAAA,KAAK,GAAG,CAAC,KAAT;AACD;AACF;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @fileoverview 判断点是否在多边形内\n * @author dxq613@gmail.com\n */\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x) {\n    if (Math.abs(x) < tolerance) {\n        return 0;\n    }\n    return x < 0 ? -1 : 1;\n}\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1, p2, q) {\n    if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\n        Math.min(p1[0], p2[0]) <= q[0] &&\n        q[0] <= Math.max(p1[0], p2[0]) &&\n        Math.min(p1[1], p2[1]) <= q[1] &&\n        q[1] <= Math.max(p1[1], p2[1])) {\n        return true;\n    }\n    return false;\n}\n// 判断点P在多边形内-射线法\nexport default function isInPolygon(points, x, y) {\n    var isHit = false;\n    var n = points.length;\n    if (n <= 2) {\n        // svg 中点小于 3 个时，不显示，也无法被拾取\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        var p1 = points[i];\n        var p2 = points[(i + 1) % n];\n        if (onSegment(p1, p2, [x, y])) {\n            // 点在多边形一条边上\n            return true;\n        }\n        // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n        // 后一个判断被测点 在 射线与边交点 的左边\n        if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\n            dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0) {\n            isHit = !isHit;\n        }\n    }\n    return isHit;\n}\n//# sourceMappingURL=point-in-polygon.js.map"]},"metadata":{},"sourceType":"module"}