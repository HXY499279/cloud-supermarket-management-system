{"ast":null,"code":"import isArray from './is-array';\n\nvar clone = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  var rst;\n\n  if (isArray(obj)) {\n    rst = [];\n\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (typeof obj[i] === 'object' && obj[i] != null) {\n        rst[i] = clone(obj[i]);\n      } else {\n        rst[i] = obj[i];\n      }\n    }\n  } else {\n    rst = {};\n\n    for (var k in obj) {\n      if (typeof obj[k] === 'object' && obj[k] != null) {\n        rst[k] = clone(obj[k]);\n      } else {\n        rst[k] = obj[k];\n      }\n    }\n  }\n\n  return rst;\n};\n\nexport default clone;","map":{"version":3,"sources":["../src/clone.ts"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,YAApB;;AAEA,IAAM,KAAK,GAAG,UAAS,GAAT,EAAY;AACxB,MAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,GAAG,KAAK,IAAvC,EAA6C;AAC3C,WAAO,GAAP;AACD;;AACD,MAAI,GAAJ;;AACA,MAAI,OAAO,CAAC,GAAD,CAAX,EAAkB;AAChB,IAAA,GAAG,GAAG,EAAN;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,GAAG,CAApC,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAI,OAAO,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAlB,IAA8B,GAAG,CAAC,CAAD,CAAH,IAAU,IAA5C,EAAkD;AAChD,QAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAK,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAd;AACD,OAFD,MAEO;AACL,QAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAG,CAAC,CAAD,CAAZ;AACD;AACF;AACF,GATD,MASO;AACL,IAAA,GAAG,GAAG,EAAN;;AACA,SAAK,IAAM,CAAX,IAAgB,GAAhB,EAAqB;AACnB,UAAI,OAAO,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAlB,IAA8B,GAAG,CAAC,CAAD,CAAH,IAAU,IAA5C,EAAkD;AAChD,QAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAK,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAd;AACD,OAFD,MAEO;AACL,QAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAG,CAAC,CAAD,CAAZ;AACD;AACF;AACF;;AAED,SAAO,GAAP;AACD,CA1BD;;AA4BA,eAAe,KAAf","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nvar clone = function (obj) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n    var rst;\n    if (isArray(obj)) {\n        rst = [];\n        for (var i = 0, l = obj.length; i < l; i++) {\n            if (typeof obj[i] === 'object' && obj[i] != null) {\n                rst[i] = clone(obj[i]);\n            }\n            else {\n                rst[i] = obj[i];\n            }\n        }\n    }\n    else {\n        rst = {};\n        for (var k in obj) {\n            if (typeof obj[k] === 'object' && obj[k] != null) {\n                rst[k] = clone(obj[k]);\n            }\n            else {\n                rst[k] = obj[k];\n            }\n        }\n    }\n    return rst;\n};\nexport default clone;\n//# sourceMappingURL=clone.js.map"]},"metadata":{},"sourceType":"module"}