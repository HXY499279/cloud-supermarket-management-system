{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { padEnd } from '../../../util/helper';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getCandleYValues(value) {\n  var array = !isArray(value) ? [value] : value; // 从大到小排序\n\n  var sorted = array.sort(function (a, b) {\n    return b - a;\n  });\n  return padEnd(sorted, 4, sorted[sorted.length - 1]);\n} // get candle shape's key points\n\n\nfunction getCandlePoints(x, y, size) {\n  var yValues = getCandleYValues(y);\n  return [{\n    x: x,\n    y: yValues[0]\n  }, {\n    x: x,\n    y: yValues[1]\n  }, {\n    x: x - size / 2,\n    y: yValues[2]\n  }, {\n    x: x - size / 2,\n    y: yValues[1]\n  }, {\n    x: x + size / 2,\n    y: yValues[1]\n  }, {\n    x: x + size / 2,\n    y: yValues[2]\n  }, {\n    x: x,\n    y: yValues[2]\n  }, {\n    x: x,\n    y: yValues[3]\n  }];\n}\n\nfunction getCandlePath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];\n} // k line shape\n\n\nregisterShape('schema', 'candle', {\n  getPoints: function (shapePoint) {\n    var x = shapePoint.x,\n        y = shapePoint.y,\n        size = shapePoint.size;\n    return getCandlePoints(x, y, size);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, true);\n    var path = this.parsePath(getCandlePath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path,\n        name: 'schema'\n      })\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        var yValues = [y + 7.5, y + 3, y - 3, y - 7.5];\n        var points = getCandlePoints(x, yValues, r);\n        return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];\n      },\n      style: {\n        lineWidth: 1,\n        stroke: color,\n        fill: color,\n        r: 6\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/schema/candle.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { padEnd } from '../../../util/helper';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getCandleYValues(value: number | number[]) {\n  const array = !isArray(value) ? [value] : value;\n  // 从大到小排序\n  const sorted = array.sort((a, b) => b - a);\n  return padEnd(sorted, 4, sorted[sorted.length - 1]);\n}\n\n// get candle shape's key points\nfunction getCandlePoints(x: number, y: number[], size: number): Point[] {\n  const yValues = getCandleYValues(y);\n  return [\n    { x, y: yValues[0] },\n    { x, y: yValues[1] },\n    { x: x - size / 2, y: yValues[2] },\n    { x: x - size / 2, y: yValues[1] },\n    { x: x + size / 2, y: yValues[1] },\n    { x: x + size / 2, y: yValues[2] },\n    { x, y: yValues[2] },\n    { x, y: yValues[3] },\n  ];\n}\n\nfunction getCandlePath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['L', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['Z'],\n    ['M', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n  ];\n}\n\n// k line shape\nregisterShape('schema', 'candle', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getCandlePoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, true);\n    const path = this.parsePath(getCandlePath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y + 7.5, y + 3, y - 3, y - 7.5];\n        const points = getCandlePoints(x, yValues, r);\n        return [\n          ['M', points[0].x, points[0].y],\n          ['L', points[1].x, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['L', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['Z'],\n          ['M', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n        ];\n      },\n      style: {\n        lineWidth: 1,\n        stroke: color,\n        fill: color,\n        r: 6,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}