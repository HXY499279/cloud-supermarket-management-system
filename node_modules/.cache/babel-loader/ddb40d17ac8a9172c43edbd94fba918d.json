{"ast":null,"code":"import { __extends } from \"tslib\";\nimport colorUtil from '@antv/color-util';\nimport { isString } from '@antv/util';\nimport Attribute from './base';\n\nvar Color =\n/** @class */\nfunction (_super) {\n  __extends(Color, _super);\n\n  function Color(cfg) {\n    var _this = _super.call(this, cfg) || this;\n\n    _this.type = 'color';\n    _this.names = ['color'];\n\n    if (isString(_this.values)) {\n      _this.linear = true;\n    }\n\n    _this.gradient = colorUtil.gradient(_this.values);\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  Color.prototype.getLinearValue = function (percent) {\n    return this.gradient(percent);\n  };\n\n  return Color;\n}(Attribute);\n\nexport default Color;","map":{"version":3,"sources":["../../src/attributes/color.ts"],"names":[],"mappings":";AAAA,OAAO,SAAP,MAAsB,kBAAtB;AACA,SAAS,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAAP,MAAsB,QAAtB;;AAEA,IAAA,KAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,KAAA,EAAA,MAAA,CAAA;;AAGjC,WAAA,KAAA,CAAY,GAAZ,EAA6B;AAA7B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAN,KAAU,IADZ;;AAEE,IAAA,KAAI,CAAC,IAAL,GAAY,OAAZ;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,CAAC,OAAD,CAAb;;AAEA,QAAI,QAAQ,CAAC,KAAI,CAAC,MAAN,CAAZ,EAA2B;AACzB,MAAA,KAAI,CAAC,MAAL,GAAc,IAAd;AACD;;AAED,IAAA,KAAI,CAAC,QAAL,GAAgB,SAAS,CAAC,QAAV,CAAmB,KAAI,CAAC,MAAxB,CAAhB;;AACD;AAED;;AAEG;;;AACI,EAAA,KAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB,OAAtB,EAAqC;AACnC,WAAO,KAAK,QAAL,CAAc,OAAd,CAAP;AACD,GAFM;;AAGT,SAAA,KAAA;AAAC,CArBD,CAAmC,SAAnC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport colorUtil from '@antv/color-util';\nimport { isString } from '@antv/util';\nimport Attribute from './base';\nvar Color = /** @class */ (function (_super) {\n    __extends(Color, _super);\n    function Color(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.type = 'color';\n        _this.names = ['color'];\n        if (isString(_this.values)) {\n            _this.linear = true;\n        }\n        _this.gradient = colorUtil.gradient(_this.values);\n        return _this;\n    }\n    /**\n     * @override\n     */\n    Color.prototype.getLinearValue = function (percent) {\n        return this.gradient(percent);\n    };\n    return Color;\n}(Attribute));\nexport default Color;\n//# sourceMappingURL=color.js.map"]},"metadata":{},"sourceType":"module"}