{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport MaskBase from './base';\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\n\nvar PathMask =\n/** @class */\nfunction (_super) {\n  __extends(PathMask, _super);\n\n  function PathMask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // 生成 mask 的路径\n\n\n  PathMask.prototype.getMaskPath = function () {\n    var points = this.points;\n    var path = [];\n\n    if (points.length) {\n      each(points, function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n\n    return path;\n  };\n\n  PathMask.prototype.getMaskAttrs = function () {\n    return {\n      path: this.getMaskPath()\n    };\n  };\n  /**\n   * 添加一个点\n   */\n\n\n  PathMask.prototype.addPoint = function () {\n    this.resize();\n  };\n\n  return PathMask;\n}(MaskBase);\n\nexport default PathMask;","map":{"version":3,"sources":["../../../../src/interaction/action/mask/path.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,YAArB;AACA,OAAO,QAAP,MAAqB,QAArB;AAEA;;;AAGG;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAAvB,WAAA,QAAA,GAAA;;AA8BC,GA9BD,CACE;;;AACU,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,IAAI,GAAG,EAAb;;AACA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,MAAA,IAAI,CAAC,MAAD,EAAS,UAAC,KAAD,EAAQ,KAAR,EAAa;AACxB,YAAI,KAAK,KAAK,CAAd,EAAiB;AACf,UAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,KAAK,CAAC,CAAZ,EAAe,KAAK,CAAC,CAArB,CAAV;AACD,SAFD,MAEO;AACL,UAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,KAAK,CAAC,CAAZ,EAAe,KAAK,CAAC,CAArB,CAAV;AACD;AACF,OANG,CAAJ;AAOA,MAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAAV;AACD;;AACD,WAAO,IAAP;AACD,GAdS;;AAgBA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AACE,WAAO;AACL,MAAA,IAAI,EAAE,KAAK,WAAL;AADD,KAAP;AAGD,GAJS;AAMV;;AAEG;;;AACI,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACE,SAAK,MAAL;AACD,GAFM;;AAGT,SAAA,QAAA;AAAC,CA9BD,CAAuB,QAAvB,CAAA;;AAgCA,eAAe,QAAf","sourcesContent":["import { each } from '@antv/util';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nclass PathMask extends MaskBase {\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    const points = this.points;\n    const path = [];\n    if (points.length) {\n      each(points, (point, index) => {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  }\n\n  protected getMaskAttrs() {\n    return {\n      path: this.getMaskPath(),\n    };\n  }\n\n  /**\n   * 添加一个点\n   */\n  public addPoint() {\n    this.resize();\n  }\n}\n\nexport default PathMask;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}