{"ast":null,"code":"import { ext } from '@antv/matrix-util';\n/**\n * @ignore\n * 沿着 x 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\n\nexport function scaleInX(shape, animateCfg, cfg) {\n  var box = shape.getBBox();\n  var mappingData = shape.get('origin').mappingData;\n  var points = mappingData.points; // x 数值如果为负值，那么应该从右往左生长\n\n  var x = points[0].y - points[1].y > 0 ? box.maxX : box.minX;\n  var y = (box.minY + box.maxY) / 2;\n  shape.applyToMatrix([x, y, 1]);\n  var matrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 1], ['t', x, y]]);\n  shape.setMatrix(matrix);\n  shape.animate({\n    matrix: ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 1], ['t', x, y]])\n  }, animateCfg);\n}\n/**\n * @ignore\n * 沿着 y 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\n\nexport function scaleInY(shape, animateCfg, cfg) {\n  var box = shape.getBBox();\n  var mappingData = shape.get('origin').mappingData;\n  var x = (box.minX + box.maxX) / 2;\n  var points = mappingData.points; // 数值如果为负值，那么应该从上往下生长，通过 shape 的关键点进行判断\n\n  var y = points[0].y - points[1].y <= 0 ? box.maxY : box.minY;\n  shape.applyToMatrix([x, y, 1]);\n  var matrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 0.01], ['t', x, y]]);\n  shape.setMatrix(matrix);\n  shape.animate({\n    matrix: ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 100], ['t', x, y]])\n  }, animateCfg);\n}","map":{"version":3,"sources":["../../../src/animate/animation/scale-in.ts"],"names":[],"mappings":"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","sourcesContent":["import { ext } from '@antv/matrix-util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg, Point } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 沿着 x 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInX(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const points = mappingData.points as Point[];\n  // x 数值如果为负值，那么应该从右往左生长\n  const x = points[0].y - points[1].y > 0 ? box.maxX : box.minX;\n  const y = (box.minY + box.maxY) / 2;\n\n  shape.applyToMatrix([x, y, 1]);\n\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 0.01, 1],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 100, 1],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n\n/**\n * @ignore\n * 沿着 y 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInY(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const x = (box.minX + box.maxX) / 2;\n  const points = mappingData.points as Point[];\n  // 数值如果为负值，那么应该从上往下生长，通过 shape 的关键点进行判断\n  const y = points[0].y - points[1].y <= 0 ? box.maxY : box.minY;\n\n  shape.applyToMatrix([x, y, 1]);\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 1, 0.01],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 1, 100],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}