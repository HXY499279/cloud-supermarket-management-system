{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\n * 分页器 默认配置\n */\n\nvar DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12\n    }\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12\n    }\n  }\n};\n\nvar Category =\n/** @class */\nfunction (_super) {\n  __extends(Category, _super);\n\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.currentPageIndex = 1;\n    _this.totalPagesCnt = 1;\n    _this.pageWidth = 0;\n    _this.pageHeight = 0;\n    _this.startX = 0;\n    _this.startY = 0;\n\n    _this.onNavigationBack = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n\n      if (_this.currentPageIndex > 1) {\n        _this.currentPageIndex -= 1;\n\n        _this.updateNavigation();\n\n        var matrix = _this.getCurrentNavigationMatrix();\n\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n\n    _this.onNavigationAfter = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n\n      if (_this.currentPageIndex < _this.totalPagesCnt) {\n        _this.currentPageIndex += 1;\n\n        _this.updateNavigation();\n\n        var matrix = _this.getCurrentNavigationMatrix();\n\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  Category.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor\n          }\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff'\n          }\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'middle'\n          }\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle'\n          }\n        },\n        itemValue: {\n          alignRight: false,\n          formatter: null,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'middle'\n          }\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8\n            }\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor\n            }\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              opacity: 0.2\n            }\n          }\n        }\n      }\n    });\n  }; // 实现 IList 接口\n\n\n  Category.prototype.isList = function () {\n    return true;\n  };\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n\n\n  Category.prototype.getItems = function () {\n    return this.get('items');\n  };\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n\n\n  Category.prototype.setItems = function (items) {\n    this.update({\n      items: items\n    });\n  };\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n\n\n  Category.prototype.updateItem = function (item, cfg) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n\n    this.render();\n  };\n  /**\n   * 清空列表\n   */\n\n\n  Category.prototype.clearItems = function () {\n    var itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  };\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n\n\n  Category.prototype.setItemState = function (item, state, value) {\n    item[state] = value;\n    var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n\n    if (itemElement) {\n      var items = this.getItems();\n      var index = items.indexOf(item);\n      var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n\n      var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  };\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n\n\n  Category.prototype.hasState = function (item, state) {\n    return !!item[state];\n  };\n\n  Category.prototype.getItemStates = function (item) {\n    var itemStates = this.get('itemStates');\n    var rst = [];\n    each(itemStates, function (v, k) {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  };\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n\n\n  Category.prototype.clearItemsState = function (state) {\n    var _this = this;\n\n    var items = this.getItemsByState(state);\n    each(items, function (item) {\n      _this.setItemState(item, state, false);\n    });\n  };\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n\n\n  Category.prototype.getItemsByState = function (state) {\n    var _this = this;\n\n    var items = this.getItems();\n    return filter(items, function (item) {\n      return _this.hasState(item, state);\n    });\n  }; // 绘制 legend 的选项\n\n\n  Category.prototype.drawLegendContent = function (group) {\n    this.processItems();\n    this.drawItems(group);\n  }; // 防止未设置 id\n\n\n  Category.prototype.processItems = function () {\n    var items = this.get('items');\n    each(items, function (item) {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  }; // 绘制所有的图例选项\n\n\n  Category.prototype.drawItems = function (group) {\n    var _this = this;\n\n    var itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group'\n    });\n    var itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group'\n    });\n    var itemHeight = this.getItemHeight();\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var currentPoint = this.get('currentPoint');\n    var startX = currentPoint.x;\n    var startY = currentPoint.y;\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var wrapped = false;\n    var pageWidth = 0;\n    var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n\n    var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n\n    each(items, function (item, index) {\n      var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n\n      var bbox = subGroup.getBBox();\n      var width = itemWidth || bbox.width;\n\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n\n        _this.moveElementTo(subGroup, currentPoint);\n\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n\n        _this.moveElementTo(subGroup, currentPoint);\n\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  }; // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n\n\n  Category.prototype.getItemHeight = function () {\n    var itemHeight = this.get('itemHeight');\n\n    if (!itemHeight) {\n      var nameCfg = this.get('itemName');\n\n      if (nameCfg) {\n        itemHeight = nameCfg.style.fontSize;\n      }\n    }\n\n    return itemHeight;\n  }; // 绘制 marker\n\n\n  Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n    var markerAttrs = __assign(__assign(__assign({\n      x: 0,\n      y: itemHeight / 2\n    }, markerCfg.style), {\n      symbol: get(item.marker, 'symbol', 'circle')\n    }), get(item.marker, 'style', {}));\n\n    var shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n      name: 'legend-item-marker',\n      attrs: markerAttrs\n    });\n    var bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n\n    var _a = shape.attr(),\n        stroke = _a.stroke,\n        fill = _a.fill;\n\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n\n    if (fill) {\n      shape.set('isFill', true);\n    }\n\n    return shape;\n  }; // 绘制文本\n\n\n  Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n    var formatter = cfg.formatter;\n\n    var attrs = __assign({\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName]\n    }, cfg.style);\n\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n      name: \"legend-item-\" + textName,\n      attrs: attrs\n    });\n  }; // 绘制图例项\n\n\n  Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n    var groupId = \"item-\" + item.id; // 设置单独的 Group 用于 setClip\n\n    var subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(\"item-container-\" + groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var marker = this.get('marker');\n    var itemName = this.get('itemName');\n    var itemValue = this.get('itemValue');\n    var itemBackground = this.get('itemBackground');\n    var itemWidth = this.getLimitItemWidth();\n    var curX = 0; // 记录当前 x 的位置\n\n    if (marker) {\n      var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      curX = markerShape.getBBox().maxX + marker.spacing;\n    }\n\n    if (itemName) {\n      var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n\n    if (itemValue) {\n      var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n    } // 添加透明的背景，便于拾取和包围盒计算\n\n\n    if (itemBackground) {\n      var bbox = subGroup.getBBox();\n      var backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(groupId + \"-background\"),\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight\n        }, itemBackground.style)\n      });\n      backShape.toBack();\n    }\n\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  }; // 加上分页器并重新排序 items\n\n\n  Category.prototype.adjustNavigation = function (container, itemGroup) {\n    var _this = this;\n\n    var startX = this.startX;\n    var startY = this.startY;\n    var layout = this.get('layout');\n    var subGroups = itemGroup.findAll(function (item) {\n      return item.get('name') === 'legend-item';\n    });\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemHeight = this.getItemHeight();\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    var navigationBBox = navigation.getBBox();\n    var currentPoint = {\n      x: startX,\n      y: startY\n    };\n    var pages = 1;\n    var widthLimit = 0;\n    var pageWidth = 0;\n    var maxItemWidth = 0;\n\n    if (layout === 'horizontal') {\n      this.pageHeight = itemHeight;\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        var width = itemWidth || bbox.width;\n\n        if (widthLimit && widthLimit < currentPoint.x + width + itemSpacing || maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            _this.pageWidth = widthLimit;\n\n            _this.moveElementTo(navigation, {\n              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY\n            });\n          }\n\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight;\n        }\n\n        _this.moveElementTo(item, currentPoint);\n\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight\n          }\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      var itemMarginBottom_1 = this.get('itemMarginBottom');\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom_1);\n      var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom_1));\n      each(subGroups, function (item, index) {\n        if (index !== 0 && index % cntPerPage_1 === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n\n        _this.moveElementTo(item, currentPoint);\n\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight\n          }\n        });\n        currentPoint.y += itemHeight + itemMarginBottom_1;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY\n      });\n    }\n\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight\n        }\n      });\n    }\n\n    this.totalPagesCnt = pages;\n\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n\n    this.updateNavigation(navigation); // update initial matrix\n\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  };\n  /**\n   * 绘制分页器\n   */\n\n\n  Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    var subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation'\n    });\n\n    var _a = get(styleCfg.marker, 'style', {}),\n        _b = _a.size,\n        size = _b === void 0 ? 12 : _b,\n        arrowStyle = __rest(_a, [\"size\"]);\n\n    var leftArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-left', layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n    leftArrow.on('click', this.onNavigationBack);\n    var leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n    var textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: __assign({\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text: text,\n        textBaseline: 'middle'\n      }, get(styleCfg.text, 'style'))\n    });\n    var textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n    var rightArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-right', layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n    rightArrow.on('click', this.onNavigationAfter);\n    return subGroup;\n  };\n\n  Category.prototype.updateNavigation = function (navigation) {\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var _a = pageNavigator.marker.style,\n        fill = _a.fill,\n        opacity = _a.opacity,\n        inactiveFill = _a.inactiveFill,\n        inactiveOpacity = _a.inactiveOpacity;\n    var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n    var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    var leftArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-left')) : this.getElementByLocalId('navigation-arrow-left');\n    var rightArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-right')) : this.getElementByLocalId('navigation-arrow-right');\n    var origBBox = textShape.getBBox();\n    textShape.attr('text', text);\n    var newBBox = textShape.getBBox();\n    textShape.attr('x', textShape.attr('x') - (newBBox.width - origBBox.width) / 2); // 更新 left-arrow marker\n\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer'); // 更新 right-arrow marker\n\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n  };\n\n  Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n    var x = currentPoint.x,\n        y = currentPoint.y;\n    var rotateMap = {\n      right: 90 * Math.PI / 180,\n      left: (360 - 90) * Math.PI / 180,\n      up: 0,\n      down: 180 * Math.PI / 180\n    };\n    var shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name: name,\n      attrs: __assign({\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer'\n      }, style)\n    });\n    shape.attr('matrix', getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, rotateMap[direction]));\n    return shape;\n  };\n\n  Category.prototype.getCurrentNavigationMatrix = function () {\n    var _a = this,\n        currentPageIndex = _a.currentPageIndex,\n        pageWidth = _a.pageWidth,\n        pageHeight = _a.pageHeight;\n\n    var layout = this.get('layout');\n    var translate = layout === 'horizontal' ? {\n      x: 0,\n      y: pageHeight * (1 - currentPageIndex)\n    } : {\n      x: pageWidth * (1 - currentPageIndex),\n      y: 0\n    };\n    return getMatrixByTranslate(translate);\n  }; // 附加状态对应的样式\n\n\n  Category.prototype.applyItemStates = function (item, subGroup) {\n    var states = this.getItemStates(item);\n    var hasStates = states.length > 0;\n\n    if (hasStates) {\n      var children = subGroup.getChildren();\n      var itemStates_1 = this.get('itemStates');\n      each(children, function (element) {\n        var name = element.get('name');\n        var elName = name.split('-')[2]; // marker, name, value\n\n        var statesStyle = getStatesStyle(item, elName, itemStates_1);\n\n        if (statesStyle) {\n          element.attr(statesStyle);\n\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  }; // 获取 itemWidth 的最终设置\n\n\n  Category.prototype.getLimitItemWidth = function () {\n    var itemWidth = this.get('itemWidth');\n    var maxItemWidth = this.get('maxItemWidth');\n\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n\n    return maxItemWidth;\n  };\n\n  return Category;\n}(LegendBase);\n\nexport default Category;","map":{"version":3,"sources":["../../src/legend/category.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\n * 分页器 默认配置\n */\nvar DEFAULT_PAGE_NAVIGATOR = {\n    marker: {\n        style: {\n            inactiveFill: '#000',\n            inactiveOpacity: 0.45,\n            fill: '#000',\n            opacity: 1,\n            size: 12,\n        },\n    },\n    text: {\n        style: {\n            fill: '#ccc',\n            fontSize: 12,\n        },\n    },\n};\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.currentPageIndex = 1;\n        _this.totalPagesCnt = 1;\n        _this.pageWidth = 0;\n        _this.pageHeight = 0;\n        _this.startX = 0;\n        _this.startY = 0;\n        _this.onNavigationBack = function () {\n            var itemGroup = _this.getElementByLocalId('item-group');\n            if (_this.currentPageIndex > 1) {\n                _this.currentPageIndex -= 1;\n                _this.updateNavigation();\n                var matrix = _this.getCurrentNavigationMatrix();\n                if (_this.get('animate')) {\n                    itemGroup.animate({\n                        matrix: matrix,\n                    }, 100);\n                }\n                else {\n                    itemGroup.attr({ matrix: matrix });\n                }\n            }\n        };\n        _this.onNavigationAfter = function () {\n            var itemGroup = _this.getElementByLocalId('item-group');\n            if (_this.currentPageIndex < _this.totalPagesCnt) {\n                _this.currentPageIndex += 1;\n                _this.updateNavigation();\n                var matrix = _this.getCurrentNavigationMatrix();\n                if (_this.get('animate')) {\n                    itemGroup.animate({\n                        matrix: matrix,\n                    }, 100);\n                }\n                else {\n                    itemGroup.attr({ matrix: matrix });\n                }\n            }\n        };\n        return _this;\n    }\n    Category.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'legend', type: 'category', itemSpacing: 24, itemMarginBottom: 8, maxItemWidth: null, itemWidth: null, itemHeight: null, itemName: {}, itemValue: null, maxWidth: null, maxHeight: null, marker: {}, items: [], itemStates: {}, itemBackground: {}, pageNavigator: {}, defaultCfg: {\n                title: {\n                    spacing: 5,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'top',\n                    },\n                },\n                background: {\n                    padding: 5,\n                    style: {\n                        stroke: Theme.lineColor,\n                    },\n                },\n                itemBackground: {\n                    style: {\n                        opacity: 0,\n                        fill: '#fff',\n                    },\n                },\n                pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n                itemName: {\n                    spacing: 16,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'middle',\n                    },\n                },\n                marker: {\n                    spacing: 8,\n                    style: {\n                        r: 6,\n                        symbol: 'circle',\n                    },\n                },\n                itemValue: {\n                    alignRight: false,\n                    formatter: null,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'middle',\n                    },\n                },\n                itemStates: {\n                    active: {\n                        nameStyle: {\n                            opacity: 0.8,\n                        },\n                    },\n                    unchecked: {\n                        nameStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                        markerStyle: {\n                            fill: Theme.uncheckedColor,\n                            stroke: Theme.uncheckedColor,\n                        },\n                    },\n                    inactive: {\n                        nameStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                        markerStyle: {\n                            opacity: 0.2,\n                        },\n                    },\n                },\n            } });\n    };\n    // 实现 IList 接口\n    Category.prototype.isList = function () {\n        return true;\n    };\n    /**\n     * 获取图例项\n     * @return {ListItem[]} 列表项集合\n     */\n    Category.prototype.getItems = function () {\n        return this.get('items');\n    };\n    /**\n     * 设置列表项\n     * @param {ListItem[]} items 列表项集合\n     */\n    Category.prototype.setItems = function (items) {\n        this.update({\n            items: items,\n        });\n    };\n    /**\n     * 更新列表项\n     * @param {ListItem} item 列表项\n     * @param {object}   cfg  列表项\n     */\n    Category.prototype.updateItem = function (item, cfg) {\n        mix(item, cfg);\n        this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n        this.render();\n    };\n    /**\n     * 清空列表\n     */\n    Category.prototype.clearItems = function () {\n        var itemGroup = this.getElementByLocalId('item-group');\n        itemGroup && itemGroup.clear();\n    };\n    /**\n     * 设置列表项的状态\n     * @param {ListItem} item  列表项\n     * @param {string}   state 状态名\n     * @param {boolean}  value 状态值, true, false\n     */\n    Category.prototype.setItemState = function (item, state, value) {\n        item[state] = value;\n        var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n        if (itemElement) {\n            var items = this.getItems();\n            var index = items.indexOf(item);\n            var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n            var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n            this.updateElements(newElement, itemElement); // 更新整个分组\n            this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n        }\n    };\n    /**\n     * 是否存在指定的状态\n     * @param {ListItem} item  列表项\n     * @param {boolean} state 状态名\n     */\n    Category.prototype.hasState = function (item, state) {\n        return !!item[state];\n    };\n    Category.prototype.getItemStates = function (item) {\n        var itemStates = this.get('itemStates');\n        var rst = [];\n        each(itemStates, function (v, k) {\n            if (item[k]) {\n                // item.selected\n                rst.push(k);\n            }\n        });\n        return rst;\n    };\n    /**\n     * 清楚所有列表项的状态\n     * @param {string} state 状态值\n     */\n    Category.prototype.clearItemsState = function (state) {\n        var _this = this;\n        var items = this.getItemsByState(state);\n        each(items, function (item) {\n            _this.setItemState(item, state, false);\n        });\n    };\n    /**\n     * 根据状态获取图例项\n     * @param  {string}     state [description]\n     * @return {ListItem[]}       [description]\n     */\n    Category.prototype.getItemsByState = function (state) {\n        var _this = this;\n        var items = this.getItems();\n        return filter(items, function (item) {\n            return _this.hasState(item, state);\n        });\n    };\n    // 绘制 legend 的选项\n    Category.prototype.drawLegendContent = function (group) {\n        this.processItems();\n        this.drawItems(group);\n    };\n    // 防止未设置 id\n    Category.prototype.processItems = function () {\n        var items = this.get('items');\n        each(items, function (item) {\n            if (!item.id) {\n                // 如果没有设置 id，默认使用 name\n                item.id = item.name;\n            }\n        });\n    };\n    // 绘制所有的图例选项\n    Category.prototype.drawItems = function (group) {\n        var _this = this;\n        var itemContainerGroup = this.addGroup(group, {\n            id: this.getElementId('item-container-group'),\n            name: 'legend-item-container-group',\n        });\n        var itemGroup = this.addGroup(itemContainerGroup, {\n            id: this.getElementId('item-group'),\n            name: 'legend-item-group',\n        });\n        var itemHeight = this.getItemHeight();\n        var itemWidth = this.get('itemWidth');\n        var itemSpacing = this.get('itemSpacing');\n        var itemMarginBottom = this.get('itemMarginBottom');\n        var currentPoint = this.get('currentPoint');\n        var startX = currentPoint.x;\n        var startY = currentPoint.y;\n        var layout = this.get('layout');\n        var items = this.get('items');\n        var wrapped = false;\n        var pageWidth = 0;\n        var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n        var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n        // 暂时不考虑分页\n        each(items, function (item, index) {\n            var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n            var bbox = subGroup.getBBox();\n            var width = itemWidth || bbox.width;\n            if (width > pageWidth) {\n                pageWidth = width;\n            }\n            if (layout === 'horizontal') {\n                // 如果水平布局\n                if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n                    // 检测是否换行\n                    wrapped = true;\n                    currentPoint.x = startX;\n                    currentPoint.y += itemHeight + itemMarginBottom;\n                }\n                _this.moveElementTo(subGroup, currentPoint);\n                currentPoint.x += width + itemSpacing;\n            }\n            else {\n                // 如果垂直布局\n                if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n                    // 换行\n                    wrapped = true;\n                    currentPoint.x += pageWidth + itemSpacing;\n                    currentPoint.y = startY;\n                    pageWidth = 0;\n                }\n                _this.moveElementTo(subGroup, currentPoint);\n                currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n            }\n        });\n        if (wrapped && this.get('flipPage')) {\n            this.pageHeight = 0;\n            this.pageWidth = 0;\n            this.totalPagesCnt = 1;\n            this.startX = startX;\n            this.startY = startY;\n            this.adjustNavigation(group, itemGroup);\n        }\n    };\n    // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n    Category.prototype.getItemHeight = function () {\n        var itemHeight = this.get('itemHeight');\n        if (!itemHeight) {\n            var nameCfg = this.get('itemName');\n            if (nameCfg) {\n                itemHeight = nameCfg.style.fontSize;\n            }\n        }\n        return itemHeight;\n    };\n    // 绘制 marker\n    Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n        var markerAttrs = __assign(__assign(__assign({ x: 0, y: itemHeight / 2 }, markerCfg.style), { symbol: get(item.marker, 'symbol', 'circle') }), get(item.marker, 'style', {}));\n        var shape = this.addShape(container, {\n            type: 'marker',\n            id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n            name: 'legend-item-marker',\n            attrs: markerAttrs,\n        });\n        var bbox = shape.getBBox();\n        shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n        var _a = shape.attr(), stroke = _a.stroke, fill = _a.fill;\n        if (stroke) {\n            shape.set('isStroke', true);\n        }\n        if (fill) {\n            shape.set('isFill', true);\n        }\n        return shape;\n    };\n    // 绘制文本\n    Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n        var formatter = cfg.formatter;\n        var attrs = __assign({ x: xPosition, y: itemHeight / 2, text: formatter ? formatter(item[textName], item, index) : item[textName] }, cfg.style);\n        return this.addShape(container, {\n            type: 'text',\n            id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n            name: \"legend-item-\" + textName,\n            attrs: attrs,\n        });\n    };\n    // 绘制图例项\n    Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n        var groupId = \"item-\" + item.id;\n        // 设置单独的 Group 用于 setClip\n        var subContainer = this.addGroup(itemGroup, {\n            name: 'legend-item-container',\n            id: this.getElementId(\"item-container-\" + groupId),\n            delegateObject: {\n                item: item,\n                index: index,\n            },\n        });\n        var subGroup = this.addGroup(subContainer, {\n            name: 'legend-item',\n            id: this.getElementId(groupId),\n            delegateObject: {\n                item: item,\n                index: index,\n            },\n        });\n        var marker = this.get('marker');\n        var itemName = this.get('itemName');\n        var itemValue = this.get('itemValue');\n        var itemBackground = this.get('itemBackground');\n        var itemWidth = this.getLimitItemWidth();\n        var curX = 0; // 记录当前 x 的位置\n        if (marker) {\n            var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n            curX = markerShape.getBBox().maxX + marker.spacing;\n        }\n        if (itemName) {\n            var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n            if (itemWidth) {\n                // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n                ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n            }\n            curX = nameShape.getBBox().maxX + itemName.spacing;\n        }\n        if (itemValue) {\n            var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n            if (itemWidth) {\n                if (itemValue.alignRight) {\n                    valueShape.attr({\n                        textAlign: 'right',\n                        x: itemWidth,\n                    });\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n                }\n                else {\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n                }\n            }\n        }\n        // 添加透明的背景，便于拾取和包围盒计算\n        if (itemBackground) {\n            var bbox = subGroup.getBBox();\n            var backShape = this.addShape(subGroup, {\n                type: 'rect',\n                name: 'legend-item-background',\n                id: this.getElementId(groupId + \"-background\"),\n                attrs: __assign({ x: 0, y: 0, width: bbox.width, height: itemHeight }, itemBackground.style),\n            });\n            backShape.toBack();\n        }\n        this.applyItemStates(item, subGroup);\n        return subGroup;\n    };\n    // 加上分页器并重新排序 items\n    Category.prototype.adjustNavigation = function (container, itemGroup) {\n        var _this = this;\n        var startX = this.startX;\n        var startY = this.startY;\n        var layout = this.get('layout');\n        var subGroups = itemGroup.findAll(function (item) { return item.get('name') === 'legend-item'; });\n        var maxWidth = this.get('maxWidth');\n        var maxHeight = this.get('maxHeight');\n        var itemWidth = this.get('itemWidth');\n        var itemSpacing = this.get('itemSpacing');\n        var itemHeight = this.getItemHeight();\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n        var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n        var navigationBBox = navigation.getBBox();\n        var currentPoint = { x: startX, y: startY };\n        var pages = 1;\n        var widthLimit = 0;\n        var pageWidth = 0;\n        var maxItemWidth = 0;\n        if (layout === 'horizontal') {\n            this.pageHeight = itemHeight;\n            each(subGroups, function (item) {\n                var bbox = item.getBBox();\n                var width = itemWidth || bbox.width;\n                if ((widthLimit && widthLimit < currentPoint.x + width + itemSpacing) ||\n                    maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n                    if (pages === 1) {\n                        widthLimit = currentPoint.x + itemSpacing;\n                        _this.pageWidth = widthLimit;\n                        _this.moveElementTo(navigation, {\n                            x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n                            y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY,\n                        });\n                    }\n                    pages += 1;\n                    currentPoint.x = startX;\n                    currentPoint.y += itemHeight;\n                }\n                _this.moveElementTo(item, currentPoint);\n                item.getParent().setClip({\n                    type: 'rect',\n                    attrs: {\n                        x: currentPoint.x,\n                        y: currentPoint.y,\n                        width: width + itemSpacing,\n                        height: itemHeight,\n                    },\n                });\n                currentPoint.x += width + itemSpacing;\n            });\n        }\n        else {\n            var itemMarginBottom_1 = this.get('itemMarginBottom');\n            each(subGroups, function (item) {\n                var bbox = item.getBBox();\n                if (bbox.width > pageWidth) {\n                    pageWidth = bbox.width;\n                }\n            });\n            maxItemWidth = pageWidth;\n            pageWidth += itemSpacing;\n            if (maxWidth) {\n                // maxWidth 限制加上\n                pageWidth = Math.min(maxWidth, pageWidth);\n                maxItemWidth = Math.min(maxWidth, maxItemWidth);\n            }\n            this.pageWidth = pageWidth;\n            this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom_1);\n            var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom_1));\n            each(subGroups, function (item, index) {\n                if (index !== 0 && index % cntPerPage_1 === 0) {\n                    pages += 1;\n                    currentPoint.x += pageWidth;\n                    currentPoint.y = startY;\n                }\n                _this.moveElementTo(item, currentPoint);\n                item.getParent().setClip({\n                    type: 'rect',\n                    attrs: {\n                        x: currentPoint.x,\n                        y: currentPoint.y,\n                        width: pageWidth,\n                        height: itemHeight,\n                    },\n                });\n                currentPoint.y += itemHeight + itemMarginBottom_1;\n            });\n            this.totalPagesCnt = pages;\n            this.moveElementTo(navigation, {\n                x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n                y: maxHeight - navigationBBox.height - navigationBBox.minY,\n            });\n        }\n        if (this.pageHeight && this.pageWidth) {\n            // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n            itemGroup.getParent().setClip({\n                type: 'rect',\n                attrs: {\n                    x: this.startX,\n                    y: this.startY,\n                    width: this.pageWidth,\n                    height: this.pageHeight,\n                },\n            });\n        }\n        this.totalPagesCnt = pages;\n        if (this.currentPageIndex > this.totalPagesCnt) {\n            this.currentPageIndex = 1;\n        }\n        this.updateNavigation(navigation);\n        // update initial matrix\n        itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n    };\n    /**\n     * 绘制分页器\n     */\n    Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n        var currentPoint = { x: 0, y: 0 };\n        var subGroup = this.addGroup(group, {\n            id: this.getElementId('navigation-group'),\n            name: 'legend-navigation',\n        });\n        var _a = get(styleCfg.marker, 'style', {}), _b = _a.size, size = _b === void 0 ? 12 : _b, arrowStyle = __rest(_a, [\"size\"]);\n        var leftArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-left', layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n        leftArrow.on('click', this.onNavigationBack);\n        var leftArrowBBox = leftArrow.getBBox();\n        currentPoint.x += leftArrowBBox.width + 2;\n        var textShape = this.addShape(subGroup, {\n            type: 'text',\n            id: this.getElementId('navigation-text'),\n            name: 'navigation-text',\n            attrs: __assign({ x: currentPoint.x, y: currentPoint.y + size / 2, text: text, textBaseline: 'middle' }, get(styleCfg.text, 'style')),\n        });\n        var textBBox = textShape.getBBox();\n        currentPoint.x += textBBox.width + 2;\n        var rightArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-right', layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n        rightArrow.on('click', this.onNavigationAfter);\n        return subGroup;\n    };\n    Category.prototype.updateNavigation = function (navigation) {\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n        var _a = pageNavigator.marker.style, fill = _a.fill, opacity = _a.opacity, inactiveFill = _a.inactiveFill, inactiveOpacity = _a.inactiveOpacity;\n        var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n        var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n        var leftArrow = navigation\n            ? navigation.findById(this.getElementId('navigation-arrow-left'))\n            : this.getElementByLocalId('navigation-arrow-left');\n        var rightArrow = navigation\n            ? navigation.findById(this.getElementId('navigation-arrow-right'))\n            : this.getElementByLocalId('navigation-arrow-right');\n        var origBBox = textShape.getBBox();\n        textShape.attr('text', text);\n        var newBBox = textShape.getBBox();\n        textShape.attr('x', textShape.attr('x') - (newBBox.width - origBBox.width) / 2);\n        // 更新 left-arrow marker\n        leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n        leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n        leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n        // 更新 right-arrow marker\n        rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n        rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n        rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n    };\n    Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n        var x = currentPoint.x, y = currentPoint.y;\n        var rotateMap = {\n            right: (90 * Math.PI) / 180,\n            left: ((360 - 90) * Math.PI) / 180,\n            up: 0,\n            down: (180 * Math.PI) / 180,\n        };\n        var shape = this.addShape(group, {\n            type: 'path',\n            id: this.getElementId(name),\n            name: name,\n            attrs: __assign({ path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']], cursor: 'pointer' }, style),\n        });\n        shape.attr('matrix', getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, rotateMap[direction]));\n        return shape;\n    };\n    Category.prototype.getCurrentNavigationMatrix = function () {\n        var _a = this, currentPageIndex = _a.currentPageIndex, pageWidth = _a.pageWidth, pageHeight = _a.pageHeight;\n        var layout = this.get('layout');\n        var translate = layout === 'horizontal'\n            ? {\n                x: 0,\n                y: pageHeight * (1 - currentPageIndex),\n            }\n            : {\n                x: pageWidth * (1 - currentPageIndex),\n                y: 0,\n            };\n        return getMatrixByTranslate(translate);\n    };\n    // 附加状态对应的样式\n    Category.prototype.applyItemStates = function (item, subGroup) {\n        var states = this.getItemStates(item);\n        var hasStates = states.length > 0;\n        if (hasStates) {\n            var children = subGroup.getChildren();\n            var itemStates_1 = this.get('itemStates');\n            each(children, function (element) {\n                var name = element.get('name');\n                var elName = name.split('-')[2]; // marker, name, value\n                var statesStyle = getStatesStyle(item, elName, itemStates_1);\n                if (statesStyle) {\n                    element.attr(statesStyle);\n                    if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n                        // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n                        if (element.get('isStroke')) {\n                            element.attr('fill', null);\n                        }\n                        if (element.get('isFill')) {\n                            element.attr('stroke', null);\n                        }\n                    }\n                }\n            });\n        }\n    };\n    // 获取 itemWidth 的最终设置\n    Category.prototype.getLimitItemWidth = function () {\n        var itemWidth = this.get('itemWidth');\n        var maxItemWidth = this.get('maxItemWidth');\n        if (maxItemWidth) {\n            // 设置了最大宽度\n            if (itemWidth) {\n                maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n            }\n        }\n        else if (itemWidth) {\n            maxItemWidth = itemWidth;\n        }\n        return maxItemWidth;\n    };\n    return Category;\n}(LegendBase));\nexport default Category;\n//# sourceMappingURL=category.js.map"]},"metadata":{},"sourceType":"module"}