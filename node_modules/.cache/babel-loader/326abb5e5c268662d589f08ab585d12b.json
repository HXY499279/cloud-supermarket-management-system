{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport RangeFilter from './range-filter';\nimport { getSilbings } from '../util';\n/**\n * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。\n * @ignore\n */\n\nvar SiblingFilter =\n/** @class */\nfunction (_super) {\n  __extends(SiblingFilter, _super);\n\n  function SiblingFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 对 view 进行过滤\n   * @param view\n   * @param field\n   * @param filter\n   */\n\n\n  SiblingFilter.prototype.filterView = function (view, field, filter) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.filter(field, filter);\n    });\n  };\n  /**\n   * 重新渲染\n   * @param view\n   */\n\n\n  SiblingFilter.prototype.reRender = function (view) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.render(true);\n    });\n  };\n\n  return SiblingFilter;\n}(RangeFilter);\n\nexport default SiblingFilter;","map":{"version":3,"sources":["../../../../src/interaction/action/data/sibling-filter.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,YAArB;AAGA,OAAO,WAAP,MAAwB,gBAAxB;AAEA,SAAS,WAAT,QAA4B,SAA5B;AAEA;;;AAGG;;AACH,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAA5B,WAAA,aAAA,GAAA;;AAwBC;AAvBC;;;;;AAKG;;;AACO,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAV,UAAqB,IAArB,EAAiC,KAAjC,EAAgD,MAAhD,EAAuE;AACrE,QAAM,QAAQ,GAAG,WAAW,CAAC,IAAD,CAA5B;AACA,IAAA,IAAI,CAAC,QAAD,EAAW,UAAC,OAAD,EAAQ;AACrB,MAAA,OAAO,CAAC,MAAR,CAAe,KAAf,EAAsB,MAAtB;AACD,KAFG,CAAJ;AAGD,GALS;AAOV;;;AAGG;;;AACO,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,IAAnB,EAA6B;AAC3B,QAAM,QAAQ,GAAG,WAAW,CAAC,IAAD,CAA5B;AACA,IAAA,IAAI,CAAC,QAAD,EAAW,UAAC,OAAD,EAAQ;AACrB,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf;AACD,KAFG,CAAJ;AAGD,GALS;;AAMZ,SAAA,aAAA;AAAC,CAxBD,CAA4B,WAA5B,CAAA;;AA0BA,eAAe,aAAf","sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../../../chart';\nimport { FilterCondition } from '../../../interface';\nimport RangeFilter from './range-filter';\n\nimport { getSilbings } from '../util';\n\n/**\n * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。\n * @ignore\n */\nclass SiblingFilter extends RangeFilter {\n  /**\n   * 对 view 进行过滤\n   * @param view\n   * @param field\n   * @param filter\n   */\n  protected filterView(view: View, field: string, filter: FilterCondition) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.filter(field, filter);\n    });\n  }\n\n  /**\n   * 重新渲染\n   * @param view\n   */\n  protected reRender(view: View) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.render(true);\n    });\n  }\n}\n\nexport default SiblingFilter;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}