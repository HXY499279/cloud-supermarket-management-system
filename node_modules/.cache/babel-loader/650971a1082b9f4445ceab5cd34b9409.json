{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getElements, getIntersectElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\nimport StateBase from './state-base';\n/**\n * @ignore\n * 区域设置状态的基础 Action\n */\n\nvar ElementRangeState =\n/** @class */\nfunction (_super) {\n  __extends(ElementRangeState, _super);\n\n  function ElementRangeState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.startPoint = null;\n    _this.endPoint = null;\n    _this.isStarted = false;\n    /**\n     * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己\n     */\n\n    _this.effectSiblings = false;\n    /**\n     * 是否受 element 的数据影响，还是受包围盒的影响\n     */\n\n    _this.effectByRecord = false;\n    return _this;\n  } // 获取当前的位置\n\n\n  ElementRangeState.prototype.getCurrentPoint = function () {\n    var event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y\n    };\n  };\n  /**\n   * 开始，记录开始选中的位置\n   */\n\n\n  ElementRangeState.prototype.start = function () {\n    this.clear(); // 开始的时候清理之前的状态\n\n    this.startPoint = this.getCurrentPoint();\n    this.isStarted = true;\n  };\n\n  ElementRangeState.prototype.getIntersectElements = function () {\n    var elements = null;\n\n    if (isMask(this.context)) {\n      elements = getMaskedElements(this.context, 10);\n    } else {\n      var startPoint = this.startPoint;\n      var endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint; // 如果没有开始，则不允许范围设置状态，保护性质\n\n      if (!startPoint || !endPoint) {\n        return;\n      } // 计算框选区域\n\n\n      var box = {\n        minX: Math.min(startPoint.x, endPoint.x),\n        minY: Math.min(startPoint.y, endPoint.y),\n        maxX: Math.max(startPoint.x, endPoint.x),\n        maxY: Math.max(startPoint.y, endPoint.y)\n      }; // this.clear(); // 不全部清理，会导致闪烁\n\n      var view = this.context.view;\n      elements = getIntersectElements(view, box);\n    }\n\n    return elements;\n  };\n  /**\n   * 选中\n   */\n\n\n  ElementRangeState.prototype.setStateEnable = function (enable) {\n    if (this.effectSiblings && !this.effectByRecord) {\n      this.setSiblingsState(enable);\n    } else {\n      var allElements = getElements(this.context.view);\n      var elements = this.getIntersectElements();\n\n      if (elements && elements.length) {\n        if (this.effectByRecord) {\n          this.setSiblingsStateByRecord(elements, enable);\n        } else {\n          this.setElementsState(elements, enable, allElements);\n        }\n      } else {\n        this.clear();\n      }\n    }\n  }; // 根据选中的 element 的数据进行设置状态\n\n\n  ElementRangeState.prototype.setSiblingsStateByRecord = function (elements, enable) {\n    var _this = this;\n\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n    var records = elements.map(function (el) {\n      return el.getModel().data;\n    });\n    var xFiled = view.getXScale().field;\n    var yField = view.getYScales()[0].field;\n    each(siblings, function (sibling) {\n      var allElements = getElements(sibling);\n      var effectElements = allElements.filter(function (el) {\n        var record = el.getModel().data;\n        return isInRecords(records, record, xFiled, yField);\n      });\n\n      _this.setElementsState(effectElements, enable, allElements);\n    });\n  }; // 设置兄弟 view 的状态\n\n\n  ElementRangeState.prototype.setSiblingsState = function (enable) {\n    var _this = this;\n\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n\n    if (isMask(this.context)) {\n      // 受 mask 影响\n      each(siblings, function (sibling) {\n        var allElements = getElements(sibling);\n        var effectElements = getSiblingMaskElements(_this.context, sibling, 10);\n\n        if (effectElements && effectElements.length) {\n          _this.setElementsState(effectElements, enable, allElements);\n        } else {\n          _this.clearViewState(sibling);\n        }\n      });\n    }\n  };\n\n  ElementRangeState.prototype.setElementsState = function (elements, enable, allElements) {\n    var _this = this;\n\n    each(allElements, function (el) {\n      if (!elements.includes(el)) {\n        _this.setElementState(el, false);\n      } else {\n        _this.setElementState(el, enable);\n      }\n    });\n  };\n  /**\n   * 结束\n   */\n\n\n  ElementRangeState.prototype.end = function () {\n    this.isStarted = false;\n    this.endPoint = this.getCurrentPoint();\n  }; // 复写 clear\n\n\n  ElementRangeState.prototype.clear = function () {\n    var _this = this;\n\n    var view = this.context.view; // 判断是否影响 siblings\n\n    if (this.effectSiblings) {\n      var siblings = getSilbings(view);\n      each(siblings, function (sibling) {\n        _this.clearViewState(sibling);\n      });\n    } else {\n      this.clearViewState(view);\n    }\n  };\n\n  return ElementRangeState;\n}(StateBase);\n\nexport default ElementRangeState;","map":{"version":3,"sources":["../../../../src/interaction/action/element/range-state.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport Element from '../../../geometry/element/';\nimport {\n  getElements,\n  getIntersectElements,\n  getMaskedElements,\n  getSiblingMaskElements,\n  getSilbings,\n  isInRecords,\n  isMask,\n} from '../util';\nimport StateBase from './state-base';\n\n/**\n * @ignore\n * 区域设置状态的基础 Action\n */\nclass ElementRangeState extends StateBase {\n  private startPoint = null;\n  private endPoint = null;\n  private isStarted: boolean = false;\n  /**\n   * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己\n   */\n  protected effectSiblings = false;\n  /**\n   * 是否受 element 的数据影响，还是受包围盒的影响\n   */\n  protected effectByRecord = false;\n  // 获取当前的位置\n  private getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n\n  /**\n   * 开始，记录开始选中的位置\n   */\n  public start() {\n    this.clear(); // 开始的时候清理之前的状态\n    this.startPoint = this.getCurrentPoint();\n    this.isStarted = true;\n  }\n\n  private getIntersectElements() {\n    let elements = null;\n    if (isMask(this.context)) {\n      elements = getMaskedElements(this.context, 10);\n    } else {\n      const startPoint = this.startPoint;\n      const endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint;\n      // 如果没有开始，则不允许范围设置状态，保护性质\n      if (!startPoint || !endPoint) {\n        return;\n      }\n      // 计算框选区域\n      const box = {\n        minX: Math.min(startPoint.x, endPoint.x),\n        minY: Math.min(startPoint.y, endPoint.y),\n        maxX: Math.max(startPoint.x, endPoint.x),\n        maxY: Math.max(startPoint.y, endPoint.y),\n      };\n      // this.clear(); // 不全部清理，会导致闪烁\n      const view = this.context.view;\n      elements = getIntersectElements(view, box);\n    }\n    return elements;\n  }\n  /**\n   * 选中\n   */\n  public setStateEnable(enable: boolean) {\n    if (this.effectSiblings && !this.effectByRecord) {\n      this.setSiblingsState(enable);\n    } else {\n      const allElements = getElements(this.context.view);\n      const elements = this.getIntersectElements();\n      if (elements && elements.length) {\n        if (this.effectByRecord) {\n          this.setSiblingsStateByRecord(elements, enable);\n        } else {\n          this.setElementsState(elements, enable, allElements);\n        }\n      } else {\n        this.clear();\n      }\n    }\n  }\n  // 根据选中的 element 的数据进行设置状态\n  private setSiblingsStateByRecord(elements, enable) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    const records = elements.map((el) => {\n      return el.getModel().data;\n    });\n    const xFiled = view.getXScale().field;\n    const yField = view.getYScales()[0].field;\n    each(siblings, (sibling) => {\n      const allElements = getElements(sibling);\n      const effectElements = allElements.filter((el) => {\n        const record = el.getModel().data;\n        return isInRecords(records, record, xFiled, yField);\n      });\n      this.setElementsState(effectElements, enable, allElements);\n    });\n  }\n\n  // 设置兄弟 view 的状态\n  private setSiblingsState(enable: boolean) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    if (isMask(this.context)) {\n      // 受 mask 影响\n      each(siblings, (sibling) => {\n        const allElements = getElements(sibling);\n        const effectElements = getSiblingMaskElements(this.context, sibling, 10);\n        if (effectElements && effectElements.length) {\n          this.setElementsState(effectElements, enable, allElements);\n        } else {\n          this.clearViewState(sibling);\n        }\n      });\n    }\n  }\n\n  protected setElementsState(elements: Element[], enable, allElements: Element[]) {\n    each(allElements, (el) => {\n      if (!elements.includes(el)) {\n        this.setElementState(el, false);\n      } else {\n        this.setElementState(el, enable);\n      }\n    });\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.isStarted = false;\n    this.endPoint = this.getCurrentPoint();\n  }\n\n  // 复写 clear\n  public clear() {\n    const view = this.context.view;\n    // 判断是否影响 siblings\n    if (this.effectSiblings) {\n      const siblings = getSilbings(view);\n      each(siblings, (sibling) => {\n        this.clearViewState(sibling);\n      });\n    } else {\n      this.clearViewState(view);\n    }\n  }\n}\n\nexport default ElementRangeState;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}