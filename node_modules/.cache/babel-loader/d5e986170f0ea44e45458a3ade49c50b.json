{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\n\nvar ContinueLegend =\n/** @class */\nfunction (_super) {\n  __extends(ContinueLegend, _super);\n\n  function ContinueLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ContinueLegend.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5,\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily\n          }\n        },\n        handler: {\n          size: 10,\n          style: {\n            fill: '#fff',\n            stroke: '#333'\n          }\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2'\n          }\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        }\n      }\n    });\n  };\n\n  ContinueLegend.prototype.isSlider = function () {\n    return true;\n  }; // 实现 IList 接口\n\n\n  ContinueLegend.prototype.getValue = function () {\n    return this.getCurrentValue();\n  };\n\n  ContinueLegend.prototype.getRange = function () {\n    return {\n      min: this.get('min'),\n      max: this.get('max')\n    };\n  }; // 改变 range\n\n\n  ContinueLegend.prototype.setRange = function (min, max) {\n    this.update({\n      min: min,\n      max: max\n    });\n  };\n\n  ContinueLegend.prototype.setValue = function (value) {\n    var originValue = this.getValue();\n    this.set('value', value);\n    var group = this.get('group');\n    this.resetTrackClip();\n\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n\n    this.delegateEmit('valuechanged', {\n      originValue: originValue,\n      value: value\n    });\n  };\n\n  ContinueLegend.prototype.initEvent = function () {\n    var group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  };\n\n  ContinueLegend.prototype.drawLegendContent = function (group) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  };\n\n  ContinueLegend.prototype.bindSliderEvent = function (group) {\n    this.bindHandlersEvent(group);\n  };\n\n  ContinueLegend.prototype.bindHandlersEvent = function (group) {\n    var _this = this;\n\n    group.on('legend-handler-min:drag', function (ev) {\n      var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n\n      var currentValue = _this.getCurrentValue();\n\n      var maxValue = currentValue[1];\n\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n\n      _this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', function (ev) {\n      var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n\n      var currentValue = _this.getCurrentValue();\n\n      var minValue = currentValue[0];\n\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n\n      _this.setValue([minValue, maxValue]);\n    });\n  };\n\n  ContinueLegend.prototype.bindRailEvent = function (group) {};\n\n  ContinueLegend.prototype.bindTrackEvent = function (group) {\n    var _this = this;\n\n    var prePoint = null;\n    group.on('legend-track:dragstart', function (ev) {\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:drag', function (ev) {\n      if (!prePoint) {\n        return;\n      }\n\n      var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n\n      var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n\n      var currentValue = _this.getCurrentValue();\n\n      var curDiff = currentValue[1] - currentValue[0];\n\n      var range = _this.getRange();\n\n      var dValue = curValue - preValue;\n\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.min, range.min + curDiff]);\n        } //  && ||\n\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:dragend', function (ev) {\n      prePoint = null;\n    });\n  };\n\n  ContinueLegend.prototype.drawLabels = function (group) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  };\n\n  ContinueLegend.prototype.drawLabel = function (name, group) {\n    var labelCfg = this.get('label');\n    var style = labelCfg.style;\n    var labelAlign = labelCfg.align;\n    var labelFormatter = labelCfg.formatter;\n    var value = this.get(name);\n    var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    var localId = \"label-\" + name;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: \"legend-label-\" + name,\n      attrs: __assign(__assign({\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value\n      }, style), alignAttrs)\n    });\n  }; // 获取文本的对齐方式，为了自适应真实操碎了心\n\n\n  ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n    var isVertical = this.isVertical();\n    var textAlign = 'center';\n    var textBaseline = 'middle';\n\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n\n    return {\n      textAlign: textAlign,\n      textBaseline: textBaseline\n    };\n  };\n\n  ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n    var railCfg = this.get('rail');\n    var size = railCfg.size,\n        defaultLength = railCfg.defaultLength,\n        type = railCfg.type;\n    var isVertical = this.isVertical();\n    var length = defaultLength;\n    var width = w;\n    var height = h;\n\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n\n    var path = [];\n\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n\n    return path;\n  };\n\n  ContinueLegend.prototype.drawRail = function (group) {\n    var railCfg = this.get('rail');\n    var style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: __assign({\n        path: this.getRailPath(0, 0)\n      }, style)\n    });\n  }; // 将传入的颜色转换成渐变色\n\n\n  ContinueLegend.prototype.getTrackColor = function (colors) {\n    var count = colors.length;\n\n    if (!count) {\n      return null;\n    }\n\n    if (count === 1) {\n      return colors[0];\n    }\n\n    var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n\n    for (var i = 0; i < count; i++) {\n      var percent = i / (count - 1);\n      color += \" \" + percent + \":\" + colors[i];\n    }\n\n    return color;\n  };\n\n  ContinueLegend.prototype.getTrackPath = function (group) {\n    var railShape = this.getRailShape(group);\n    var path = railShape.attr('path');\n    return clone(path);\n  };\n\n  ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n    var value = this.getCurrentValue();\n    var min = value[0],\n        max = value[1];\n    var railBBox = this.getRailBBox(group);\n    var startPoint = this.getPointByValue(min, group);\n    var endPoint = this.getPointByValue(max, group);\n    var isVertical = this.isVertical();\n    var x;\n    var y;\n    var width;\n    var height;\n\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }; // 获取 track 的属性，由 path 和 颜色构成\n\n\n  ContinueLegend.prototype.getTrackAttrs = function (group) {\n    var trackCfg = this.get('track');\n    var colors = this.get('colors');\n    var path = this.getTrackPath(group);\n    return mix({\n      path: path,\n      fill: this.getTrackColor(colors)\n    }, trackCfg.style);\n  };\n\n  ContinueLegend.prototype.resetTrackClip = function (group) {\n    var container = group || this.get('group');\n    var trackId = this.getElementId('track');\n    var trackShape = container.findById(trackId);\n    var clipShape = trackShape.getClip();\n    var attrs = this.getClipTrackAttrs(group);\n\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs: attrs\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  };\n\n  ContinueLegend.prototype.resetTrack = function (group) {\n    var trackId = this.getElementId('track');\n    var trackShape = group.findById(trackId);\n    var trackAttrs = this.getTrackAttrs(group);\n\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs\n      });\n    }\n  };\n\n  ContinueLegend.prototype.getPointByValue = function (value, group) {\n    var _a = this.getRange(),\n        min = _a.min,\n        max = _a.max;\n\n    var percent = (value - min) / (max - min);\n    var bbox = this.getRailBBox(group);\n    var isVertcal = this.isVertical();\n    var point = {\n      x: 0,\n      y: 0\n    };\n\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n\n    return point;\n  };\n\n  ContinueLegend.prototype.getRailShape = function (group) {\n    var container = group || this.get('group');\n    return container.findById(this.getElementId('rail'));\n  }; // 获取滑轨的宽高信息\n\n\n  ContinueLegend.prototype.getRailBBox = function (group) {\n    var railShape = this.getRailShape(group);\n    var bbox = railShape.getBBox();\n    return bbox;\n  };\n\n  ContinueLegend.prototype.getRailCanvasBBox = function () {\n    var container = this.get('group');\n    var railShape = container.findById(this.getElementId('rail'));\n    var bbox = railShape.getCanvasBBox();\n    return bbox;\n  }; // 是否垂直\n\n\n  ContinueLegend.prototype.isVertical = function () {\n    return this.get('layout') === 'vertical';\n  }; // 用于交互时\n\n\n  ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n    var _a = this.getRange(),\n        min = _a.min,\n        max = _a.max;\n\n    var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n\n    var isVertcal = this.isVertical();\n    var step = this.get('step');\n    var percent;\n\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n\n    var value = getValueByPercent(min, max, percent);\n\n    if (step) {\n      var count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n\n    if (value > max) {\n      value = max;\n    }\n\n    if (value < min) {\n      value = min;\n    }\n\n    return value;\n  }; // 当前选中的范围\n\n\n  ContinueLegend.prototype.getCurrentValue = function () {\n    var value = this.get('value');\n\n    if (!value) {\n      // 如果没有定义，取最大范围\n      value = [this.get('min'), this.get('max')];\n    }\n\n    return value;\n  }; // 重置滑块 handler\n\n\n  ContinueLegend.prototype.resetHandlers = function (group) {\n    var currentValue = this.getCurrentValue();\n    var min = currentValue[0],\n        max = currentValue[1];\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  }; // 获取滑块的 path\n\n\n  ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n    var isVertical = this.isVertical();\n    var path = [];\n    var width = handlerCfg.size;\n    var x = point.x,\n        y = point.y;\n    var height = width * HANDLER_HEIGHT_RATIO;\n    var halfWidth = width / 2;\n    var oneSixthWidth = width / 6;\n\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']); // 绘制两条横线\n\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']); // 绘制两条竖线\n\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n\n    return path;\n  }; // 调整 handler 的位置，如果未存在则绘制\n\n\n  ContinueLegend.prototype.resetHandler = function (group, name, value) {\n    var point = this.getPointByValue(value, group);\n    var handlerCfg = this.get('handler');\n    var path = this.getHandlerPath(handlerCfg, point);\n    var id = this.getElementId(\"handler-\" + name);\n    var handlerShape = group.findById(id);\n    var isVertical = this.isVertical();\n\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: \"legend-handler-\" + name,\n        draggable: true,\n        id: id,\n        attrs: __assign(__assign({\n          path: path\n        }, handlerCfg.style), {\n          cursor: isVertical ? 'ns-resize' : 'ew-resize'\n        })\n      });\n    }\n  }; // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n\n\n  ContinueLegend.prototype.fixedElements = function (group) {\n    var railShape = group.findById(this.getElementId('rail'));\n    var minLabel = group.findById(this.getElementId('label-min'));\n    var maxLabel = group.findById(this.getElementId('label-max'));\n    var startPoint = this.getDrawPoint();\n\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  };\n\n  ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    var isVertical = this.isVertical();\n    var lengthField = isVertical ? 'height' : 'width';\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n\n    if (maxLength) {\n      var elementsLength = labelAlign === 'rail' ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2 : railBBox[lengthField];\n      var diff = elementsLength - maxLength;\n\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  };\n\n  ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n    var bbox = railShape.getBBox();\n    var path;\n\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n\n    railShape.attr('path', path);\n  };\n\n  ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n    var bbox = railShape.getBBox();\n    var path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  };\n\n  ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing\n      });\n    }\n  };\n\n  ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height\n      });\n    } else {\n      // left\n      var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height\n      });\n    }\n  };\n\n  return ContinueLegend;\n}(LegendBase);\n\nexport default ContinueLegend;","map":{"version":3,"sources":["../../src/legend/continuous.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */ (function (_super) {\n    __extends(ContinueLegend, _super);\n    function ContinueLegend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContinueLegend.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'continue', min: 0, max: 100, value: null, colors: [], track: {}, rail: {}, label: {}, handler: {}, slidable: true, tip: null, step: null, maxWidth: null, maxHeight: null, defaultCfg: {\n                label: {\n                    align: 'rail',\n                    spacing: 5,\n                    formatter: null,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n                handler: {\n                    size: 10,\n                    style: {\n                        fill: '#fff',\n                        stroke: '#333',\n                    },\n                },\n                track: {},\n                rail: {\n                    type: 'color',\n                    size: 20,\n                    defaultLength: 100,\n                    style: {\n                        fill: '#DCDEE2',\n                    },\n                },\n                title: {\n                    spacing: 5,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'top',\n                    },\n                },\n            } });\n    };\n    ContinueLegend.prototype.isSlider = function () {\n        return true;\n    };\n    // 实现 IList 接口\n    ContinueLegend.prototype.getValue = function () {\n        return this.getCurrentValue();\n    };\n    ContinueLegend.prototype.getRange = function () {\n        return {\n            min: this.get('min'),\n            max: this.get('max'),\n        };\n    };\n    // 改变 range\n    ContinueLegend.prototype.setRange = function (min, max) {\n        this.update({\n            min: min,\n            max: max,\n        });\n    };\n    ContinueLegend.prototype.setValue = function (value) {\n        var originValue = this.getValue();\n        this.set('value', value);\n        var group = this.get('group');\n        this.resetTrackClip();\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n        this.delegateEmit('valuechanged', {\n            originValue: originValue,\n            value: value,\n        });\n    };\n    ContinueLegend.prototype.initEvent = function () {\n        var group = this.get('group');\n        this.bindSliderEvent(group);\n        this.bindRailEvent(group);\n        this.bindTrackEvent(group);\n    };\n    ContinueLegend.prototype.drawLegendContent = function (group) {\n        this.drawRail(group);\n        this.drawLabels(group);\n        this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n        this.resetTrack(group);\n        this.resetTrackClip(group);\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n    };\n    ContinueLegend.prototype.bindSliderEvent = function (group) {\n        this.bindHandlersEvent(group);\n    };\n    ContinueLegend.prototype.bindHandlersEvent = function (group) {\n        var _this = this;\n        group.on('legend-handler-min:drag', function (ev) {\n            var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var maxValue = currentValue[1];\n            if (maxValue < minValue) {\n                // 如果小于最小值，则调整最小值\n                maxValue = minValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n        group.on('legend-handler-max:drag', function (ev) {\n            var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var minValue = currentValue[0];\n            if (minValue > maxValue) {\n                // 如果小于最小值，则调整最小值\n                minValue = maxValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n    };\n    ContinueLegend.prototype.bindRailEvent = function (group) { };\n    ContinueLegend.prototype.bindTrackEvent = function (group) {\n        var _this = this;\n        var prePoint = null;\n        group.on('legend-track:dragstart', function (ev) {\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:drag', function (ev) {\n            if (!prePoint) {\n                return;\n            }\n            var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n            var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var curDiff = currentValue[1] - currentValue[0];\n            var range = _this.getRange();\n            var dValue = curValue - preValue;\n            if (dValue < 0) {\n                // 减小, 同时未出边界\n                if (currentValue[0] + dValue > range.min) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.min, range.min + curDiff]);\n                }\n                //  && ||\n            }\n            else if (dValue > 0) {\n                if (dValue > 0 && currentValue[1] + dValue < range.max) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.max - curDiff, range.max]);\n                }\n            }\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:dragend', function (ev) {\n            prePoint = null;\n        });\n    };\n    ContinueLegend.prototype.drawLabels = function (group) {\n        this.drawLabel('min', group);\n        this.drawLabel('max', group);\n    };\n    ContinueLegend.prototype.drawLabel = function (name, group) {\n        var labelCfg = this.get('label');\n        var style = labelCfg.style;\n        var labelAlign = labelCfg.align;\n        var labelFormatter = labelCfg.formatter;\n        var value = this.get(name);\n        var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n        var localId = \"label-\" + name;\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId(localId),\n            name: \"legend-label-\" + name,\n            attrs: __assign(__assign({ x: 0, y: 0, text: isFunction(labelFormatter) ? labelFormatter(value) : value }, style), alignAttrs),\n        });\n    };\n    // 获取文本的对齐方式，为了自适应真实操碎了心\n    ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n        var isVertical = this.isVertical();\n        var textAlign = 'center';\n        var textBaseline = 'middle';\n        if (isVertical) {\n            // 垂直布局的所有的文本都左对齐\n            textAlign = 'start';\n            if (align !== 'rail') {\n                if (name === 'min') {\n                    textBaseline = 'top';\n                }\n                else {\n                    textBaseline = 'bottom';\n                }\n            }\n            else {\n                textBaseline = 'top';\n            }\n        }\n        else {\n            if (align !== 'rail') {\n                textBaseline = 'top';\n                if (name === 'min') {\n                    textAlign = 'start';\n                }\n                else {\n                    textAlign = 'end';\n                }\n            }\n            else {\n                textAlign = 'start';\n                textBaseline = 'middle';\n            }\n        }\n        return {\n            textAlign: textAlign,\n            textBaseline: textBaseline,\n        };\n    };\n    ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n        var railCfg = this.get('rail');\n        var size = railCfg.size, defaultLength = railCfg.defaultLength, type = railCfg.type;\n        var isVertical = this.isVertical();\n        var length = defaultLength;\n        var width = w;\n        var height = h;\n        if (!width) {\n            width = isVertical ? size : length;\n        }\n        if (!height) {\n            height = isVertical ? length : size;\n        }\n        var path = [];\n        if (type === 'color') {\n            path.push(['M', x, y]);\n            path.push(['L', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        else {\n            path.push(['M', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        return path;\n    };\n    ContinueLegend.prototype.drawRail = function (group) {\n        var railCfg = this.get('rail');\n        var style = railCfg.style;\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('rail'),\n            name: 'legend-rail',\n            attrs: __assign({ path: this.getRailPath(0, 0) }, style),\n        });\n    };\n    // 将传入的颜色转换成渐变色\n    ContinueLegend.prototype.getTrackColor = function (colors) {\n        var count = colors.length;\n        if (!count) {\n            return null;\n        }\n        if (count === 1) {\n            return colors[0];\n        }\n        var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n        if (this.isVertical()) {\n            // 根据方向设置渐变方向\n            color = 'l(90)';\n        }\n        else {\n            color = 'l(0)';\n        }\n        for (var i = 0; i < count; i++) {\n            var percent = i / (count - 1);\n            color += \" \" + percent + \":\" + colors[i];\n        }\n        return color;\n    };\n    ContinueLegend.prototype.getTrackPath = function (group) {\n        var railShape = this.getRailShape(group);\n        var path = railShape.attr('path');\n        return clone(path);\n    };\n    ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n        var value = this.getCurrentValue();\n        var min = value[0], max = value[1];\n        var railBBox = this.getRailBBox(group);\n        var startPoint = this.getPointByValue(min, group);\n        var endPoint = this.getPointByValue(max, group);\n        var isVertical = this.isVertical();\n        var x;\n        var y;\n        var width;\n        var height;\n        if (isVertical) {\n            x = railBBox.minX;\n            y = startPoint.y;\n            width = railBBox.width;\n            height = endPoint.y - startPoint.y;\n        }\n        else {\n            x = startPoint.x;\n            y = railBBox.minY;\n            width = endPoint.x - startPoint.x;\n            height = railBBox.height;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    };\n    // 获取 track 的属性，由 path 和 颜色构成\n    ContinueLegend.prototype.getTrackAttrs = function (group) {\n        var trackCfg = this.get('track');\n        var colors = this.get('colors');\n        var path = this.getTrackPath(group);\n        return mix({\n            path: path,\n            fill: this.getTrackColor(colors),\n        }, trackCfg.style);\n    };\n    ContinueLegend.prototype.resetTrackClip = function (group) {\n        var container = group || this.get('group');\n        var trackId = this.getElementId('track');\n        var trackShape = container.findById(trackId);\n        var clipShape = trackShape.getClip();\n        var attrs = this.getClipTrackAttrs(group);\n        if (!clipShape) {\n            trackShape.setClip({\n                type: 'rect',\n                attrs: attrs,\n            });\n        }\n        else {\n            clipShape.attr(attrs);\n        }\n    };\n    ContinueLegend.prototype.resetTrack = function (group) {\n        var trackId = this.getElementId('track');\n        var trackShape = group.findById(trackId);\n        var trackAttrs = this.getTrackAttrs(group);\n        if (trackShape) {\n            trackShape.attr(trackAttrs);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                id: trackId,\n                draggable: this.get('slidable'),\n                name: 'legend-track',\n                attrs: trackAttrs,\n            });\n        }\n    };\n    ContinueLegend.prototype.getPointByValue = function (value, group) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var percent = (value - min) / (max - min);\n        var bbox = this.getRailBBox(group);\n        var isVertcal = this.isVertical();\n        var point = { x: 0, y: 0 };\n        if (isVertcal) {\n            point.x = bbox.minX + bbox.width / 2;\n            point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n        }\n        else {\n            point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n            point.y = bbox.minY + bbox.height / 2;\n        }\n        return point;\n    };\n    ContinueLegend.prototype.getRailShape = function (group) {\n        var container = group || this.get('group');\n        return container.findById(this.getElementId('rail'));\n    };\n    // 获取滑轨的宽高信息\n    ContinueLegend.prototype.getRailBBox = function (group) {\n        var railShape = this.getRailShape(group);\n        var bbox = railShape.getBBox();\n        return bbox;\n    };\n    ContinueLegend.prototype.getRailCanvasBBox = function () {\n        var container = this.get('group');\n        var railShape = container.findById(this.getElementId('rail'));\n        var bbox = railShape.getCanvasBBox();\n        return bbox;\n    };\n    // 是否垂直\n    ContinueLegend.prototype.isVertical = function () {\n        return this.get('layout') === 'vertical';\n    };\n    // 用于交互时\n    ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n        var isVertcal = this.isVertical();\n        var step = this.get('step');\n        var percent;\n        if (isVertcal) {\n            // 垂直时计算 y\n            percent = (y - bbox.minY) / bbox.height;\n        }\n        else {\n            // 水平时计算 x\n            percent = (x - bbox.minX) / bbox.width;\n        }\n        var value = getValueByPercent(min, max, percent);\n        if (step) {\n            var count = Math.round((value - min) / step);\n            value = min + count * step; // 移动到最近的\n        }\n        if (value > max) {\n            value = max;\n        }\n        if (value < min) {\n            value = min;\n        }\n        return value;\n    };\n    // 当前选中的范围\n    ContinueLegend.prototype.getCurrentValue = function () {\n        var value = this.get('value');\n        if (!value) {\n            // 如果没有定义，取最大范围\n            value = [this.get('min'), this.get('max')];\n        }\n        return value;\n    };\n    // 重置滑块 handler\n    ContinueLegend.prototype.resetHandlers = function (group) {\n        var currentValue = this.getCurrentValue();\n        var min = currentValue[0], max = currentValue[1];\n        this.resetHandler(group, 'min', min);\n        this.resetHandler(group, 'max', max);\n    };\n    // 获取滑块的 path\n    ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n        var isVertical = this.isVertical();\n        var path = [];\n        var width = handlerCfg.size;\n        var x = point.x, y = point.y;\n        var height = width * HANDLER_HEIGHT_RATIO;\n        var halfWidth = width / 2;\n        var oneSixthWidth = width / 6;\n        if (isVertical) {\n            /**\n             * 竖直情况下的滑块 handler，左侧顶点是 x,y\n             *  /----|\n             *    -- |\n             *    -- |\n             *  \\----|\n             */\n            var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', triangleX, y + halfWidth]);\n            path.push(['L', x + height, y + halfWidth]);\n            path.push(['L', x + height, y - halfWidth]);\n            path.push(['L', triangleX, y - halfWidth]);\n            path.push(['Z']);\n            // 绘制两条横线\n            path.push(['M', triangleX, y + oneSixthWidth]);\n            path.push(['L', x + height - 2, y + oneSixthWidth]);\n            path.push(['M', triangleX, y - oneSixthWidth]);\n            path.push(['L', x + height - 2, y - oneSixthWidth]);\n        }\n        else {\n            /**\n             * 水平情况下的滑块，上面顶点处是 x,y\n             *  /   \\\n             * | | | |\n             * | | | |\n             *  -----\n             */\n            var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', x - halfWidth, triangleY]);\n            path.push(['L', x - halfWidth, y + height]);\n            path.push(['L', x + halfWidth, y + height]);\n            path.push(['L', x + halfWidth, triangleY]);\n            path.push(['Z']);\n            // 绘制两条竖线\n            path.push(['M', x - oneSixthWidth, triangleY]);\n            path.push(['L', x - oneSixthWidth, y + height - 2]);\n            path.push(['M', x + oneSixthWidth, triangleY]);\n            path.push(['L', x + oneSixthWidth, y + height - 2]);\n        }\n        return path;\n    };\n    // 调整 handler 的位置，如果未存在则绘制\n    ContinueLegend.prototype.resetHandler = function (group, name, value) {\n        var point = this.getPointByValue(value, group);\n        var handlerCfg = this.get('handler');\n        var path = this.getHandlerPath(handlerCfg, point);\n        var id = this.getElementId(\"handler-\" + name);\n        var handlerShape = group.findById(id);\n        var isVertical = this.isVertical();\n        if (handlerShape) {\n            handlerShape.attr('path', path);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                name: \"legend-handler-\" + name,\n                draggable: true,\n                id: id,\n                attrs: __assign(__assign({ path: path }, handlerCfg.style), { cursor: isVertical ? 'ns-resize' : 'ew-resize' }),\n            });\n        }\n    };\n    // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n    // 文本的位置\n    ContinueLegend.prototype.fixedElements = function (group) {\n        var railShape = group.findById(this.getElementId('rail'));\n        var minLabel = group.findById(this.getElementId('label-min'));\n        var maxLabel = group.findById(this.getElementId('label-max'));\n        var startPoint = this.getDrawPoint();\n        if (this.isVertical()) {\n            // 横向布局\n            this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n        }\n        else {\n            // 水平布局\n            this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n        }\n    };\n    ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n        var isVertical = this.isVertical();\n        var lengthField = isVertical ? 'height' : 'width';\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n        if (maxLength) {\n            var elementsLength = labelAlign === 'rail'\n                ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2\n                : railBBox[lengthField];\n            var diff = elementsLength - maxLength;\n            if (diff > 0) {\n                // 大于限制的长度\n                this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n            }\n        }\n    };\n    ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n        var bbox = railShape.getBBox();\n        var path;\n        if (lengthField === 'height') {\n            path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n        }\n        else {\n            path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n        }\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n        var bbox = railShape.getBBox();\n        var path = this.getRailPath(x, y, bbox.width, bbox.height);\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railHeight / 2,\n            });\n            this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n                y: startPoint.y + railHeight / 2,\n            });\n        }\n        else if (labelAlign === 'top') {\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n        }\n        else {\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n        }\n    };\n    ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2,\n            });\n        }\n        else if (labelAlign === 'right') {\n            minLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n        else {\n            // left\n            var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n    };\n    return ContinueLegend;\n}(LegendBase));\nexport default ContinueLegend;\n//# sourceMappingURL=continuous.js.map"]},"metadata":{},"sourceType":"module"}