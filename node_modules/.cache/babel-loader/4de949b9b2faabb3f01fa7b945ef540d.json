{"ast":null,"code":"import { createDom } from './dom';\nexport function setShadow(model, context) {\n  var el = model.cfg.el;\n  var attrs = model.attr();\n  var cfg = {\n    dx: attrs.shadowOffsetX,\n    dy: attrs.shadowOffsetY,\n    blur: attrs.shadowBlur,\n    color: attrs.shadowColor\n  };\n\n  if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {\n    el.removeAttribute('filter');\n  } else {\n    var id = context.find('filter', cfg);\n\n    if (!id) {\n      id = context.addShadow(cfg);\n    }\n\n    el.setAttribute('filter', \"url(#\" + id + \")\");\n  }\n}\nexport function setTransform(model) {\n  var matrix = model.attr().matrix;\n\n  if (matrix) {\n    var el = model.cfg.el;\n    var transform = [];\n\n    for (var i = 0; i < 9; i += 3) {\n      transform.push(matrix[i] + \",\" + matrix[i + 1]);\n    }\n\n    transform = transform.join(',');\n\n    if (transform.indexOf('NaN') === -1) {\n      el.setAttribute('transform', \"matrix(\" + transform + \")\");\n    } else {\n      console.warn('invalid matrix:', matrix);\n    }\n  }\n}\nexport function setClip(model, context) {\n  var clip = model.getClip();\n  var el = model.get('el');\n\n  if (!clip) {\n    el.removeAttribute('clip-path');\n  } else if (clip && !el.hasAttribute('clip-path')) {\n    createDom(clip);\n    clip.createPath(context);\n    var id = context.addClip(clip);\n    el.setAttribute('clip-path', \"url(#\" + id + \")\");\n  }\n}","map":{"version":3,"sources":["../../src/util/svg.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,OAA1B;AAEA,OAAM,SAAU,SAAV,CAAoB,KAApB,EAA2B,OAA3B,EAAkC;AACtC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAN,CAAU,EAArB;AACA,MAAM,KAAK,GAAG,KAAK,CAAC,IAAN,EAAd;AACA,MAAM,GAAG,GAAG;AACV,IAAA,EAAE,EAAE,KAAK,CAAC,aADA;AAEV,IAAA,EAAE,EAAE,KAAK,CAAC,aAFA;AAGV,IAAA,IAAI,EAAE,KAAK,CAAC,UAHF;AAIV,IAAA,KAAK,EAAE,KAAK,CAAC;AAJH,GAAZ;;AAMA,MAAI,CAAC,GAAG,CAAC,EAAL,IAAW,CAAC,GAAG,CAAC,EAAhB,IAAsB,CAAC,GAAG,CAAC,IAA3B,IAAmC,CAAC,GAAG,CAAC,KAA5C,EAAmD;AACjD,IAAA,EAAE,CAAC,eAAH,CAAmB,QAAnB;AACD,GAFD,MAEO;AACL,QAAI,EAAE,GAAG,OAAO,CAAC,IAAR,CAAa,QAAb,EAAuB,GAAvB,CAAT;;AACA,QAAI,CAAC,EAAL,EAAS;AACP,MAAA,EAAE,GAAG,OAAO,CAAC,SAAR,CAAkB,GAAlB,CAAL;AACD;;AACD,IAAA,EAAE,CAAC,YAAH,CAAgB,QAAhB,EAA0B,UAAQ,EAAR,GAAU,GAApC;AACD;AACF;AAED,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAA4B;AACxB,MAAA,MAAM,GAAK,KAAK,CAAC,IAAN,GAAL,MAAN;;AACR,MAAI,MAAJ,EAAY;AACV,QAAM,EAAE,GAAG,KAAK,CAAC,GAAN,CAAU,EAArB;AACA,QAAI,SAAS,GAAQ,EAArB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,IAAI,CAA5B,EAA+B;AAC7B,MAAA,SAAS,CAAC,IAAV,CAAkB,MAAM,CAAC,CAAD,CAAN,GAAS,GAAT,GAAa,MAAM,CAAC,CAAC,GAAG,CAAL,CAArC;AACD;;AACD,IAAA,SAAS,GAAG,SAAS,CAAC,IAAV,CAAe,GAAf,CAAZ;;AACA,QAAI,SAAS,CAAC,OAAV,CAAkB,KAAlB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,MAAA,EAAE,CAAC,YAAH,CAAgB,WAAhB,EAA6B,YAAU,SAAV,GAAmB,GAAhD;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,IAAR,CAAa,iBAAb,EAAgC,MAAhC;AACD;AACF;AACF;AAED,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAyB,OAAzB,EAAgC;AACpC,MAAM,IAAI,GAAG,KAAK,CAAC,OAAN,EAAb;AACA,MAAM,EAAE,GAAG,KAAK,CAAC,GAAN,CAAU,IAAV,CAAX;;AACA,MAAI,CAAC,IAAL,EAAW;AACT,IAAA,EAAE,CAAC,eAAH,CAAmB,WAAnB;AACD,GAFD,MAEO,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,YAAH,CAAgB,WAAhB,CAAb,EAA2C;AAChD,IAAA,SAAS,CAAC,IAAD,CAAT;AACA,IAAA,IAAI,CAAC,UAAL,CAAgB,OAAhB;AACA,QAAM,EAAE,GAAG,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAX;AACA,IAAA,EAAE,CAAC,YAAH,CAAgB,WAAhB,EAA6B,UAAQ,EAAR,GAAU,GAAvC;AACD;AACF","sourceRoot":"","sourcesContent":["import { createDom } from './dom';\nexport function setShadow(model, context) {\n    var el = model.cfg.el;\n    var attrs = model.attr();\n    var cfg = {\n        dx: attrs.shadowOffsetX,\n        dy: attrs.shadowOffsetY,\n        blur: attrs.shadowBlur,\n        color: attrs.shadowColor,\n    };\n    if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {\n        el.removeAttribute('filter');\n    }\n    else {\n        var id = context.find('filter', cfg);\n        if (!id) {\n            id = context.addShadow(cfg);\n        }\n        el.setAttribute('filter', \"url(#\" + id + \")\");\n    }\n}\nexport function setTransform(model) {\n    var matrix = model.attr().matrix;\n    if (matrix) {\n        var el = model.cfg.el;\n        var transform = [];\n        for (var i = 0; i < 9; i += 3) {\n            transform.push(matrix[i] + \",\" + matrix[i + 1]);\n        }\n        transform = transform.join(',');\n        if (transform.indexOf('NaN') === -1) {\n            el.setAttribute('transform', \"matrix(\" + transform + \")\");\n        }\n        else {\n            console.warn('invalid matrix:', matrix);\n        }\n    }\n}\nexport function setClip(model, context) {\n    var clip = model.getClip();\n    var el = model.get('el');\n    if (!clip) {\n        el.removeAttribute('clip-path');\n    }\n    else if (clip && !el.hasAttribute('clip-path')) {\n        createDom(clip);\n        clip.createPath(context);\n        var id = context.addClip(clip);\n        el.setAttribute('clip-path', \"url(#\" + id + \")\");\n    }\n}\n//# sourceMappingURL=svg.js.map"]},"metadata":{},"sourceType":"module"}