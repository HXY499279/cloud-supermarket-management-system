{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray, isNil } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction parseValue(value) {\n  var array = !isArray(value) ? [value] : value;\n  var min = array[0]; // 最小值\n\n  var max = array[array.length - 1]; // 最大值\n\n  var min1 = array.length > 1 ? array[1] : min;\n  var max1 = array.length > 3 ? array[3] : max;\n  var median = array.length > 2 ? array[2] : min1;\n  return {\n    min: min,\n    max: max,\n    min1: min1,\n    max1: max1,\n    median: median\n  };\n}\n\nfunction getBoxPoints(x, y, size) {\n  var halfSize = size / 2;\n  var pointsArray;\n\n  if (isArray(y)) {\n    // 2维\n    var _a = parseValue(y),\n        min = _a.min,\n        max = _a.max,\n        median = _a.median,\n        min1 = _a.min1,\n        max1 = _a.max1;\n\n    var minX = x - halfSize;\n    var maxX = x + halfSize;\n    pointsArray = [[minX, max], [maxX, max], [x, max], [x, max1], [minX, min1], [minX, max1], [maxX, max1], [maxX, min1], [x, min1], [x, min], [minX, min], [maxX, min], [minX, median], [maxX, median]];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n\n    var _b = parseValue(x),\n        min = _b.min,\n        max = _b.max,\n        median = _b.median,\n        min1 = _b.min1,\n        max1 = _b.max1;\n\n    var minY = y - halfSize;\n    var maxY = y + halfSize;\n    pointsArray = [[min, minY], [min, maxY], [min, y], [min1, y], [min1, minY], [min1, maxY], [max1, maxY], [max1, minY], [max1, y], [max, y], [max, minY], [max, maxY], [median, minY], [median, maxY]];\n  }\n\n  return pointsArray.map(function (arr) {\n    return {\n      x: arr[0],\n      y: arr[1]\n    };\n  });\n}\n\nfunction getBoxPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x, points[10].y], ['L', points[11].x, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n} // box shape\n\n\nregisterShape('schema', 'box', {\n  getPoints: function (shapePoint) {\n    var x = shapePoint.x,\n        y = shapePoint.y,\n        size = shapePoint.size;\n    return getBoxPoints(x, y, size);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getBoxPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path,\n        name: 'schema'\n      })\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        var yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        var points = getBoxPoints(x, yValues, r);\n        return [['M', points[0].x + 1, points[0].y], ['L', points[1].x - 1, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x + 1, points[10].y], ['L', points[11].x - 1, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/schema/box.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray, isNil } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction parseValue(value: number[]) {\n  const array = !isArray(value) ? [value] : value;\n\n  const min = array[0]; // 最小值\n  const max = array[array.length - 1]; // 最大值\n  const min1 = array.length > 1 ? array[1] : min;\n  const max1 = array.length > 3 ? array[3] : max;\n  const median = array.length > 2 ? array[2] : min1;\n\n  return {\n    min, // 最小值\n    max, // 最大值\n    min1,\n    max1,\n    median,\n  };\n}\n\nfunction getBoxPoints(x: number | number[], y: number | number[], size: number): Point[] {\n  const halfSize = size / 2;\n  let pointsArray;\n  if (isArray(y)) {\n    // 2维\n    const { min, max, median, min1, max1 } = parseValue(y);\n    const minX = (x as number) - halfSize;\n    const maxX = (x as number) + halfSize;\n    pointsArray = [\n      [minX, max],\n      [maxX, max],\n      [x as number, max],\n      [x as number, max1],\n      [minX, min1],\n      [minX, max1],\n      [maxX, max1],\n      [maxX, min1],\n      [x as number, min1],\n      [x as number, min],\n      [minX, min],\n      [maxX, min],\n      [minX, median],\n      [maxX, median],\n    ];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    const { min, max, median, min1, max1 } = parseValue(x as number[]);\n    const minY = y - halfSize;\n    const maxY = y + halfSize;\n    pointsArray = [\n      [min, minY],\n      [min, maxY],\n      [min, y],\n      [min1, y],\n      [min1, minY],\n      [min1, maxY],\n      [max1, maxY],\n      [max1, minY],\n      [max1, y],\n      [max, y],\n      [max, minY],\n      [max, maxY],\n      [median, minY],\n      [median, maxY],\n    ];\n  }\n\n  return pointsArray.map((arr) => {\n    return {\n      x: arr[0],\n      y: arr[1],\n    };\n  });\n}\n\nfunction getBoxPath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['L', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n    ['L', points[4].x, points[4].y], // 封闭 z\n    ['Z'],\n    ['M', points[8].x, points[8].y],\n    ['L', points[9].x, points[9].y],\n    ['M', points[10].x, points[10].y],\n    ['L', points[11].x, points[11].y],\n    ['M', points[12].x, points[12].y],\n    ['L', points[13].x, points[13].y],\n  ];\n}\n\n// box shape\nregisterShape('schema', 'box', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getBoxPoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getBoxPath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        const points = getBoxPoints(x, yValues, r);\n        return [\n          ['M', points[0].x + 1, points[0].y],\n          ['L', points[1].x - 1, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['M', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['L', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n          ['L', points[4].x, points[4].y],\n          ['Z'],\n          ['M', points[8].x, points[8].y],\n          ['L', points[9].x, points[9].y],\n          ['M', points[10].x + 1, points[10].y],\n          ['L', points[11].x - 1, points[11].y],\n          ['M', points[12].x, points[12].y],\n          ['L', points[13].x, points[13].y],\n        ];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}