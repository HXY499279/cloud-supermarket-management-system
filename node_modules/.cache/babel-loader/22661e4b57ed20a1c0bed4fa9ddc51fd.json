{"ast":null,"code":"import { isArray } from '@antv/util';\nimport rectPath from './rect-path';\nimport path2Curve from './path-2-curve';\n\nvar base3 = function (t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\n\nvar bezlen = function (x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z === null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n\n  return z2 * sum;\n};\n\nvar curveDim = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [];\n  var bounds = [[], []];\n  var a;\n  var b;\n  var c;\n  var t;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (t > 0 && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    var b2ac = b * b - 4 * c * a;\n    var sqrtb2ac = Math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    var t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (t1 > 0 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    var t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (t2 > 0 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length;\n  var jlen = j;\n  var mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n};\n\nvar intersect = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator;\n  var py = ny / denominator;\n  var px2 = +px.toFixed(2);\n  var py2 = +py.toFixed(2);\n\n  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n};\n\nvar isPointInsideBBox = function (bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\n\nvar box = function (x, y, width, height) {\n  if (x === null) {\n    x = y = width = height = 0;\n  }\n\n  if (y === null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: Math.min(width, height) / 2,\n    r2: Math.max(width, height) / 2,\n    r0: Math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n};\n\nvar isBBoxIntersect = function (bbox1, bbox2) {\n  // @ts-ignore\n  bbox1 = box(bbox1); // @ts-ignore\n\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\n\nvar bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!isArray(p1x)) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveDim.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\n\nvar findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t;\n  var t13 = Math.pow(t1, 3);\n  var t12 = Math.pow(t1, 2);\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  var ax = t1 * p1x + t * c1x;\n  var ay = t1 * p1y + t * c1y;\n  var cx = t1 * c2x + t * p2x;\n  var cy = t1 * c2y + t * p2y;\n  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);\n\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n};\n\nvar interHelper = function (bez1, bez2, justCount) {\n  // @ts-ignore\n  var bbox1 = bezierBBox(bez1); // @ts-ignore\n\n  var bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1);\n  var l2 = bezlen.apply(0, bez2);\n  var n1 = ~~(l1 / 8);\n  var n2 = ~~(l2 / 8);\n  var dots1 = [];\n  var dots2 = [];\n  var xy = {};\n  var res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: d.x,\n      y: d.y,\n      t: i / n1\n    });\n  }\n\n  for (var i = 0; i < n2 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({\n      x: d.x,\n      y: d.y,\n      t: i / n2\n    });\n  }\n\n  for (var i = 0; i < n1; i++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i];\n      var di1 = dots1[i + 1];\n      var dj = dots2[j];\n      var dj1 = dots2[j + 1];\n      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\n        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            // @ts-ignore\n            res++;\n          } else {\n            // @ts-ignore\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar interPathHelper = function (path1, path2, justCount) {\n  // @ts-ignore\n  path1 = path2Curve(path1); // @ts-ignore\n\n  path2 = path2Curve(path2);\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x1m;\n  var y1m;\n  var x2m;\n  var y2m;\n  var bez1;\n  var bez2;\n  var res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] === 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] === 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] === 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] === 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = interHelper(bez1, bez2, justCount);\n\n          if (justCount) {\n            // @ts-ignore\n            res += intr;\n          } else {\n            // @ts-ignore\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            } // @ts-ignore\n\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nexport default function pathIntersection(path1, path2) {\n  // @ts-ignore\n  return interPathHelper(path1, path2);\n}","map":{"version":3,"sources":["../src/path-intersection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isArray } from '@antv/util';\nimport rectPath from './rect-path';\nimport path2Curve from './path-2-curve';\nvar base3 = function (t, p1, p2, p3, p4) {\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n    var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n    return t * t2 - 3 * p1 + 3 * p2;\n};\nvar bezlen = function (x1, y1, x2, y2, x3, y3, x4, y4, z) {\n    if (z === null) {\n        z = 1;\n    }\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\n    var z2 = z / 2;\n    var n = 12;\n    var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n    var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n    var sum = 0;\n    for (var i = 0; i < n; i++) {\n        var ct = z2 * Tvalues[i] + z2;\n        var xbase = base3(ct, x1, x2, x3, x4);\n        var ybase = base3(ct, y1, y2, y3, y4);\n        var comb = xbase * xbase + ybase * ybase;\n        sum += Cvalues[i] * Math.sqrt(comb);\n    }\n    return z2 * sum;\n};\nvar curveDim = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [];\n    var bounds = [\n        [],\n        [],\n    ];\n    var a;\n    var b;\n    var c;\n    var t;\n    for (var i = 0; i < 2; ++i) {\n        if (i === 0) {\n            b = 6 * x0 - 12 * x1 + 6 * x2;\n            a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n            c = 3 * x1 - 3 * x0;\n        }\n        else {\n            b = 6 * y0 - 12 * y1 + 6 * y2;\n            a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n            c = 3 * y1 - 3 * y0;\n        }\n        if (Math.abs(a) < 1e-12) {\n            if (Math.abs(b) < 1e-12) {\n                continue;\n            }\n            t = -c / b;\n            if (t > 0 && t < 1) {\n                tvalues.push(t);\n            }\n            continue;\n        }\n        var b2ac = b * b - 4 * c * a;\n        var sqrtb2ac = Math.sqrt(b2ac);\n        if (b2ac < 0) {\n            continue;\n        }\n        var t1 = (-b + sqrtb2ac) / (2 * a);\n        if (t1 > 0 && t1 < 1) {\n            tvalues.push(t1);\n        }\n        var t2 = (-b - sqrtb2ac) / (2 * a);\n        if (t2 > 0 && t2 < 1) {\n            tvalues.push(t2);\n        }\n    }\n    var j = tvalues.length;\n    var jlen = j;\n    var mt;\n    while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n        bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n    }\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return {\n        min: {\n            x: Math.min.apply(0, bounds[0]),\n            y: Math.min.apply(0, bounds[1]),\n        },\n        max: {\n            x: Math.max.apply(0, bounds[0]),\n            y: Math.max.apply(0, bounds[1]),\n        },\n    };\n};\nvar intersect = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    if (Math.max(x1, x2) < Math.min(x3, x4) ||\n        Math.min(x1, x2) > Math.max(x3, x4) ||\n        Math.max(y1, y2) < Math.min(y3, y4) ||\n        Math.min(y1, y2) > Math.max(y3, y4)) {\n        return;\n    }\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n    var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n    var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (!denominator) {\n        return;\n    }\n    var px = nx / denominator;\n    var py = ny / denominator;\n    var px2 = +px.toFixed(2);\n    var py2 = +py.toFixed(2);\n    if (px2 < +Math.min(x1, x2).toFixed(2) ||\n        px2 > +Math.max(x1, x2).toFixed(2) ||\n        px2 < +Math.min(x3, x4).toFixed(2) ||\n        px2 > +Math.max(x3, x4).toFixed(2) ||\n        py2 < +Math.min(y1, y2).toFixed(2) ||\n        py2 > +Math.max(y1, y2).toFixed(2) ||\n        py2 < +Math.min(y3, y4).toFixed(2) ||\n        py2 > +Math.max(y3, y4).toFixed(2)) {\n        return;\n    }\n    return {\n        x: px,\n        y: py,\n    };\n};\nvar isPointInsideBBox = function (bbox, x, y) {\n    return x >= bbox.x &&\n        x <= bbox.x + bbox.width &&\n        y >= bbox.y &&\n        y <= bbox.y + bbox.height;\n};\nvar box = function (x, y, width, height) {\n    if (x === null) {\n        x = y = width = height = 0;\n    }\n    if (y === null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n    }\n    return {\n        x: x,\n        y: y,\n        width: width,\n        w: width,\n        height: height,\n        h: height,\n        x2: x + width,\n        y2: y + height,\n        cx: x + width / 2,\n        cy: y + height / 2,\n        r1: Math.min(width, height) / 2,\n        r2: Math.max(width, height) / 2,\n        r0: Math.sqrt(width * width + height * height) / 2,\n        path: rectPath(x, y, width, height),\n        vb: [x, y, width, height].join(' '),\n    };\n};\nvar isBBoxIntersect = function (bbox1, bbox2) {\n    // @ts-ignore\n    bbox1 = box(bbox1);\n    // @ts-ignore\n    bbox2 = box(bbox2);\n    return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\nvar bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    if (!isArray(p1x)) {\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n    }\n    var bbox = curveDim.apply(null, p1x);\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\nvar findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t;\n    var t13 = Math.pow(t1, 3);\n    var t12 = Math.pow(t1, 2);\n    var t2 = t * t;\n    var t3 = t2 * t;\n    var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n    var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n    var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n    var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n    var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n    var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n    var ax = t1 * p1x + t * c1x;\n    var ay = t1 * p1y + t * c1y;\n    var cx = t1 * c2x + t * p2x;\n    var cy = t1 * c2y + t * p2y;\n    var alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\n    // (mx > nx || my < ny) && (alpha += 180);\n    return {\n        x: x,\n        y: y,\n        m: {\n            x: mx,\n            y: my,\n        },\n        n: {\n            x: nx,\n            y: ny,\n        },\n        start: {\n            x: ax,\n            y: ay,\n        },\n        end: {\n            x: cx,\n            y: cy,\n        },\n        alpha: alpha,\n    };\n};\nvar interHelper = function (bez1, bez2, justCount) {\n    // @ts-ignore\n    var bbox1 = bezierBBox(bez1);\n    // @ts-ignore\n    var bbox2 = bezierBBox(bez2);\n    if (!isBBoxIntersect(bbox1, bbox2)) {\n        return justCount ? 0 : [];\n    }\n    var l1 = bezlen.apply(0, bez1);\n    var l2 = bezlen.apply(0, bez2);\n    var n1 = ~~(l1 / 8);\n    var n2 = ~~(l2 / 8);\n    var dots1 = [];\n    var dots2 = [];\n    var xy = {};\n    var res = justCount ? 0 : [];\n    for (var i = 0; i < n1 + 1; i++) {\n        var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n        dots1.push({\n            x: d.x,\n            y: d.y,\n            t: i / n1,\n        });\n    }\n    for (var i = 0; i < n2 + 1; i++) {\n        var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n        dots2.push({\n            x: d.x,\n            y: d.y,\n            t: i / n2,\n        });\n    }\n    for (var i = 0; i < n1; i++) {\n        for (var j = 0; j < n2; j++) {\n            var di = dots1[i];\n            var di1 = dots1[i + 1];\n            var dj = dots2[j];\n            var dj1 = dots2[j + 1];\n            var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n            var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n            var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n            if (is) {\n                if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n                    continue;\n                }\n                xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n                var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                    if (justCount) {\n                        // @ts-ignore\n                        res++;\n                    }\n                    else {\n                        // @ts-ignore\n                        res.push({\n                            x: is.x,\n                            y: is.y,\n                            t1: t1,\n                            t2: t2,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    return res;\n};\nvar interPathHelper = function (path1, path2, justCount) {\n    // @ts-ignore\n    path1 = path2Curve(path1);\n    // @ts-ignore\n    path2 = path2Curve(path2);\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x1m;\n    var y1m;\n    var x2m;\n    var y2m;\n    var bez1;\n    var bez2;\n    var res = justCount ? 0 : [];\n    for (var i = 0, ii = path1.length; i < ii; i++) {\n        var pi = path1[i];\n        if (pi[0] === 'M') {\n            x1 = x1m = pi[1];\n            y1 = y1m = pi[2];\n        }\n        else {\n            if (pi[0] === 'C') {\n                bez1 = [x1, y1].concat(pi.slice(1));\n                x1 = bez1[6];\n                y1 = bez1[7];\n            }\n            else {\n                bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                x1 = x1m;\n                y1 = y1m;\n            }\n            for (var j = 0, jj = path2.length; j < jj; j++) {\n                var pj = path2[j];\n                if (pj[0] === 'M') {\n                    x2 = x2m = pj[1];\n                    y2 = y2m = pj[2];\n                }\n                else {\n                    if (pj[0] === 'C') {\n                        bez2 = [x2, y2].concat(pj.slice(1));\n                        x2 = bez2[6];\n                        y2 = bez2[7];\n                    }\n                    else {\n                        bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                        x2 = x2m;\n                        y2 = y2m;\n                    }\n                    var intr = interHelper(bez1, bez2, justCount);\n                    if (justCount) {\n                        // @ts-ignore\n                        res += intr;\n                    }\n                    else {\n                        // @ts-ignore\n                        for (var k = 0, kk = intr.length; k < kk; k++) {\n                            intr[k].segment1 = i;\n                            intr[k].segment2 = j;\n                            intr[k].bez1 = bez1;\n                            intr[k].bez2 = bez2;\n                        }\n                        // @ts-ignore\n                        res = res.concat(intr);\n                    }\n                }\n            }\n        }\n    }\n    return res;\n};\nexport default function pathIntersection(path1, path2) {\n    // @ts-ignore\n    return interPathHelper(path1, path2);\n}\n//# sourceMappingURL=path-intersection.js.map"]},"metadata":{},"sourceType":"module"}