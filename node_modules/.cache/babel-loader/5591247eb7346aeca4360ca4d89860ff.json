{"ast":null,"code":"import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { mix } from '../util/util';\n\nvar Base =\n/** @class */\nfunction (_super) {\n  __extends(Base, _super);\n\n  function Base(cfg) {\n    var _this = _super.call(this) || this;\n    /**\n     * 是否被销毁\n     * @type {boolean}\n     */\n\n\n    _this.destroyed = false;\n\n    var defaultCfg = _this.getDefaultCfg();\n\n    _this.cfg = mix(defaultCfg, cfg);\n    return _this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n\n\n  Base.prototype.getDefaultCfg = function () {\n    return {};\n  }; // 实现接口的方法\n\n\n  Base.prototype.get = function (name) {\n    return this.cfg[name];\n  }; // 实现接口的方法\n\n\n  Base.prototype.set = function (name, value) {\n    this.cfg[name] = value;\n  }; // 实现接口的方法\n\n\n  Base.prototype.destroy = function () {\n    this.cfg = {\n      destroyed: true\n    };\n    this.off();\n    this.destroyed = true;\n  };\n\n  return Base;\n}(EE);\n\nexport default Base;","map":{"version":3,"sources":["../../src/abstract/base.ts"],"names":[],"mappings":";AAAA,OAAO,EAAP,MAAe,qBAAf;AAEA,SAAS,GAAT,QAAoB,cAApB;;AAEA,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAsB1B,WAAA,IAAA,CAAY,GAAZ,EAAe;AAAf,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;AAfA;;;AAGG;;;AACH,IAAA,KAAA,CAAA,SAAA,GAAqB,KAArB;;AAaE,QAAM,UAAU,GAAG,KAAI,CAAC,aAAL,EAAnB;;AACA,IAAA,KAAI,CAAC,GAAL,GAAW,GAAG,CAAC,UAAD,EAAa,GAAb,CAAd;;AACD;AAbD;;;;AAIG;;;AACH,EAAA,IAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,EAAP;AACD,GAFD,CAlBF,CA4BE;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAQ;AACN,WAAO,KAAK,GAAL,CAAS,IAAT,CAAP;AACD,GAFD,CA7BF,CAgCE;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAU,KAAV,EAAe;AACb,SAAK,GAAL,CAAS,IAAT,IAAiB,KAAjB;AACD,GAFD,CAjCF,CAqCE;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,SAAK,GAAL,GAAW;AACT,MAAA,SAAS,EAAE;AADF,KAAX;AAGA,SAAK,GAAL;AACA,SAAK,SAAL,GAAiB,IAAjB;AACD,GAND;;AAOF,SAAA,IAAA;AAAC,CA7CD,CAA4B,EAA5B,CAAA;;AA+CA,eAAe,IAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { mix } from '../util/util';\nvar Base = /** @class */ (function (_super) {\n    __extends(Base, _super);\n    function Base(cfg) {\n        var _this = _super.call(this) || this;\n        /**\n         * 是否被销毁\n         * @type {boolean}\n         */\n        _this.destroyed = false;\n        var defaultCfg = _this.getDefaultCfg();\n        _this.cfg = mix(defaultCfg, cfg);\n        return _this;\n    }\n    /**\n     * @protected\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    Base.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    // 实现接口的方法\n    Base.prototype.get = function (name) {\n        return this.cfg[name];\n    };\n    // 实现接口的方法\n    Base.prototype.set = function (name, value) {\n        this.cfg[name] = value;\n    };\n    // 实现接口的方法\n    Base.prototype.destroy = function () {\n        this.cfg = {\n            destroyed: true,\n        };\n        this.off();\n        this.destroyed = true;\n    };\n    return Base;\n}(EE));\nexport default Base;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}