{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * @fileoverview polygon\n * @author dengfuping_develop@163.com\n */\n\nimport { each, isArray } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nvar Polygon =\n/** @class */\nfunction (_super) {\n  __extends(Polygon, _super);\n\n  function Polygon() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'polygon';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Polygon.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map(function (point) {\n          return point[0] + \",\" + point[1];\n        }).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n\n  return Polygon;\n}(ShapeBase);\n\nexport default Polygon;","map":{"version":3,"sources":["../../src/shape/polygon.ts"],"names":[],"mappings":";AAAA;;;AAGG;;AACH,SAAS,IAAT,EAAe,OAAf,QAA8B,YAA9B;AACA,SAAS,YAAT,QAA6B,aAA7B;AACA,OAAO,SAAP,MAAsB,QAAtB;;AAEA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAtB,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACE,IAAA,KAAA,CAAA,IAAA,GAAe,SAAf;AACA,IAAA,KAAA,CAAA,OAAA,GAAmB,IAAnB;AACA,IAAA,KAAA,CAAA,SAAA,GAAqB,IAArB;;AAaD;;AAXC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAoB,WAApB,EAA+B;AAC7B,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACA,QAAM,EAAE,GAAG,KAAK,GAAL,CAAS,IAAT,CAAX;AACA,IAAA,IAAI,CAAC,WAAW,IAAI,KAAhB,EAAuB,UAAC,KAAD,EAAQ,IAAR,EAAY;AACrC,UAAI,IAAI,KAAK,QAAT,IAAqB,OAAO,CAAC,KAAD,CAA5B,IAAuC,KAAK,CAAC,MAAN,IAAgB,CAA3D,EAA8D;AAC5D,QAAA,EAAE,CAAC,YAAH,CAAgB,QAAhB,EAA0B,KAAK,CAAC,GAAN,CAAU,UAAC,KAAD,EAAM;AAAK,iBAAG,KAAK,CAAC,CAAD,CAAL,GAAQ,GAAR,GAAY,KAAK,CAApB,CAAoB,CAApB;AAAyB,SAA9C,EAAgD,IAAhD,CAAqD,GAArD,CAA1B;AACD,OAFD,MAEO,IAAI,YAAY,CAAC,IAAD,CAAhB,EAAwB;AAC7B,QAAA,EAAE,CAAC,YAAH,CAAgB,YAAY,CAAC,IAAD,CAA5B,EAAoC,KAApC;AACD;AACF,KANG,CAAJ;AAOD,GAVD;;AAWF,SAAA,OAAA;AAAC,CAhBD,CAAsB,SAAtB,CAAA;;AAkBA,eAAe,OAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\n/**\n * @fileoverview polygon\n * @author dengfuping_develop@163.com\n */\nimport { each, isArray } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'polygon';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Polygon.prototype.createPath = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'points' && isArray(value) && value.length >= 2) {\n                el.setAttribute('points', value.map(function (point) { return point[0] + \",\" + point[1]; }).join(' '));\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    return Polygon;\n}(ShapeBase));\nexport default Polygon;\n//# sourceMappingURL=polygon.js.map"]},"metadata":{},"sourceType":"module"}