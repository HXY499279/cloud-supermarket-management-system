{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\n\nvar EllipsisText =\n/** @class */\nfunction (_super) {\n  __extends(EllipsisText, _super);\n\n  function EllipsisText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeStamp = 0;\n    return _this;\n  }\n\n  EllipsisText.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.tooltip && this.tooltip.destroy();\n  };\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n\n\n  EllipsisText.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n\n\n  EllipsisText.prototype.hide = function () {\n    this.hideTooltip();\n    this.location = null;\n  };\n\n  EllipsisText.prototype.showTooltip = function (curLoc) {\n    var context = this.context;\n    var ev = context.event;\n    var target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n\n      var tipContent = target.get('tip'); // 展示 tooltip\n\n      this.tooltip.update(__assign({\n        title: tipContent\n      }, curLoc));\n      this.tooltip.show();\n    }\n  };\n\n  EllipsisText.prototype.hideTooltip = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n\n  EllipsisText.prototype.renderTooltip = function () {\n    var _a;\n\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var theme = view.getTheme();\n    var tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      crosshairs: null,\n      domStyles: __assign({}, deepMix({}, tooltipStyles, (_a = {}, // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n\n    this.tooltip = tooltip;\n  };\n\n  return EllipsisText;\n}(Action);\n\nexport default EllipsisText;","map":{"version":3,"sources":["../../../../../src/interaction/action/component/tooltip/ellipsis-text.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\nexport default class EllipsisText extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n  private tooltip;\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    this.hideTooltip();\n    this.location = null;\n  }\n\n  protected showTooltip(curLoc: Point) {\n    const context = this.context;\n    const ev = context.event;\n    const target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      const tipContent = target.get('tip');\n      // 展示 tooltip\n      this.tooltip.update({\n        title: tipContent,\n        ...curLoc,\n      });\n      this.tooltip.show();\n    }\n  }\n\n  protected hideTooltip() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  private renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const theme = view.getTheme();\n    const tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      crosshairs: null,\n      domStyles: {\n        ...deepMix({}, tooltipStyles, {\n          // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n          [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: { 'max-width': '50%' },\n          [TOOLTIP_CSS_CONST.TITLE_CLASS]: { 'word-break': 'break-all' },\n        }),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}