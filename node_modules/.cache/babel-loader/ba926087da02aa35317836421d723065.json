{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n/**\n * Highlight color\n * @ignore\n */\n\nvar HighlightColor =\n/** @class */\nfunction (_super) {\n  __extends(HighlightColor, _super);\n\n  function HighlightColor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HighlightColor.prototype.setStateByElement = function (element, enable) {\n    var view = this.context.view;\n    var colorAttr = element.geometry.getAttribute('color');\n\n    if (!colorAttr) {\n      return;\n    }\n\n    var scale = view.getScaleByField(colorAttr.getFields()[0]);\n    var value = getElementValue(element, scale.field);\n    var elements = getElements(view);\n    var highlightElements = elements.filter(function (el) {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, function (el) {\n      return highlightElements.includes(el);\n    }, enable);\n  };\n\n  return HighlightColor;\n}(Highlight);\n\nexport default HighlightColor;","map":{"version":3,"sources":["../../../../src/interaction/action/element/highlight-by-color.ts"],"names":[],"mappings":";AACA,SAAS,WAAT,EAAsB,eAAtB,QAA6C,SAA7C;AACA,OAAO,SAAP,MAAsB,aAAtB;AAEA;;;AAGG;;AACH,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,cAAA,GAAA;;AAeC;;AAdW,EAAA,cAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,UAA4B,OAA5B,EAA8C,MAA9C,EAA6D;AAC3D,QAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAA1B;AACA,QAAM,SAAS,GAAG,OAAO,CAAC,QAAR,CAAiB,YAAjB,CAA8B,OAA9B,CAAlB;;AACA,QAAI,CAAC,SAAL,EAAgB;AACd;AACD;;AACD,QAAM,KAAK,GAAG,IAAI,CAAC,eAAL,CAAqB,SAAS,CAAC,SAAV,GAAsB,CAAtB,CAArB,CAAd;AACA,QAAM,KAAK,GAAG,eAAe,CAAC,OAAD,EAAU,KAAK,CAAC,KAAhB,CAA7B;AACA,QAAM,QAAQ,GAAG,WAAW,CAAC,IAAD,CAA5B;AACA,QAAM,iBAAiB,GAAG,QAAQ,CAAC,MAAT,CAAgB,UAAC,EAAD,EAAG;AAC3C,aAAO,eAAe,CAAC,EAAD,EAAK,KAAK,CAAC,KAAX,CAAf,KAAqC,KAA5C;AACD,KAFyB,CAA1B;AAGA,SAAK,cAAL,CAAoB,QAApB,EAA8B,UAAC,EAAD,EAAG;AAAK,aAAA,iBAAiB,CAAC,QAAlB,CAAA,EAAA,CAAA;AAA8B,KAApE,EAAsE,MAAtE;AACD,GAbS;;AAcZ,SAAA,cAAA;AAAC,CAfD,CAA6B,SAA7B,CAAA;;AAiBA,eAAe,cAAf","sourcesContent":["import Element from '../../../geometry/element/';\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n\n/**\n * Highlight color\n * @ignore\n */\nclass HighlightColor extends Highlight {\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    const scale = view.getScaleByField(colorAttr.getFields()[0]);\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n}\n\nexport default HighlightColor;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}