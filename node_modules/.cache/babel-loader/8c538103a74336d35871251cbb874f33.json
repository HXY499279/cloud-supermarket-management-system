{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, isArray, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nvar Path =\n/** @class */\nfunction (_super) {\n  __extends(Path, _super);\n\n  function Path() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'path';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Path.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  };\n\n  Path.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'path' && isArray(value)) {\n        el.setAttribute('d', _this._formatPath(value));\n      } else if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          var id = isObject(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n\n  Path.prototype._formatPath = function (value) {\n    var newValue = value.map(function (path) {\n      return path.join(' ');\n    }).join('');\n\n    if (~newValue.indexOf('NaN')) {\n      return '';\n    }\n\n    return newValue;\n  };\n  /**\n   * Get total length of path\n   * 尽管通过浏览器的 SVGPathElement.getTotalLength() 接口获取的 path 长度，\n   * 与 Canvas 版本通过数学计算的方式得到的长度有一些细微差异，但最大误差在个位数像素，精度上可以能接受\n   * @return {number} length\n   */\n\n\n  Path.prototype.getTotalLength = function () {\n    var el = this.get('el');\n    return el ? el.getTotalLength() : null;\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Path.prototype.getPoint = function (ratio) {\n    var el = this.get('el');\n    var totalLength = this.getTotalLength(); // @see https://github.com/antvis/g/issues/634\n\n    if (totalLength === 0) {\n      return null;\n    }\n\n    var point = el ? el.getPointAtLength(ratio * totalLength) : null;\n    return point ? {\n      x: point.x,\n      y: point.y\n    } : null;\n  };\n\n  return Path;\n}(ShapeBase);\n\nexport default Path;","map":{"version":3,"sources":["../../src/shape/path.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { each, isArray, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'path';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Path.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { startArrow: false, endArrow: false });\n    };\n    Path.prototype.createPath = function (context, targetAttrs) {\n        var _this = this;\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'path' && isArray(value)) {\n                el.setAttribute('d', _this._formatPath(value));\n            }\n            else if (attr === 'startArrow' || attr === 'endArrow') {\n                if (value) {\n                    var id = isObject(value)\n                        ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\n                        : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n                    el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n                }\n                else {\n                    el.removeAttribute(SVG_ATTR_MAP[attr]);\n                }\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    Path.prototype._formatPath = function (value) {\n        var newValue = value\n            .map(function (path) {\n            return path.join(' ');\n        })\n            .join('');\n        if (~newValue.indexOf('NaN')) {\n            return '';\n        }\n        return newValue;\n    };\n    /**\n     * Get total length of path\n     * 尽管通过浏览器的 SVGPathElement.getTotalLength() 接口获取的 path 长度，\n     * 与 Canvas 版本通过数学计算的方式得到的长度有一些细微差异，但最大误差在个位数像素，精度上可以能接受\n     * @return {number} length\n     */\n    Path.prototype.getTotalLength = function () {\n        var el = this.get('el');\n        return el ? el.getTotalLength() : null;\n    };\n    /**\n     * Get point according to ratio\n     * @param {number} ratio\n     * @return {Point} point\n     */\n    Path.prototype.getPoint = function (ratio) {\n        var el = this.get('el');\n        var totalLength = this.getTotalLength();\n        // @see https://github.com/antvis/g/issues/634\n        if (totalLength === 0) {\n            return null;\n        }\n        var point = el ? el.getPointAtLength(ratio * totalLength) : null;\n        return point\n            ? {\n                x: point.x,\n                y: point.y,\n            }\n            : null;\n    };\n    return Path;\n}(ShapeBase));\nexport default Path;\n//# sourceMappingURL=path.js.map"]},"metadata":{},"sourceType":"module"}