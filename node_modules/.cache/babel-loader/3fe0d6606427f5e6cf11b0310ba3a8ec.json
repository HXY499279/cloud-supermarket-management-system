{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\n\nvar DataMarkerAnnotation =\n/** @class */\nfunction (_super) {\n  __extends(DataMarkerAnnotation, _super);\n\n  function DataMarkerAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n\n\n  DataMarkerAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'dataMarker',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      point: {},\n      line: {},\n      text: {},\n      direction: 'upward',\n      autoAdjust: true,\n      coordinateBBox: null,\n      defaultCfg: {\n        point: {\n          display: true,\n          style: {\n            r: 3,\n            fill: '#FFFFFF',\n            stroke: '#1890FF',\n            lineWidth: 2\n          }\n        },\n        line: {\n          display: true,\n          length: 20,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1\n          }\n        },\n        text: {\n          content: '',\n          display: true,\n          style: {\n            fill: Theme.textColor,\n            opacity: 0.65,\n            fontSize: 12,\n            textAlign: 'start',\n            fontFamily: Theme.fontFamily\n          }\n        }\n      }\n    });\n  };\n\n  DataMarkerAnnotation.prototype.renderInner = function (group) {\n    if (get(this.get('line'), 'display')) {\n      this.renderLine(group);\n    }\n\n    if (get(this.get('text'), 'display')) {\n      this.renderText(group);\n    }\n\n    if (get(this.get('point'), 'display')) {\n      this.renderPoint(group);\n    }\n\n    if (this.get('autoAdjust')) {\n      this.autoAdjust(group);\n    }\n  };\n\n  DataMarkerAnnotation.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x') + this.get('offsetX'),\n      y: this.get('y') + this.get('offsetY')\n    });\n  };\n\n  DataMarkerAnnotation.prototype.renderPoint = function (group) {\n    var point = this.getShapeAttrs().point;\n    this.addShape(group, {\n      type: 'circle',\n      id: this.getElementId('point'),\n      name: 'annotation-point',\n      attrs: point\n    });\n  };\n\n  DataMarkerAnnotation.prototype.renderLine = function (group) {\n    var line = this.getShapeAttrs().line;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: line\n    });\n  };\n\n  DataMarkerAnnotation.prototype.renderText = function (group) {\n    var textAttrs = this.getShapeAttrs().text;\n\n    var x = textAttrs.x,\n        y = textAttrs.y,\n        text = textAttrs.text,\n        style = __rest(textAttrs, [\"x\", \"y\", \"text\"]);\n\n    var _a = this.get('text'),\n        background = _a.background,\n        maxLength = _a.maxLength,\n        autoEllipsis = _a.autoEllipsis,\n        isVertival = _a.isVertival,\n        ellipsisPosition = _a.ellipsisPosition;\n\n    var tagCfg = {\n      x: x,\n      y: y,\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      content: text,\n      style: style,\n      background: background,\n      maxLength: maxLength,\n      autoEllipsis: autoEllipsis,\n      isVertival: isVertival,\n      ellipsisPosition: ellipsisPosition\n    };\n    renderTag(group, tagCfg);\n  };\n\n  DataMarkerAnnotation.prototype.autoAdjust = function (group) {\n    var direction = this.get('direction');\n    var x = this.get('x');\n    var y = this.get('y');\n    var lineLength = get(this.get('line'), 'length', 0);\n    var coordinateBBox = this.get('coordinateBBox');\n\n    var _a = group.getBBox(),\n        minX = _a.minX,\n        maxX = _a.maxX,\n        minY = _a.minY,\n        maxY = _a.maxY;\n\n    var textGroup = group.findById(this.getElementId('text-group'));\n    var textShape = group.findById(this.getElementId('text'));\n    var lineShape = group.findById(this.getElementId('line'));\n\n    if (!coordinateBBox) {\n      return;\n    }\n\n    if (textGroup) {\n      if (x + minX <= coordinateBBox.minX) {\n        // 左侧超出\n        var overflow = coordinateBBox.minX - (x + minX);\n        applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n      }\n\n      if (x + maxX >= coordinateBBox.maxX) {\n        // 右侧超出\n        var overflow = x + maxX - coordinateBBox.maxX;\n        applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n      }\n    }\n\n    if (direction === 'upward' && y + minY <= coordinateBBox.minY || direction !== 'upward' && y + maxY >= coordinateBBox.maxY) {\n      // 上方或者下方超出\n      var textBaseline = void 0;\n      var factor = void 0;\n\n      if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n        textBaseline = 'top';\n        factor = 1;\n      } else {\n        textBaseline = 'bottom';\n        factor = -1;\n      }\n\n      textShape.attr('textBaseline', textBaseline);\n\n      if (lineShape) {\n        lineShape.attr('path', [['M', 0, 0], ['L', 0, lineLength * factor]]);\n      }\n\n      applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor);\n    }\n  };\n\n  DataMarkerAnnotation.prototype.getShapeAttrs = function () {\n    var lineDisplay = get(this.get('line'), 'display');\n    var pointStyle = get(this.get('point'), 'style', {});\n    var lineStyle = get(this.get('line'), 'style', {});\n    var textStyle = get(this.get('text'), 'style', {});\n    var direction = this.get('direction');\n    var lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n    var factor = direction === 'upward' ? -1 : 1;\n    return {\n      point: __assign({\n        x: 0,\n        y: 0\n      }, pointStyle),\n      line: __assign({\n        path: [['M', 0, 0], ['L', 0, lineLength * factor]]\n      }, lineStyle),\n      text: __assign({\n        x: 0,\n        y: (lineLength + 2) * factor,\n        text: get(this.get('text'), 'content', ''),\n        textBaseline: direction === 'upward' ? 'bottom' : 'top'\n      }, textStyle)\n    };\n  };\n\n  return DataMarkerAnnotation;\n}(GroupComponent);\n\nexport default DataMarkerAnnotation;","map":{"version":3,"sources":["../../src/annotation/data-marker.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\nvar DataMarkerAnnotation = /** @class */ (function (_super) {\n    __extends(DataMarkerAnnotation, _super);\n    function DataMarkerAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    DataMarkerAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'dataMarker', locationType: 'point', x: 0, y: 0, point: {}, line: {}, text: {}, direction: 'upward', autoAdjust: true, coordinateBBox: null, defaultCfg: {\n                point: {\n                    display: true,\n                    style: {\n                        r: 3,\n                        fill: '#FFFFFF',\n                        stroke: '#1890FF',\n                        lineWidth: 2,\n                    },\n                },\n                line: {\n                    display: true,\n                    length: 20,\n                    style: {\n                        stroke: Theme.lineColor,\n                        lineWidth: 1,\n                    },\n                },\n                text: {\n                    content: '',\n                    display: true,\n                    style: {\n                        fill: Theme.textColor,\n                        opacity: 0.65,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n            } });\n    };\n    DataMarkerAnnotation.prototype.renderInner = function (group) {\n        if (get(this.get('line'), 'display')) {\n            this.renderLine(group);\n        }\n        if (get(this.get('text'), 'display')) {\n            this.renderText(group);\n        }\n        if (get(this.get('point'), 'display')) {\n            this.renderPoint(group);\n        }\n        if (this.get('autoAdjust')) {\n            this.autoAdjust(group);\n        }\n    };\n    DataMarkerAnnotation.prototype.applyOffset = function () {\n        this.moveElementTo(this.get('group'), {\n            x: this.get('x') + this.get('offsetX'),\n            y: this.get('y') + this.get('offsetY'),\n        });\n    };\n    DataMarkerAnnotation.prototype.renderPoint = function (group) {\n        var point = this.getShapeAttrs().point;\n        this.addShape(group, {\n            type: 'circle',\n            id: this.getElementId('point'),\n            name: 'annotation-point',\n            attrs: point,\n        });\n    };\n    DataMarkerAnnotation.prototype.renderLine = function (group) {\n        var line = this.getShapeAttrs().line;\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('line'),\n            name: 'annotation-line',\n            attrs: line,\n        });\n    };\n    DataMarkerAnnotation.prototype.renderText = function (group) {\n        var textAttrs = this.getShapeAttrs().text;\n        var x = textAttrs.x, y = textAttrs.y, text = textAttrs.text, style = __rest(textAttrs, [\"x\", \"y\", \"text\"]);\n        var _a = this.get('text'), background = _a.background, maxLength = _a.maxLength, autoEllipsis = _a.autoEllipsis, isVertival = _a.isVertival, ellipsisPosition = _a.ellipsisPosition;\n        var tagCfg = {\n            x: x,\n            y: y,\n            id: this.getElementId('text'),\n            name: 'annotation-text',\n            content: text,\n            style: style,\n            background: background,\n            maxLength: maxLength,\n            autoEllipsis: autoEllipsis,\n            isVertival: isVertival,\n            ellipsisPosition: ellipsisPosition,\n        };\n        renderTag(group, tagCfg);\n    };\n    DataMarkerAnnotation.prototype.autoAdjust = function (group) {\n        var direction = this.get('direction');\n        var x = this.get('x');\n        var y = this.get('y');\n        var lineLength = get(this.get('line'), 'length', 0);\n        var coordinateBBox = this.get('coordinateBBox');\n        var _a = group.getBBox(), minX = _a.minX, maxX = _a.maxX, minY = _a.minY, maxY = _a.maxY;\n        var textGroup = group.findById(this.getElementId('text-group'));\n        var textShape = group.findById(this.getElementId('text'));\n        var lineShape = group.findById(this.getElementId('line'));\n        if (!coordinateBBox) {\n            return;\n        }\n        if (textGroup) {\n            if (x + minX <= coordinateBBox.minX) {\n                // 左侧超出\n                var overflow = coordinateBBox.minX - (x + minX);\n                applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n            }\n            if (x + maxX >= coordinateBBox.maxX) {\n                // 右侧超出\n                var overflow = x + maxX - coordinateBBox.maxX;\n                applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n            }\n        }\n        if ((direction === 'upward' && y + minY <= coordinateBBox.minY) ||\n            (direction !== 'upward' && y + maxY >= coordinateBBox.maxY)) {\n            // 上方或者下方超出\n            var textBaseline = void 0;\n            var factor = void 0;\n            if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n                textBaseline = 'top';\n                factor = 1;\n            }\n            else {\n                textBaseline = 'bottom';\n                factor = -1;\n            }\n            textShape.attr('textBaseline', textBaseline);\n            if (lineShape) {\n                lineShape.attr('path', [\n                    ['M', 0, 0],\n                    ['L', 0, lineLength * factor],\n                ]);\n            }\n            applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor);\n        }\n    };\n    DataMarkerAnnotation.prototype.getShapeAttrs = function () {\n        var lineDisplay = get(this.get('line'), 'display');\n        var pointStyle = get(this.get('point'), 'style', {});\n        var lineStyle = get(this.get('line'), 'style', {});\n        var textStyle = get(this.get('text'), 'style', {});\n        var direction = this.get('direction');\n        var lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n        var factor = direction === 'upward' ? -1 : 1;\n        return {\n            point: __assign({ x: 0, y: 0 }, pointStyle),\n            line: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', 0, lineLength * factor],\n                ] }, lineStyle),\n            text: __assign({ x: 0, y: (lineLength + 2) * factor, text: get(this.get('text'), 'content', ''), textBaseline: direction === 'upward' ? 'bottom' : 'top' }, textStyle),\n        };\n    };\n    return DataMarkerAnnotation;\n}(GroupComponent));\nexport default DataMarkerAnnotation;\n//# sourceMappingURL=data-marker.js.map"]},"metadata":{},"sourceType":"module"}