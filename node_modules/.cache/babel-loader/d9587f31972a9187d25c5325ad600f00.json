{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get } from '@antv/util';\nimport { ellipsisLabel } from './label';\nimport { applyRotate, applyTranslate } from './matrix';\nimport { formatPadding } from './util';\nexport function renderTag(container, tagCfg) {\n  var x = tagCfg.x,\n      y = tagCfg.y,\n      content = tagCfg.content,\n      style = tagCfg.style,\n      id = tagCfg.id,\n      name = tagCfg.name,\n      rotate = tagCfg.rotate,\n      maxLength = tagCfg.maxLength,\n      autoEllipsis = tagCfg.autoEllipsis,\n      isVertical = tagCfg.isVertical,\n      ellipsisPosition = tagCfg.ellipsisPosition,\n      background = tagCfg.background;\n  var tagGroup = container.addGroup({\n    id: id + \"-group\",\n    name: name + \"-group\",\n    attrs: {\n      x: x,\n      y: y\n    }\n  }); // Text shape\n\n  var text = tagGroup.addShape({\n    type: 'text',\n    id: id,\n    name: name,\n    attrs: __assign({\n      x: 0,\n      y: 0,\n      text: content\n    }, style)\n  }); // maxLength 应包含 background 中的 padding 值\n\n  var padding = formatPadding(get(background, 'padding', 0));\n\n  if (maxLength && autoEllipsis) {\n    var maxTextLength = maxLength - (padding[1] + padding[3]); // 超出自动省略\n\n    ellipsisLabel(!isVertical, text, maxTextLength, ellipsisPosition);\n  }\n\n  if (background) {\n    // 渲染文本背景\n    var backgroundStyle = get(background, 'style', {});\n\n    var _a = text.getCanvasBBox(),\n        minX = _a.minX,\n        minY = _a.minY,\n        width = _a.width,\n        height = _a.height;\n\n    var tagBg = tagGroup.addShape('rect', {\n      id: id + \"-bg\",\n      name: id + \"-bg\",\n      attrs: __assign({\n        x: minX - padding[3],\n        y: minY - padding[0],\n        width: width + padding[1] + padding[3],\n        height: height + padding[0] + padding[2]\n      }, backgroundStyle)\n    });\n    tagBg.toBack();\n  }\n\n  applyTranslate(tagGroup, x, y);\n  applyRotate(tagGroup, rotate, x, y);\n}","map":{"version":3,"sources":["../../src/util/graphic.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { get } from '@antv/util';\nimport { ellipsisLabel } from './label';\nimport { applyRotate, applyTranslate } from './matrix';\nimport { formatPadding } from './util';\nexport function renderTag(container, tagCfg) {\n    var x = tagCfg.x, y = tagCfg.y, content = tagCfg.content, style = tagCfg.style, id = tagCfg.id, name = tagCfg.name, rotate = tagCfg.rotate, maxLength = tagCfg.maxLength, autoEllipsis = tagCfg.autoEllipsis, isVertical = tagCfg.isVertical, ellipsisPosition = tagCfg.ellipsisPosition, background = tagCfg.background;\n    var tagGroup = container.addGroup({\n        id: id + \"-group\",\n        name: name + \"-group\",\n        attrs: {\n            x: x,\n            y: y,\n        }\n    });\n    // Text shape\n    var text = tagGroup.addShape({\n        type: 'text',\n        id: id,\n        name: name,\n        attrs: __assign({ x: 0, y: 0, text: content }, style),\n    });\n    // maxLength 应包含 background 中的 padding 值\n    var padding = formatPadding(get(background, 'padding', 0));\n    if (maxLength && autoEllipsis) {\n        var maxTextLength = maxLength - (padding[1] + padding[3]);\n        // 超出自动省略\n        ellipsisLabel(!isVertical, text, maxTextLength, ellipsisPosition);\n    }\n    if (background) {\n        // 渲染文本背景\n        var backgroundStyle = get(background, 'style', {});\n        var _a = text.getCanvasBBox(), minX = _a.minX, minY = _a.minY, width = _a.width, height = _a.height;\n        var tagBg = tagGroup.addShape('rect', {\n            id: id + \"-bg\",\n            name: id + \"-bg\",\n            attrs: __assign({ x: minX - padding[3], y: minY - padding[0], width: width + padding[1] + padding[3], height: height + padding[0] + padding[2] }, backgroundStyle),\n        });\n        tagBg.toBack();\n    }\n    applyTranslate(tagGroup, x, y);\n    applyRotate(tagGroup, rotate, x, y);\n}\n//# sourceMappingURL=graphic.js.map"]},"metadata":{},"sourceType":"module"}