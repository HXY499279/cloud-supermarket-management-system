{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview 线\n * @author dxq613@gmail.com\n */\n\nimport { Line as LineUtil } from '@antv/g-math';\nimport ShapeBase from './base';\nimport inLine from '../util/in-stroke/line';\nimport * as ArrowUtil from '../util/arrow';\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Line.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false\n    });\n  };\n\n  Line.prototype.initAttrs = function (attrs) {\n    this.setArrow();\n  }; // 更新属性时，检测是否更改了箭头\n\n\n  Line.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue); // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n\n\n    this.setArrow();\n  };\n\n  Line.prototype.setArrow = function () {\n    var attrs = this.attr();\n    var x1 = attrs.x1,\n        y1 = attrs.y1,\n        x2 = attrs.x2,\n        y2 = attrs.y2,\n        startArrow = attrs.startArrow,\n        endArrow = attrs.endArrow;\n\n    if (startArrow) {\n      ArrowUtil.addStartArrow(this, attrs, x2, y2, x1, y1);\n    }\n\n    if (endArrow) {\n      ArrowUtil.addEndArrow(this, attrs, x1, y1, x2, y2);\n    }\n  };\n\n  Line.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    if (!isStroke || !lineWidth) {\n      return false;\n    }\n\n    var _a = this.attr(),\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n\n    return inLine(x1, y1, x2, y2, lineWidth, x, y);\n  };\n\n  Line.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var x1 = attrs.x1,\n        y1 = attrs.y1,\n        x2 = attrs.x2,\n        y2 = attrs.y2,\n        startArrow = attrs.startArrow,\n        endArrow = attrs.endArrow;\n    var startArrowDistance = {\n      dx: 0,\n      dy: 0\n    };\n    var endArrowDistance = {\n      dx: 0,\n      dy: 0\n    };\n\n    if (startArrow && startArrow.d) {\n      startArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.startArrow.d);\n    }\n\n    if (endArrow && endArrow.d) {\n      endArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.endArrow.d);\n    }\n\n    context.beginPath(); // 如果自定义箭头，线条相应缩进\n\n    context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);\n    context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);\n  };\n\n  Line.prototype.afterDrawPath = function (context) {\n    var startArrowShape = this.get('startArrowShape');\n    var endArrowShape = this.get('endArrowShape');\n\n    if (startArrowShape) {\n      startArrowShape.draw(context);\n    }\n\n    if (endArrowShape) {\n      endArrowShape.draw(context);\n    }\n  };\n  /**\n   * Get length of line\n   * @return {number} length\n   */\n\n\n  Line.prototype.getTotalLength = function () {\n    var _a = this.attr(),\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n\n    return LineUtil.length(x1, y1, x2, y2);\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.attr(),\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  };\n\n  return Line;\n}(ShapeBase);\n\nexport default Line;","map":{"version":3,"sources":["../../src/shape/line.ts"],"names":[],"mappings":";AAAA;;;AAGG;;AACH,SAAS,IAAI,IAAI,QAAjB,QAAiC,cAAjC;AACA,OAAO,SAAP,MAAsB,QAAtB;AACA,OAAO,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAK,SAAZ,MAA2B,eAA3B;;AAEA,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmB,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAAnB,WAAA,IAAA,GAAA;;AAkGC;;AAjGC,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,QAAM,KAAK,GAAG,MAAA,CAAA,SAAA,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB,CAAd;;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,MAAA,EAAE,EAAE,CADI;AAER,MAAA,EAAE,EAAE,CAFI;AAGR,MAAA,EAAE,EAAE,CAHI;AAIR,MAAA,EAAE,EAAE,CAJI;AAKR,MAAA,UAAU,EAAE,KALJ;AAMR,MAAA,QAAQ,EAAE;AANF,KADV,CAAA;AASD,GAXD;;AAaA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAe;AACb,SAAK,QAAL;AACD,GAFD,CAdF,CAkBE;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,IAAb,EAA2B,KAA3B,EAAuC,WAAvC,EAAuD;AACrD,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,IAAnB,EAAyB,KAAzB,EAAgC,WAAhC,EADqD,CAErD;;;AACA,SAAK,QAAL;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACQ,QAAA,EAAE,GAAuC,KAAK,CAA5C,EAAF;AAAA,QAAI,EAAE,GAAmC,KAAK,CAAxC,EAAN;AAAA,QAAQ,EAAE,GAA+B,KAAK,CAApC,EAAV;AAAA,QAAY,EAAE,GAA2B,KAAK,CAAhC,EAAd;AAAA,QAAgB,UAAU,GAAe,KAAK,CAApB,UAA1B;AAAA,QAA4B,QAAQ,GAAK,KAAK,CAAV,QAApC;;AACR,QAAI,UAAJ,EAAgB;AACd,MAAA,SAAS,CAAC,aAAV,CAAwB,IAAxB,EAA8B,KAA9B,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD;AACD;;AACD,QAAI,QAAJ,EAAc;AACZ,MAAA,SAAS,CAAC,WAAV,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C;AACD;AACF,GATD;;AAWA,EAAA,IAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,CAAjB,EAAoB,CAApB,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,SAAzC,EAAkD;AAChD,QAAI,CAAC,QAAD,IAAa,CAAC,SAAlB,EAA6B;AAC3B,aAAO,KAAP;AACD;;AACK,QAAA,EAAA,GAAqB,KAAK,IAAL,EAArB;AAAA,QAAE,EAAE,GAAA,EAAA,CAAA,EAAJ;AAAA,QAAM,EAAE,GAAA,EAAA,CAAA,EAAR;AAAA,QAAU,EAAE,GAAA,EAAA,CAAA,EAAZ;AAAA,QAAc,EAAE,GAAA,EAAA,CAAA,EAAhB;;AACN,WAAO,MAAM,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,SAAjB,EAA4B,CAA5B,EAA+B,CAA/B,CAAb;AACD,GAND;;AAQA,EAAA,IAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAkB;AAChB,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACQ,QAAA,EAAE,GAAuC,KAAK,CAA5C,EAAF;AAAA,QAAI,EAAE,GAAmC,KAAK,CAAxC,EAAN;AAAA,QAAQ,EAAE,GAA+B,KAAK,CAApC,EAAV;AAAA,QAAY,EAAE,GAA2B,KAAK,CAAhC,EAAd;AAAA,QAAgB,UAAU,GAAe,KAAK,CAApB,UAA1B;AAAA,QAA4B,QAAQ,GAAK,KAAK,CAAV,QAApC;AACR,QAAI,kBAAkB,GAAG;AACvB,MAAA,EAAE,EAAE,CADmB;AAEvB,MAAA,EAAE,EAAE;AAFmB,KAAzB;AAIA,QAAI,gBAAgB,GAAG;AACrB,MAAA,EAAE,EAAE,CADiB;AAErB,MAAA,EAAE,EAAE;AAFiB,KAAvB;;AAKA,QAAI,UAAU,IAAI,UAAU,CAAC,CAA7B,EAAgC;AAC9B,MAAA,kBAAkB,GAAG,SAAS,CAAC,gBAAV,CAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,KAAK,CAAC,UAAN,CAAiB,CAA5D,CAArB;AACD;;AACD,QAAI,QAAQ,IAAI,QAAQ,CAAC,CAAzB,EAA4B;AAC1B,MAAA,gBAAgB,GAAG,SAAS,CAAC,gBAAV,CAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,KAAK,CAAC,QAAN,CAAe,CAA1D,CAAnB;AACD;;AAED,IAAA,OAAO,CAAC,SAAR,GAnBgB,CAoBhB;;AACA,IAAA,OAAO,CAAC,MAAR,CAAe,EAAE,GAAG,kBAAkB,CAAC,EAAvC,EAA2C,EAAE,GAAG,kBAAkB,CAAC,EAAnE;AACA,IAAA,OAAO,CAAC,MAAR,CAAe,EAAE,GAAG,gBAAgB,CAAC,EAArC,EAAyC,EAAE,GAAG,gBAAgB,CAAC,EAA/D;AACD,GAvBD;;AAyBA,EAAA,IAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,OAAd,EAAqB;AACnB,QAAM,eAAe,GAAG,KAAK,GAAL,CAAS,iBAAT,CAAxB;AACA,QAAM,aAAa,GAAG,KAAK,GAAL,CAAS,eAAT,CAAtB;;AACA,QAAI,eAAJ,EAAqB;AACnB,MAAA,eAAe,CAAC,IAAhB,CAAqB,OAArB;AACD;;AACD,QAAI,aAAJ,EAAmB;AACjB,MAAA,aAAa,CAAC,IAAd,CAAmB,OAAnB;AACD;AACF,GATD;AAWA;;;AAGG;;;AACH,EAAA,IAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAqB,KAAK,IAAL,EAArB;AAAA,QAAE,EAAE,GAAA,EAAA,CAAA,EAAJ;AAAA,QAAM,EAAE,GAAA,EAAA,CAAA,EAAR;AAAA,QAAU,EAAE,GAAA,EAAA,CAAA,EAAZ;AAAA,QAAc,EAAE,GAAA,EAAA,CAAA,EAAhB;;AACN,WAAO,QAAQ,CAAC,MAAT,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,CAAP;AACD,GAHD;AAKA;;;;AAIG;;;AACH,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAsB;AACd,QAAA,EAAA,GAAqB,KAAK,IAAL,EAArB;AAAA,QAAE,EAAE,GAAA,EAAA,CAAA,EAAJ;AAAA,QAAM,EAAE,GAAA,EAAA,CAAA,EAAR;AAAA,QAAU,EAAE,GAAA,EAAA,CAAA,EAAZ;AAAA,QAAc,EAAE,GAAA,EAAA,CAAA,EAAhB;;AACN,WAAO,QAAQ,CAAC,OAAT,CAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,KAAjC,CAAP;AACD,GAHD;;AAIF,SAAA,IAAA;AAAC,CAlGD,CAAmB,SAAnB,CAAA;;AAoGA,eAAe,IAAf","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview 线\n * @author dxq613@gmail.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport ShapeBase from './base';\nimport inLine from '../util/in-stroke/line';\nimport * as ArrowUtil from '../util/arrow';\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Line.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x1: 0, y1: 0, x2: 0, y2: 0, startArrow: false, endArrow: false });\n    };\n    Line.prototype.initAttrs = function (attrs) {\n        this.setArrow();\n    };\n    // 更新属性时，检测是否更改了箭头\n    Line.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n        this.setArrow();\n    };\n    Line.prototype.setArrow = function () {\n        var attrs = this.attr();\n        var x1 = attrs.x1, y1 = attrs.y1, x2 = attrs.x2, y2 = attrs.y2, startArrow = attrs.startArrow, endArrow = attrs.endArrow;\n        if (startArrow) {\n            ArrowUtil.addStartArrow(this, attrs, x2, y2, x1, y1);\n        }\n        if (endArrow) {\n            ArrowUtil.addEndArrow(this, attrs, x1, y1, x2, y2);\n        }\n    };\n    Line.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n        if (!isStroke || !lineWidth) {\n            return false;\n        }\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return inLine(x1, y1, x2, y2, lineWidth, x, y);\n    };\n    Line.prototype.createPath = function (context) {\n        var attrs = this.attr();\n        var x1 = attrs.x1, y1 = attrs.y1, x2 = attrs.x2, y2 = attrs.y2, startArrow = attrs.startArrow, endArrow = attrs.endArrow;\n        var startArrowDistance = {\n            dx: 0,\n            dy: 0,\n        };\n        var endArrowDistance = {\n            dx: 0,\n            dy: 0,\n        };\n        if (startArrow && startArrow.d) {\n            startArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.startArrow.d);\n        }\n        if (endArrow && endArrow.d) {\n            endArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.endArrow.d);\n        }\n        context.beginPath();\n        // 如果自定义箭头，线条相应缩进\n        context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);\n        context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);\n    };\n    Line.prototype.afterDrawPath = function (context) {\n        var startArrowShape = this.get('startArrowShape');\n        var endArrowShape = this.get('endArrowShape');\n        if (startArrowShape) {\n            startArrowShape.draw(context);\n        }\n        if (endArrowShape) {\n            endArrowShape.draw(context);\n        }\n    };\n    /**\n     * Get length of line\n     * @return {number} length\n     */\n    Line.prototype.getTotalLength = function () {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.length(x1, y1, x2, y2);\n    };\n    /**\n     * Get point according to ratio\n     * @param {number} ratio\n     * @return {Point} point\n     */\n    Line.prototype.getPoint = function (ratio) {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n    };\n    return Line;\n}(ShapeBase));\nexport default Line;\n//# sourceMappingURL=line.js.map"]},"metadata":{},"sourceType":"module"}