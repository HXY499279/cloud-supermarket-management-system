{"ast":null,"code":"var LOAD_COMPONENT_CONTROLLERS = {};\n/**\n * 全局注册组件。\n * @param name 组件名称\n * @param plugin 注册的组件类\n * @returns void\n */\n\nexport function registerComponentController(name, plugin) {\n  LOAD_COMPONENT_CONTROLLERS[name] = plugin;\n}\n/**\n * 删除全局组件。\n * @param name 组件名\n * @returns void\n */\n\nexport function unregisterComponentController(name) {\n  delete LOAD_COMPONENT_CONTROLLERS[name];\n}\n/**\n * 获取以注册的组件名。\n * @returns string[] 返回已注册的组件名称\n */\n\nexport function getComponentControllerNames() {\n  return Object.keys(LOAD_COMPONENT_CONTROLLERS);\n}\n/**\n * 根据组件名获取组件类。\n * @param name 组件名\n * @returns 返回组件类\n */\n\nexport function getComponentController(name) {\n  return LOAD_COMPONENT_CONTROLLERS[name];\n}","map":{"version":3,"sources":["../../../src/chart/controller/index.ts"],"names":[],"mappings":"AAEA,IAAM,0BAA0B,GAAmC,EAAnE;AAEA;;;;;AAKG;;AACH,OAAM,SAAU,2BAAV,CAAsC,IAAtC,EAAoD,MAApD,EAA0E;AAC9E,EAAA,0BAA0B,CAAC,IAAD,CAA1B,GAAmC,MAAnC;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,6BAAV,CAAwC,IAAxC,EAAoD;AACxD,SAAO,0BAA0B,CAAC,IAAD,CAAjC;AACD;AAED;;;AAGG;;AACH,OAAM,SAAU,2BAAV,GAAqC;AACzC,SAAO,MAAM,CAAC,IAAP,CAAY,0BAAZ,CAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,sBAAV,CAAiC,IAAjC,EAA6C;AACjD,SAAO,0BAA0B,CAAC,IAAD,CAAjC;AACD","sourcesContent":["import { ControllerCtor } from './base';\n\nconst LOAD_COMPONENT_CONTROLLERS: Record<string, ControllerCtor> = {};\n\n/**\n * 全局注册组件。\n * @param name 组件名称\n * @param plugin 注册的组件类\n * @returns void\n */\nexport function registerComponentController(name: string, plugin: ControllerCtor) {\n  LOAD_COMPONENT_CONTROLLERS[name] = plugin;\n}\n\n/**\n * 删除全局组件。\n * @param name 组件名\n * @returns void\n */\nexport function unregisterComponentController(name: string) {\n  delete LOAD_COMPONENT_CONTROLLERS[name];\n}\n\n/**\n * 获取以注册的组件名。\n * @returns string[] 返回已注册的组件名称\n */\nexport function getComponentControllerNames(): string[] {\n  return Object.keys(LOAD_COMPONENT_CONTROLLERS);\n}\n\n/**\n * 根据组件名获取组件类。\n * @param name 组件名\n * @returns 返回组件类\n */\nexport function getComponentController(name: string): ControllerCtor {\n  return LOAD_COMPONENT_CONTROLLERS[name];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}