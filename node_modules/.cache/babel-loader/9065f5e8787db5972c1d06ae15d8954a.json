{"ast":null,"code":"import { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\n\nexport function updateLabel(fromShape, toShape, cfg) {\n  var data = cfg.data,\n      origin = cfg.origin,\n      animateCfg = cfg.animateCfg,\n      coordinate = cfg.coordinate;\n  var updateAnimateCfg = get(animateCfg, 'update');\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n  fromShape.getChildren().forEach(function (fromChild, idx) {\n    var toChild = toShape.getChildByIndex(idx);\n\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n      var newAttrs = getReplaceAttrs(fromChild, toChild);\n\n      if (updateAnimateCfg) {\n        doAnimate(fromChild, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate: coordinate\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n\n      if (toChild.isGroup()) {\n        updateLabel(fromChild, toChild, cfg);\n      }\n    }\n  }); // append\n\n  each(toShape.getChildren(), function (child, idx) {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}","map":{"version":3,"sources":["../../src/component/update-label.ts"],"names":[],"mappings":"AAEA,SAAS,IAAT,EAAe,GAAf,QAA0B,YAA1B;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,eAAT,QAAgC,kBAAhC;AAUA;;;;;;;;;AASG;;AACH,OAAM,SAAU,WAAV,CAAsB,SAAtB,EAAyC,OAAzC,EAA0D,GAA1D,EAAkE;AAC9D,MAAA,IAAI,GAAqC,GAAG,CAAxC,IAAJ;AAAA,MAAM,MAAM,GAA6B,GAAG,CAAhC,MAAZ;AAAA,MAAc,UAAU,GAAiB,GAAG,CAApB,UAAxB;AAAA,MAA0B,UAAU,GAAK,GAAG,CAAR,UAApC;AACR,MAAM,gBAAgB,GAAG,GAAG,CAAC,UAAD,EAAa,QAAb,CAA5B;AAEA,EAAA,SAAS,CAAC,GAAV,CAAc,MAAd,EAAsB,IAAtB;AACA,EAAA,SAAS,CAAC,GAAV,CAAc,QAAd,EAAwB,MAAxB;AACA,EAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,UAA5B;AACA,EAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,UAA5B;AACA,EAAA,SAAS,CAAC,GAAV,CAAc,SAAd,EAAyB,OAAO,CAAC,GAAR,CAAY,SAAZ,CAAzB;AAEA,EAAA,SAAS,CAAC,WAAV,GAAwB,OAAxB,CAAgC,UAAC,SAAD,EAAY,GAAZ,EAAe;AAC7C,QAAM,OAAO,GAAG,OAAO,CAAC,eAAR,CAAwB,GAAxB,CAAhB;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,MAAA,SAAS,CAAC,WAAV,CAAsB,SAAtB;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,IAAjB;AACD,KAHD,MAGO;AACL,MAAA,SAAS,CAAC,GAAV,CAAc,MAAd,EAAsB,IAAtB;AACA,MAAA,SAAS,CAAC,GAAV,CAAc,QAAd,EAAwB,MAAxB;AACA,MAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,UAA5B;AACA,MAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,UAA5B;AAEA,UAAM,QAAQ,GAAG,eAAe,CAAC,SAAD,EAAsB,OAAtB,CAAhC;;AACA,UAAI,gBAAJ,EAAsB;AACpB,QAAA,SAAS,CAAC,SAAD,EAAsB,gBAAtB,EAAwC;AAC/C,UAAA,OAAO,EAAE,QADsC;AAE/C,UAAA,UAAU,EAAA;AAFqC,SAAxC,CAAT;AAID,OALD,MAKO;AACL,QAAA,SAAS,CAAC,IAAV,CAAe,QAAf;AACD;;AACD,UAAI,OAAO,CAAC,OAAR,EAAJ,EAAuB;AACrB,QAAA,WAAW,CAAC,SAAD,EAAmB,OAAnB,EAAmC,GAAnC,CAAX;AACD;AACF;AACF,GAxBD,EAVsE,CAoCtE;;AACA,EAAA,IAAI,CAAC,OAAO,CAAC,WAAR,EAAD,EAAwB,UAAC,KAAD,EAAQ,GAAR,EAAW;AACrC,QAAI,GAAG,IAAI,SAAS,CAAC,QAAV,EAAX,EAAiC;AAC/B,UAAI,CAAC,KAAK,CAAC,SAAX,EAAsB;AACpB,QAAA,SAAS,CAAC,GAAV,CAAc,KAAd;AACD;AACF;AACF,GANG,CAAJ;AAOD","sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n\n/** label 的必要配置 */\ntype Cfg = {\n  data: any;\n  origin: any;\n  animateCfg: any;\n  coordinate: Coordinate;\n};\n\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape: IGroup, toShape: IGroup, cfg: Cfg): void {\n  const { data, origin, animateCfg, coordinate } = cfg;\n  const updateAnimateCfg = get(animateCfg, 'update');\n\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n\n  fromShape.getChildren().forEach((fromChild, idx) => {\n    const toChild = toShape.getChildByIndex(idx) as IShape;\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n\n      const newAttrs = getReplaceAttrs(fromChild as IShape, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild as IShape, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate,\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild as any, toChild as any, cfg);\n      }\n    }\n  });\n\n  // append\n  each(toShape.getChildren(), (child, idx) => {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}