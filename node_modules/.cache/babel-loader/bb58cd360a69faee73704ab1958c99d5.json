{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\n\nvar LegendBase =\n/** @class */\nfunction (_super) {\n  __extends(LegendBase, _super);\n\n  function LegendBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LegendBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'horizontal',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      offsetX: 0,\n      offsetY: 0,\n      title: null,\n      background: null\n    });\n  };\n\n  LegendBase.prototype.getLayoutBBox = function () {\n    var bbox = _super.prototype.getLayoutBBox.call(this);\n\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var width = bbox.width,\n        height = bbox.height;\n\n    if (maxWidth) {\n      width = Math.min(width, maxWidth);\n    }\n\n    if (maxHeight) {\n      height = Math.min(height, maxHeight);\n    }\n\n    return createBBox(bbox.minX, bbox.minY, width, height);\n  };\n\n  LegendBase.prototype.setLocation = function (cfg) {\n    this.set('x', cfg.x);\n    this.set('y', cfg.y);\n    this.resetLocation();\n  };\n\n  LegendBase.prototype.resetLocation = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n    this.moveElementTo(this.get('group'), {\n      x: x + offsetX,\n      y: y + offsetY\n    });\n  };\n\n  LegendBase.prototype.applyOffset = function () {\n    this.resetLocation();\n  }; // 获取当前绘制的点\n\n\n  LegendBase.prototype.getDrawPoint = function () {\n    return this.get('currentPoint');\n  };\n\n  LegendBase.prototype.setDrawPoint = function (point) {\n    return this.set('currentPoint', point);\n  }; // 复写父类定义的绘制方法\n\n\n  LegendBase.prototype.renderInner = function (group) {\n    this.resetDraw();\n\n    if (this.get('title')) {\n      this.drawTitle(group);\n    }\n\n    this.drawLegendContent(group);\n\n    if (this.get('background')) {\n      this.drawBackground(group);\n    } // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n\n  }; // 绘制背景\n\n\n  LegendBase.prototype.drawBackground = function (group) {\n    var background = this.get('background');\n    var bbox = group.getBBox();\n    var padding = formatPadding(background.padding);\n\n    var attrs = __assign({\n      // 背景从 (0,0) 开始绘制\n      x: 0,\n      y: 0,\n      width: bbox.width + padding[1] + padding[3],\n      height: bbox.height + padding[0] + padding[2]\n    }, background.style);\n\n    var backgroundShape = this.addShape(group, {\n      type: 'rect',\n      id: this.getElementId('background'),\n      name: 'legend-background',\n      attrs: attrs\n    });\n    backgroundShape.toBack();\n  }; // 绘制标题，标题在图例项的上面\n\n\n  LegendBase.prototype.drawTitle = function (group) {\n    var currentPoint = this.get('currentPoint');\n    var titleCfg = this.get('title');\n    var spacing = titleCfg.spacing,\n        style = titleCfg.style,\n        text = titleCfg.text;\n    var shape = this.addShape(group, {\n      type: 'text',\n      id: this.getElementId('title'),\n      name: 'legend-title',\n      attrs: __assign({\n        text: text,\n        x: currentPoint.x,\n        y: currentPoint.y\n      }, style)\n    });\n    var bbox = shape.getBBox(); // 标题单独在一行\n\n    this.set('currentPoint', {\n      x: currentPoint.x,\n      y: bbox.maxY + spacing\n    });\n  }; // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n\n\n  LegendBase.prototype.resetDraw = function () {\n    var background = this.get('background');\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n\n    if (background) {\n      var padding = formatPadding(background.padding);\n      currentPoint.x = padding[3]; // 左边 padding\n\n      currentPoint.y = padding[0]; // 上面 padding\n    }\n\n    this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n  };\n\n  return LegendBase;\n}(GroupComponent);\n\nexport default LegendBase;","map":{"version":3,"sources":["../../src/legend/base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\nvar LegendBase = /** @class */ (function (_super) {\n    __extends(LegendBase, _super);\n    function LegendBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LegendBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'legend', \n            /**\n             * 布局方式： horizontal，vertical\n             * @type {String}\n             */\n            layout: 'horizontal', locationType: 'point', x: 0, y: 0, offsetX: 0, offsetY: 0, title: null, background: null });\n    };\n    LegendBase.prototype.getLayoutBBox = function () {\n        var bbox = _super.prototype.getLayoutBBox.call(this);\n        var maxWidth = this.get('maxWidth');\n        var maxHeight = this.get('maxHeight');\n        var width = bbox.width, height = bbox.height;\n        if (maxWidth) {\n            width = Math.min(width, maxWidth);\n        }\n        if (maxHeight) {\n            height = Math.min(height, maxHeight);\n        }\n        return createBBox(bbox.minX, bbox.minY, width, height);\n    };\n    LegendBase.prototype.setLocation = function (cfg) {\n        this.set('x', cfg.x);\n        this.set('y', cfg.y);\n        this.resetLocation();\n    };\n    LegendBase.prototype.resetLocation = function () {\n        var x = this.get('x');\n        var y = this.get('y');\n        var offsetX = this.get('offsetX');\n        var offsetY = this.get('offsetY');\n        this.moveElementTo(this.get('group'), {\n            x: x + offsetX,\n            y: y + offsetY,\n        });\n    };\n    LegendBase.prototype.applyOffset = function () {\n        this.resetLocation();\n    };\n    // 获取当前绘制的点\n    LegendBase.prototype.getDrawPoint = function () {\n        return this.get('currentPoint');\n    };\n    LegendBase.prototype.setDrawPoint = function (point) {\n        return this.set('currentPoint', point);\n    };\n    // 复写父类定义的绘制方法\n    LegendBase.prototype.renderInner = function (group) {\n        this.resetDraw();\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n        this.drawLegendContent(group);\n        if (this.get('background')) {\n            this.drawBackground(group);\n        }\n        // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n    };\n    // 绘制背景\n    LegendBase.prototype.drawBackground = function (group) {\n        var background = this.get('background');\n        var bbox = group.getBBox();\n        var padding = formatPadding(background.padding);\n        var attrs = __assign({ \n            // 背景从 (0,0) 开始绘制\n            x: 0, y: 0, width: bbox.width + padding[1] + padding[3], height: bbox.height + padding[0] + padding[2] }, background.style);\n        var backgroundShape = this.addShape(group, {\n            type: 'rect',\n            id: this.getElementId('background'),\n            name: 'legend-background',\n            attrs: attrs,\n        });\n        backgroundShape.toBack();\n    };\n    // 绘制标题，标题在图例项的上面\n    LegendBase.prototype.drawTitle = function (group) {\n        var currentPoint = this.get('currentPoint');\n        var titleCfg = this.get('title');\n        var spacing = titleCfg.spacing, style = titleCfg.style, text = titleCfg.text;\n        var shape = this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'legend-title',\n            attrs: __assign({ text: text, x: currentPoint.x, y: currentPoint.y }, style),\n        });\n        var bbox = shape.getBBox();\n        // 标题单独在一行\n        this.set('currentPoint', { x: currentPoint.x, y: bbox.maxY + spacing });\n    };\n    // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n    LegendBase.prototype.resetDraw = function () {\n        var background = this.get('background');\n        var currentPoint = { x: 0, y: 0 };\n        if (background) {\n            var padding = formatPadding(background.padding);\n            currentPoint.x = padding[3]; // 左边 padding\n            currentPoint.y = padding[0]; // 上面 padding\n        }\n        this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n    };\n    return LegendBase;\n}(GroupComponent));\nexport default LegendBase;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}