{"ast":null,"code":"var ELLIPSIS_CODE = '\\u2026';\n/** 获取字符串长度 */\n\nexport function strLen(str) {\n  var len = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    len += charAtLength(str, i);\n  }\n\n  return len;\n}\n/** 是否属于ASCII编码范畴 */\n\nexport function charAtLength(str, i) {\n  if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n    return 1;\n  } else {\n    return 2;\n  }\n}\n/** 文本省略 */\n\nexport function ellipsisString(str, reseveLength, position) {\n  if (position === void 0) {\n    position = 'tail';\n  }\n\n  var count = str.length;\n  var rst = '';\n\n  if (position === 'tail') {\n    for (var i = 0, index = 0; i < reseveLength;) {\n      var charLength = charAtLength(str, index);\n\n      if (i + charLength <= reseveLength) {\n        rst += str[index];\n        i += charAtLength(str, index);\n        index++;\n      } else {\n        break;\n      }\n    }\n\n    rst += ELLIPSIS_CODE;\n  } else if (position === 'head') {\n    for (var i = 0, index = count - 1; i < reseveLength;) {\n      var charLength = charAtLength(str, index);\n\n      if (i + charLength <= reseveLength) {\n        rst += str[index];\n        i += charAtLength(str, index);\n        index--;\n      } else {\n        break;\n      }\n    }\n\n    rst = ELLIPSIS_CODE + rst;\n  } else {\n    var startStr = '';\n    var endStr = '';\n\n    for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\n      var startCodeLen = charAtLength(str, startIndex);\n      var hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n\n      if (startCodeLen + i <= reseveLength) {\n        startStr += str[startIndex];\n        startIndex++;\n        i += startCodeLen;\n        hasAdd = true;\n      }\n\n      var endCodeLen = charAtLength(str, endIndex);\n\n      if (endCodeLen + i <= reseveLength) {\n        endStr = str[endIndex] + endStr;\n        i += endCodeLen;\n        endIndex--;\n        hasAdd = true;\n      }\n\n      if (!hasAdd) {\n        // 如果都没有增加字符，说明都不适合则中断\n        break;\n      }\n    }\n\n    rst = startStr + ELLIPSIS_CODE + endStr;\n  }\n\n  return rst;\n}","map":{"version":3,"sources":["../../src/util/text.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var ELLIPSIS_CODE = '\\u2026';\n/** 获取字符串长度 */\nexport function strLen(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; i++) {\n        len += charAtLength(str, i);\n    }\n    return len;\n}\n/** 是否属于ASCII编码范畴 */\nexport function charAtLength(str, i) {\n    if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n        return 1;\n    }\n    else {\n        return 2;\n    }\n}\n/** 文本省略 */\nexport function ellipsisString(str, reseveLength, position) {\n    if (position === void 0) { position = 'tail'; }\n    var count = str.length;\n    var rst = '';\n    if (position === 'tail') {\n        for (var i = 0, index = 0; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index++;\n            }\n            else {\n                break;\n            }\n        }\n        rst += ELLIPSIS_CODE;\n    }\n    else if (position === 'head') {\n        for (var i = 0, index = count - 1; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index--;\n            }\n            else {\n                break;\n            }\n        }\n        rst = ELLIPSIS_CODE + rst;\n    }\n    else {\n        var startStr = '';\n        var endStr = '';\n        for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\n            var startCodeLen = charAtLength(str, startIndex);\n            var hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n            if (startCodeLen + i <= reseveLength) {\n                startStr += str[startIndex];\n                startIndex++;\n                i += startCodeLen;\n                hasAdd = true;\n            }\n            var endCodeLen = charAtLength(str, endIndex);\n            if (endCodeLen + i <= reseveLength) {\n                endStr = str[endIndex] + endStr;\n                i += endCodeLen;\n                endIndex--;\n                hasAdd = true;\n            }\n            if (!hasAdd) {\n                // 如果都没有增加字符，说明都不适合则中断\n                break;\n            }\n        }\n        rst = startStr + ELLIPSIS_CODE + endStr;\n    }\n    return rst;\n}\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}