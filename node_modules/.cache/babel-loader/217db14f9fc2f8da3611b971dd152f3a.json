{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { isArray, isNumber } from '@antv/util';\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\n\nexport function isAutoPadding(padding) {\n  return !isNumber(padding) && !isArray(padding);\n}\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\n\nexport function parsePadding(padding) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n\n  var paddingArray = isArray(padding) ? padding : [padding];\n\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n\n    case 2:\n      paddingArray = __spreadArrays(paddingArray, paddingArray);\n      break;\n\n    case 3:\n      paddingArray = __spreadArrays(paddingArray, [paddingArray[1]]);\n      break;\n\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n\n  return paddingArray;\n}","map":{"version":3,"sources":["../../src/util/padding.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,QAAlB,QAAkC,YAAlC;AAGA;;;;AAIG;;AACH,OAAM,SAAU,aAAV,CAAwB,OAAxB,EAA4C;AAChD,SAAO,CAAC,QAAQ,CAAC,OAAD,CAAT,IAAsB,CAAC,OAAO,CAAC,OAAD,CAArC;AACD;AAED;;;;;AAKG;;AACH,OAAM,SAAU,YAAV,CAAuB,OAAvB,EAAqD;AAA9B,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAA8B;;AACzD,MAAI,YAAY,GAAG,OAAO,CAAC,OAAD,CAAP,GAAmB,OAAnB,GAA6B,CAAC,OAAD,CAAhD;;AAEA,UAAQ,YAAY,CAAC,MAArB;AACE,SAAK,CAAL;AACE,MAAA,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf;AACA;;AACF,SAAK,CAAL;AACE,MAAA,YAAY,GAAG,IAAI,KAAJ,CAAU,CAAV,EAAa,IAAb,CAAkB,YAAY,CAAC,CAAD,CAA9B,CAAf;AACA;;AACF,SAAK,CAAL;AACE,MAAA,YAAY,GAAA,cAAA,CAAO,YAAP,EAAwB,YAAxB,CAAZ;AACA;;AACF,SAAK,CAAL;AACE,MAAA,YAAY,GAAA,cAAA,CAAO,YAAP,EAAmB,CAAE,YAAY,CAAC,CAAD,CAAd,CAAnB,CAAZ;AACA;;AACF;AACE;AACA,MAAA,YAAY,GAAG,YAAY,CAAC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAf;AACA;AAhBJ;;AAmBA,SAAO,YAAP;AACD","sourcesContent":["import { isArray, isNumber } from '@antv/util';\nimport { Padding, ViewPadding } from '../interface';\n\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding: ViewPadding): padding is 'auto' {\n  return !isNumber(padding) && !isArray(padding);\n}\n\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding: number[] | number = 0): Padding {\n  let paddingArray = isArray(padding) ? padding : [padding];\n\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = [...paddingArray, ...paddingArray];\n      break;\n    case 3:\n      paddingArray = [...paddingArray, paddingArray[1]];\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n\n  return paddingArray as [number, number, number, number];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}