{"ast":null,"code":"/**\n * 创建DOM 节点\n * @param  {String} str Dom 字符串\n * @return {HTMLElement}  DOM 节点\n */\nvar TABLE;\nvar TABLE_TR;\nvar FRAGMENT_REG;\nvar CONTAINERS;\n\nfunction initConstants() {\n  TABLE = document.createElement('table');\n  TABLE_TR = document.createElement('tr');\n  FRAGMENT_REG = /^\\s*<(\\w+|!)[^>]*>/;\n  CONTAINERS = {\n    tr: document.createElement('tbody'),\n    tbody: TABLE,\n    thead: TABLE,\n    tfoot: TABLE,\n    td: TABLE_TR,\n    th: TABLE_TR,\n    '*': document.createElement('div')\n  };\n}\n\nexport default function createDom(str) {\n  if (!TABLE) {\n    initConstants();\n  }\n\n  var name = FRAGMENT_REG.test(str) && RegExp.$1;\n\n  if (!name || !(name in CONTAINERS)) {\n    name = '*';\n  }\n\n  var container = CONTAINERS[name];\n  str = str.replace(/(^\\s*)|(\\s*$)/g, '');\n  container.innerHTML = '' + str;\n  var dom = container.childNodes[0];\n  container.removeChild(dom);\n  return dom;\n}","map":{"version":3,"sources":["../src/create-dom.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,IAAI,KAAJ;AACA,IAAI,QAAJ;AACA,IAAI,YAAJ;AACA,IAAI,UAAJ;;AAKA,SAAS,aAAT,GAAsB;AACpB,EAAA,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAR;AACA,EAAA,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAX;AACA,EAAA,YAAY,GAAG,oBAAf;AACA,EAAA,UAAU,GAAG;AACX,IAAA,EAAE,EAAE,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CADO;AAEX,IAAA,KAAK,EAAE,KAFI;AAGX,IAAA,KAAK,EAAE,KAHI;AAIX,IAAA,KAAK,EAAE,KAJI;AAKX,IAAA,EAAE,EAAE,QALO;AAMX,IAAA,EAAE,EAAE,QANO;AAOX,SAAK,QAAQ,CAAC,aAAT,CAAuB,KAAvB;AAPM,GAAb;AASD;;AAED,eAAc,SAAU,SAAV,CAAoB,GAApB,EAA8B;AAC1C,MAAI,CAAC,KAAL,EAAY;AACV,IAAA,aAAa;AACd;;AACD,MAAI,IAAI,GAAG,YAAY,CAAC,IAAb,CAAkB,GAAlB,KAA0B,MAAM,CAAC,EAA5C;;AACA,MAAI,CAAC,IAAD,IAAS,EAAE,IAAI,IAAI,UAAV,CAAb,EAAoC;AAClC,IAAA,IAAI,GAAG,GAAP;AACD;;AACD,MAAM,SAAS,GAAG,UAAU,CAAC,IAAD,CAA5B;AACA,EAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,gBAAZ,EAA8B,EAA9B,CAAN;AACA,EAAA,SAAS,CAAC,SAAV,GAAsB,KAAK,GAA3B;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,UAAV,CAAqB,CAArB,CAAZ;AACA,EAAA,SAAS,CAAC,WAAV,CAAsB,GAAtB;AACA,SAAO,GAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * 创建DOM 节点\n * @param  {String} str Dom 字符串\n * @return {HTMLElement}  DOM 节点\n */\nvar TABLE;\nvar TABLE_TR;\nvar FRAGMENT_REG;\nvar CONTAINERS;\nfunction initConstants() {\n    TABLE = document.createElement('table');\n    TABLE_TR = document.createElement('tr');\n    FRAGMENT_REG = /^\\s*<(\\w+|!)[^>]*>/;\n    CONTAINERS = {\n        tr: document.createElement('tbody'),\n        tbody: TABLE,\n        thead: TABLE,\n        tfoot: TABLE,\n        td: TABLE_TR,\n        th: TABLE_TR,\n        '*': document.createElement('div'),\n    };\n}\nexport default function createDom(str) {\n    if (!TABLE) {\n        initConstants();\n    }\n    var name = FRAGMENT_REG.test(str) && RegExp.$1;\n    if (!name || !(name in CONTAINERS)) {\n        name = '*';\n    }\n    var container = CONTAINERS[name];\n    str = str.replace(/(^\\s*)|(\\s*$)/g, '');\n    container.innerHTML = '' + str;\n    var dom = container.childNodes[0];\n    container.removeChild(dom);\n    return dom;\n}\n//# sourceMappingURL=create-dom.js.map"]},"metadata":{},"sourceType":"module"}