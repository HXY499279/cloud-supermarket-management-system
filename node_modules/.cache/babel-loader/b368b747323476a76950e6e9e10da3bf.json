{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '../base';\nimport { getSmoothViolinPath } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\n/**\n * 平滑边界的小提琴图\n */\n\nregisterShape('violin', 'smooth', {\n  draw: function (cfg, container) {\n    var attrs = getStyle(cfg, true, true);\n    var path = this.parsePath(getSmoothViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, attrs), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        stroke: null,\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/violin/smooth.ts"],"names":[],"mappings":";AAEA,SAAS,aAAT,QAA8B,SAA9B;AACA,SAAS,mBAAT,QAAoC,yBAApC;AACA,SAAS,QAAT,QAAyB,mBAAzB;AAEA;;AAEG;;AACH,aAAa,CAAC,QAAD,EAAW,QAAX,EAAqB;AAChC,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAtB;AACA,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,mBAAmB,CAAC,GAAG,CAAC,MAAL,CAAlC,CAAb;AACA,WAAO,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AAChC,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,QAAA,IAAI,EAAA;AADI,OADL;AAD2B,KAA3B,CAAP;AAMD,GAV+B;AAWhC,EAAA,SAAS,EAAT,UAAU,SAAV,EAAmC;AACzB,QAAA,KAAK,GAAK,SAAS,CAAd,KAAL;AACR,WAAO;AACL,MAAA,MAAM,EAAE,QADH;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,MAAM,EAAE,IADH;AAEL,QAAA,CAAC,EAAE,CAFE;AAGL,QAAA,IAAI,EAAE;AAHD;AAFF,KAAP;AAQD;AArB+B,CAArB,CAAb","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\nimport { registerShape } from '../base';\nimport { getSmoothViolinPath } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\n\n/**\n * 平滑边界的小提琴图\n */\nregisterShape('violin', 'smooth', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getStyle(cfg, true, true);\n    const path = this.parsePath(getSmoothViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: {\n        ...attrs,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        stroke: null,\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}