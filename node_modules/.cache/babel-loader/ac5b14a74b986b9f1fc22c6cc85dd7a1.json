{"ast":null,"code":"import { each, isArray, isString } from '@antv/util';\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\n\nfunction parsePath(p) {\n  var path = p || [];\n\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, function (item, index) {\n      // @ts-ignore\n      item = item.match(regexDot);\n\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0); // @ts-ignore\n\n        item.splice(1, 0, item[0].substr(1)); // @ts-ignore\n\n        item[0] = tag;\n      } // @ts-ignore\n\n\n      each(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          // @ts-ignore\n          item[i] = +sub;\n        }\n      }); // @ts-ignore\n\n      path[index] = item;\n    });\n    return path;\n  }\n}\n\nexport default parsePath;","map":{"version":3,"sources":["../src/parse-path.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,QAAwC,YAAxC;AAEA,IAAM,SAAS,GAAG,gCAAlB;AACA,IAAM,QAAQ,GAAG,YAAjB;;AAEA,SAAS,SAAT,CAAmB,CAAnB,EAA4B;AAC1B,MAAI,IAAI,GAAG,CAAC,IAAI,EAAhB;;AACA,MAAI,OAAO,CAAC,IAAD,CAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;AAClB,IAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAP;AACA,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAO,KAAP,EAAY;AACrB;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAP;;AACA,UAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,GAAG,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAZ,CADsB,CAEtB;;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAlB,EAHsB,CAItB;;AACA,QAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV;AACD,OAToB,CAUrB;;;AACA,MAAA,IAAI,CAAC,IAAD,EAAO,UAAU,GAAV,EAAe,CAAf,EAAgB;AACzB,YAAI,CAAC,KAAK,CAAC,GAAD,CAAV,EAAiB;AACf;AACA,UAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAC,GAAX;AACD;AACF,OALG,CAAJ,CAXqB,CAiBrB;;AACA,MAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,IAAd;AACD,KAnBG,CAAJ;AAoBA,WAAO,IAAP;AACD;AACF;;AAED,eAAe,SAAf","sourceRoot":"","sourcesContent":["import { each, isArray, isString } from '@antv/util';\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\nfunction parsePath(p) {\n    var path = p || [];\n    if (isArray(path)) {\n        return path;\n    }\n    if (isString(path)) {\n        path = path.match(regexTags);\n        each(path, function (item, index) {\n            // @ts-ignore\n            item = item.match(regexDot);\n            if (item[0].length > 1) {\n                var tag = item[0].charAt(0);\n                // @ts-ignore\n                item.splice(1, 0, item[0].substr(1));\n                // @ts-ignore\n                item[0] = tag;\n            }\n            // @ts-ignore\n            each(item, function (sub, i) {\n                if (!isNaN(sub)) {\n                    // @ts-ignore\n                    item[i] = +sub;\n                }\n            });\n            // @ts-ignore\n            path[index] = item;\n        });\n        return path;\n    }\n}\nexport default parsePath;\n//# sourceMappingURL=parse-path.js.map"]},"metadata":{},"sourceType":"module"}