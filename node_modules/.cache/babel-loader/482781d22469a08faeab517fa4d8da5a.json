{"ast":null,"code":"/**\n * @fileoverview defs\n * @author dengfuping_develop@163.com\n */\nimport { uniqueId } from '@antv/util';\nimport Gradient from './gradient';\nimport Shadow from './shadow';\nimport Arrow from './arrow';\nimport Clip from './clip';\nimport Pattern from './pattern';\nimport { createSVGElement } from '../util/dom';\n\nvar Defs =\n/** @class */\nfunction () {\n  function Defs(canvas) {\n    var el = createSVGElement('defs');\n    var id = uniqueId('defs_');\n    el.id = id;\n    canvas.appendChild(el);\n    this.children = [];\n    this.defaultArrow = {};\n    this.el = el;\n    this.canvas = canvas;\n  }\n\n  Defs.prototype.find = function (type, attr) {\n    var children = this.children;\n    var result = null;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].match(type, attr)) {\n        result = children[i].id;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  Defs.prototype.findById = function (id) {\n    var children = this.children;\n    var flag = null;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].id === id) {\n        flag = children[i];\n        break;\n      }\n    }\n\n    return flag;\n  };\n\n  Defs.prototype.add = function (item) {\n    this.children.push(item);\n    item.canvas = this.canvas;\n    item.parent = this;\n  };\n\n  Defs.prototype.getDefaultArrow = function (attrs, name) {\n    var stroke = attrs.stroke || attrs.strokeStyle;\n\n    if (this.defaultArrow[stroke]) {\n      return this.defaultArrow[stroke].id;\n    }\n\n    var arrow = new Arrow(attrs, name);\n    this.defaultArrow[stroke] = arrow;\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n\n  Defs.prototype.addGradient = function (cfg) {\n    var gradient = new Gradient(cfg);\n    this.el.appendChild(gradient.el);\n    this.add(gradient);\n    return gradient.id;\n  };\n\n  Defs.prototype.addArrow = function (attrs, name) {\n    var arrow = new Arrow(attrs, name);\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n\n  Defs.prototype.addShadow = function (cfg) {\n    var shadow = new Shadow(cfg);\n    this.el.appendChild(shadow.el);\n    this.add(shadow);\n    return shadow.id;\n  };\n\n  Defs.prototype.addPattern = function (cfg) {\n    var pattern = new Pattern(cfg);\n    this.el.appendChild(pattern.el);\n    this.add(pattern);\n    return pattern.id;\n  };\n\n  Defs.prototype.addClip = function (cfg) {\n    var clip = new Clip(cfg);\n    this.el.appendChild(clip.el);\n    this.add(clip);\n    return clip.id;\n  };\n\n  return Defs;\n}();\n\nexport default Defs;","map":{"version":3,"sources":["../../src/defs/index.ts"],"names":[],"mappings":"AAAA;;;AAGG;AAEH,SAAS,QAAT,QAAyB,YAAzB;AACA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAP,MAAkB,SAAlB;AACA,OAAO,IAAP,MAAiB,QAAjB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,SAAS,gBAAT,QAAiC,aAAjC;;AAEA,IAAA,IAAA;AAAA;AAAA,YAAA;AAOE,WAAA,IAAA,CAAY,MAAZ,EAAkB;AAChB,QAAM,EAAE,GAAG,gBAAgB,CAAC,MAAD,CAA3B;AACA,QAAM,EAAE,GAAG,QAAQ,CAAC,OAAD,CAAnB;AACA,IAAA,EAAE,CAAC,EAAH,GAAQ,EAAR;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,EAAnB;AACA,SAAK,QAAL,GAAgB,EAAhB;AACA,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACD;;AAED,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,IAAL,EAAW,IAAX,EAAe;AACb,QAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,QAAI,MAAM,GAAG,IAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAI,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,IAAxB,CAAJ,EAAmC;AACjC,QAAA,MAAM,GAAG,QAAQ,CAAC,CAAD,CAAR,CAAY,EAArB;AACA;AACD;AACF;;AACD,WAAO,MAAP;AACD,GAVD;;AAYA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,EAAT,EAAW;AACT,QAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,QAAI,IAAI,GAAG,IAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAI,QAAQ,CAAC,CAAD,CAAR,CAAY,EAAZ,KAAmB,EAAvB,EAA2B;AACzB,QAAA,IAAI,GAAG,QAAQ,CAAC,CAAD,CAAf;AACA;AACD;AACF;;AACD,WAAO,IAAP;AACD,GAVD;;AAYA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAQ;AACN,SAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACA,IAAA,IAAI,CAAC,MAAL,GAAc,KAAK,MAAnB;AACA,IAAA,IAAI,CAAC,MAAL,GAAc,IAAd;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,KAAhB,EAAuB,IAAvB,EAA2B;AACzB,QAAM,MAAM,GAAG,KAAK,CAAC,MAAN,IAAgB,KAAK,CAAC,WAArC;;AACA,QAAI,KAAK,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AAC7B,aAAO,KAAK,YAAL,CAAkB,MAAlB,EAA0B,EAAjC;AACD;;AACD,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,KAAV,EAAiB,IAAjB,CAAd;AACA,SAAK,YAAL,CAAkB,MAAlB,IAA4B,KAA5B;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,KAAK,CAAC,EAA1B;AACA,SAAK,GAAL,CAAS,KAAT;AACA,WAAO,KAAK,CAAC,EAAb;AACD,GAVD;;AAYA,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAAe;AACb,QAAM,QAAQ,GAAG,IAAI,QAAJ,CAAa,GAAb,CAAjB;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,QAAQ,CAAC,EAA7B;AACA,SAAK,GAAL,CAAS,QAAT;AACA,WAAO,QAAQ,CAAC,EAAhB;AACD,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAgB,IAAhB,EAAoB;AAClB,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,KAAV,EAAiB,IAAjB,CAAd;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,KAAK,CAAC,EAA1B;AACA,SAAK,GAAL,CAAS,KAAT;AACA,WAAO,KAAK,CAAC,EAAb;AACD,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,GAAV,EAAa;AACX,QAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,GAAX,CAAf;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,MAAM,CAAC,EAA3B;AACA,SAAK,GAAL,CAAS,MAAT;AACA,WAAO,MAAM,CAAC,EAAd;AACD,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAc;AACZ,QAAM,OAAO,GAAG,IAAI,OAAJ,CAAY,GAAZ,CAAhB;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,OAAO,CAAC,EAA5B;AACA,SAAK,GAAL,CAAS,OAAT;AACA,WAAO,OAAO,CAAC,EAAf;AACD,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAW;AACT,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,GAAT,CAAb;AACA,SAAK,EAAL,CAAQ,WAAR,CAAoB,IAAI,CAAC,EAAzB;AACA,SAAK,GAAL,CAAS,IAAT;AACA,WAAO,IAAI,CAAC,EAAZ;AACD,GALD;;AAMF,SAAA,IAAA;AAAC,CA9FD,EAAA;;AAgGA,eAAe,IAAf","sourceRoot":"","sourcesContent":["/**\n * @fileoverview defs\n * @author dengfuping_develop@163.com\n */\nimport { uniqueId } from '@antv/util';\nimport Gradient from './gradient';\nimport Shadow from './shadow';\nimport Arrow from './arrow';\nimport Clip from './clip';\nimport Pattern from './pattern';\nimport { createSVGElement } from '../util/dom';\nvar Defs = /** @class */ (function () {\n    function Defs(canvas) {\n        var el = createSVGElement('defs');\n        var id = uniqueId('defs_');\n        el.id = id;\n        canvas.appendChild(el);\n        this.children = [];\n        this.defaultArrow = {};\n        this.el = el;\n        this.canvas = canvas;\n    }\n    Defs.prototype.find = function (type, attr) {\n        var children = this.children;\n        var result = null;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].match(type, attr)) {\n                result = children[i].id;\n                break;\n            }\n        }\n        return result;\n    };\n    Defs.prototype.findById = function (id) {\n        var children = this.children;\n        var flag = null;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].id === id) {\n                flag = children[i];\n                break;\n            }\n        }\n        return flag;\n    };\n    Defs.prototype.add = function (item) {\n        this.children.push(item);\n        item.canvas = this.canvas;\n        item.parent = this;\n    };\n    Defs.prototype.getDefaultArrow = function (attrs, name) {\n        var stroke = attrs.stroke || attrs.strokeStyle;\n        if (this.defaultArrow[stroke]) {\n            return this.defaultArrow[stroke].id;\n        }\n        var arrow = new Arrow(attrs, name);\n        this.defaultArrow[stroke] = arrow;\n        this.el.appendChild(arrow.el);\n        this.add(arrow);\n        return arrow.id;\n    };\n    Defs.prototype.addGradient = function (cfg) {\n        var gradient = new Gradient(cfg);\n        this.el.appendChild(gradient.el);\n        this.add(gradient);\n        return gradient.id;\n    };\n    Defs.prototype.addArrow = function (attrs, name) {\n        var arrow = new Arrow(attrs, name);\n        this.el.appendChild(arrow.el);\n        this.add(arrow);\n        return arrow.id;\n    };\n    Defs.prototype.addShadow = function (cfg) {\n        var shadow = new Shadow(cfg);\n        this.el.appendChild(shadow.el);\n        this.add(shadow);\n        return shadow.id;\n    };\n    Defs.prototype.addPattern = function (cfg) {\n        var pattern = new Pattern(cfg);\n        this.el.appendChild(pattern.el);\n        this.add(pattern);\n        return pattern.id;\n    };\n    Defs.prototype.addClip = function (cfg) {\n        var clip = new Clip(cfg);\n        this.el.appendChild(clip.el);\n        this.add(clip);\n        return clip.id;\n    };\n    return Defs;\n}());\nexport default Defs;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}