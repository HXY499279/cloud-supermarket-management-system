{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style'; // 根据数据点生成 tick shape 的 6 个关键点\n\nfunction getTickPoints(pointInfo) {\n  var x = pointInfo.x,\n      y = pointInfo.y,\n      y0 = pointInfo.y0,\n      size = pointInfo.size;\n  var yMin;\n  var yMax;\n\n  if (isArray(y)) {\n    yMin = y[0], yMax = y[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  var xMax = x + size / 2;\n  var xMin = x - size / 2; // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n\n  return [{\n    x: x,\n    y: yMin\n  }, {\n    x: x,\n    y: yMax\n  }, {\n    x: xMin,\n    y: yMin\n  }, {\n    x: xMax,\n    y: yMin\n  }, {\n    x: xMin,\n    y: yMax\n  }, {\n    x: xMax,\n    y: yMax\n  }];\n} // 根据 tick 关键点绘制 path\n\n\nfunction getTickPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]];\n}\n/** I 形状柱状图，常用于 error bar chart */\n\n\nregisterShape('interval', 'tick', {\n  getPoints: function (shapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getTickPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/interval/tick.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0, size } = pointInfo;\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    [yMin, yMax] = y;\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  const xMax = (x as number) + size / 2;\n  const xMin = (x as number) - size / 2;\n\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [\n    { x: x as number, y: yMin },\n    { x: x as number, y: yMax },\n    { x: xMin, y: yMin },\n    { x: xMax, y: yMin },\n    { x: xMin, y: yMax },\n    { x: xMax, y: yMax },\n  ];\n}\n\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points: Point[]) {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n  ];\n}\n\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints(shapePoint: ShapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getTickPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x - r / 2, y - r],\n          ['L', x + r / 2, y - r],\n          ['M', x, y - r],\n          ['L', x, y + r],\n          ['M', x - r / 2, y + r],\n          ['L', x + r / 2, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}