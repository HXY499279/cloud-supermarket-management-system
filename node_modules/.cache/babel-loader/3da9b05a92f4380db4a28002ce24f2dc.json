{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { substitute, hasKey } from '@antv/util';\nimport { toPx, getTextPoint } from '../util/util';\nimport HtmlComponent from '../abstract/html-component';\nimport * as CssConst from './css-const';\nimport HtmlTheme from './html-theme';\n\nvar HtmlCrosshair =\n/** @class */\nfunction (_super) {\n  __extends(HtmlCrosshair, _super);\n\n  function HtmlCrosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HtmlCrosshair.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'crosshair',\n      type: 'html',\n      locationType: 'region',\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 0\n      },\n      capture: false,\n      text: null,\n      containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"></div>\",\n      crosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_LINE + \"\\\"></div>\",\n      textTpl: \"<span class=\\\"\" + CssConst.CROSSHAIR_TEXT + \"\\\">{content}</span>\",\n      domStyles: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      defaultStyles: HtmlTheme,\n      defaultCfg: {\n        text: {\n          position: 'start',\n          content: null,\n          align: 'center',\n          offset: 10\n        }\n      }\n    });\n  };\n\n  HtmlCrosshair.prototype.render = function () {\n    this.resetText();\n    this.resetPosition();\n  }; // 绘制 crosshair\n\n\n  HtmlCrosshair.prototype.initCrossHair = function () {\n    var container = this.getContainer();\n    var crosshairTpl = this.get('crosshairTpl');\n    var crosshairEl = createDom(crosshairTpl);\n    container.appendChild(crosshairEl);\n    this.applyStyle(CssConst.CROSSHAIR_LINE, crosshairEl);\n    this.set('crosshairEl', crosshairEl);\n  }; // 获取文本的位置\n\n\n  HtmlCrosshair.prototype.getTextPoint = function () {\n    var _a = this.getLocation(),\n        start = _a.start,\n        end = _a.end;\n\n    var _b = this.get('text'),\n        position = _b.position,\n        offset = _b.offset;\n\n    return getTextPoint(start, end, position, offset);\n  }; // 设置 text\n\n\n  HtmlCrosshair.prototype.resetText = function () {\n    var text = this.get('text');\n    var textEl = this.get('textEl');\n\n    if (text) {\n      var content = text.content;\n\n      if (!textEl) {\n        var container = this.getContainer();\n        var textTpl = substitute(this.get('textTpl'), text);\n        textEl = createDom(textTpl);\n        container.appendChild(textEl);\n        this.applyStyle(CssConst.CROSSHAIR_TEXT, textEl);\n        this.set('textEl', textEl);\n      }\n\n      textEl.innerHTML = content;\n    } else if (textEl) {\n      textEl.remove();\n    }\n  }; // 是否垂直\n\n\n  HtmlCrosshair.prototype.isVertical = function (start, end) {\n    return start.x === end.x;\n  }; // 重新调整位置\n\n\n  HtmlCrosshair.prototype.resetPosition = function () {\n    var crosshairEl = this.get('crosshairEl');\n\n    if (!crosshairEl) {\n      this.initCrossHair();\n      crosshairEl = this.get('crosshairEl');\n    }\n\n    var start = this.get('start');\n    var end = this.get('end');\n    var minX = Math.min(start.x, end.x);\n    var minY = Math.min(start.y, end.y);\n\n    if (this.isVertical(start, end)) {\n      modifyCSS(crosshairEl, {\n        width: '1px',\n        height: toPx(Math.abs(end.y - start.y))\n      });\n    } else {\n      modifyCSS(crosshairEl, {\n        height: '1px',\n        width: toPx(Math.abs(end.x - start.x))\n      });\n    }\n\n    modifyCSS(crosshairEl, {\n      top: toPx(minY),\n      left: toPx(minX)\n    });\n    this.alignText();\n  };\n\n  HtmlCrosshair.prototype.alignText = function () {\n    // 重新设置 text 位置\n    var textEl = this.get('textEl');\n\n    if (textEl) {\n      var align = this.get('text').align;\n      var clientWidth = textEl.clientWidth;\n      var point = this.getTextPoint();\n\n      switch (align) {\n        case 'center':\n          point.x = point.x - clientWidth / 2;\n          break;\n\n        case 'right':\n          point.x = point.x - clientWidth;\n\n        case 'left':\n          break;\n      }\n\n      modifyCSS(textEl, {\n        top: toPx(point.y),\n        left: toPx(point.x)\n      });\n    }\n  };\n\n  HtmlCrosshair.prototype.updateInner = function (cfg) {\n    if (hasKey(cfg, 'text')) {\n      this.resetText();\n    }\n\n    _super.prototype.updateInner.call(this, cfg);\n  };\n\n  return HtmlCrosshair;\n}(HtmlComponent);\n\nexport default HtmlCrosshair;","map":{"version":3,"sources":["../../src/crosshair/html.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { substitute, hasKey } from '@antv/util';\nimport { toPx, getTextPoint } from '../util/util';\nimport HtmlComponent from '../abstract/html-component';\nimport * as CssConst from './css-const';\nimport HtmlTheme from './html-theme';\nvar HtmlCrosshair = /** @class */ (function (_super) {\n    __extends(HtmlCrosshair, _super);\n    function HtmlCrosshair() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HtmlCrosshair.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'crosshair', type: 'html', locationType: 'region', start: { x: 0, y: 0 }, end: { x: 0, y: 0 }, capture: false, text: null, containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"></div>\", crosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_LINE + \"\\\"></div>\", textTpl: \"<span class=\\\"\" + CssConst.CROSSHAIR_TEXT + \"\\\">{content}</span>\", domStyles: null, containerClassName: CssConst.CONTAINER_CLASS, defaultStyles: HtmlTheme, defaultCfg: {\n                text: {\n                    position: 'start',\n                    content: null,\n                    align: 'center',\n                    offset: 10\n                }\n            } });\n    };\n    HtmlCrosshair.prototype.render = function () {\n        this.resetText();\n        this.resetPosition();\n    };\n    // 绘制 crosshair\n    HtmlCrosshair.prototype.initCrossHair = function () {\n        var container = this.getContainer();\n        var crosshairTpl = this.get('crosshairTpl');\n        var crosshairEl = createDom(crosshairTpl);\n        container.appendChild(crosshairEl);\n        this.applyStyle(CssConst.CROSSHAIR_LINE, crosshairEl);\n        this.set('crosshairEl', crosshairEl);\n    };\n    // 获取文本的位置\n    HtmlCrosshair.prototype.getTextPoint = function () {\n        var _a = this.getLocation(), start = _a.start, end = _a.end;\n        var _b = this.get('text'), position = _b.position, offset = _b.offset;\n        return getTextPoint(start, end, position, offset);\n    };\n    // 设置 text\n    HtmlCrosshair.prototype.resetText = function () {\n        var text = this.get('text');\n        var textEl = this.get('textEl');\n        if (text) {\n            var content = text.content;\n            if (!textEl) {\n                var container = this.getContainer();\n                var textTpl = substitute(this.get('textTpl'), text);\n                textEl = createDom(textTpl);\n                container.appendChild(textEl);\n                this.applyStyle(CssConst.CROSSHAIR_TEXT, textEl);\n                this.set('textEl', textEl);\n            }\n            textEl.innerHTML = content;\n        }\n        else if (textEl) {\n            textEl.remove();\n        }\n    };\n    // 是否垂直\n    HtmlCrosshair.prototype.isVertical = function (start, end) {\n        return start.x === end.x;\n    };\n    // 重新调整位置\n    HtmlCrosshair.prototype.resetPosition = function () {\n        var crosshairEl = this.get('crosshairEl');\n        if (!crosshairEl) {\n            this.initCrossHair();\n            crosshairEl = this.get('crosshairEl');\n        }\n        var start = this.get('start');\n        var end = this.get('end');\n        var minX = Math.min(start.x, end.x);\n        var minY = Math.min(start.y, end.y);\n        if (this.isVertical(start, end)) {\n            modifyCSS(crosshairEl, {\n                width: '1px',\n                height: toPx(Math.abs(end.y - start.y))\n            });\n        }\n        else {\n            modifyCSS(crosshairEl, {\n                height: '1px',\n                width: toPx(Math.abs(end.x - start.x))\n            });\n        }\n        modifyCSS(crosshairEl, {\n            top: toPx(minY),\n            left: toPx(minX)\n        });\n        this.alignText();\n    };\n    HtmlCrosshair.prototype.alignText = function () {\n        // 重新设置 text 位置\n        var textEl = this.get('textEl');\n        if (textEl) {\n            var align = this.get('text').align;\n            var clientWidth = textEl.clientWidth;\n            var point = this.getTextPoint();\n            switch (align) {\n                case 'center':\n                    point.x = point.x - clientWidth / 2;\n                    break;\n                case 'right':\n                    point.x = point.x - clientWidth;\n                case 'left':\n                    break;\n            }\n            modifyCSS(textEl, {\n                top: toPx(point.y),\n                left: toPx(point.x)\n            });\n        }\n    };\n    HtmlCrosshair.prototype.updateInner = function (cfg) {\n        if (hasKey(cfg, 'text')) {\n            this.resetText();\n        }\n        _super.prototype.updateInner.call(this, cfg);\n    };\n    return HtmlCrosshair;\n}(HtmlComponent));\nexport default HtmlCrosshair;\n//# sourceMappingURL=html.js.map"]},"metadata":{},"sourceType":"module"}