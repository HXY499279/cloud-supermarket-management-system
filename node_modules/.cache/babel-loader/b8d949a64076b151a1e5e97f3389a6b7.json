{"ast":null,"code":"import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme'; // 统一设置文本的角度\n\nfunction setLabelsAngle(labels, angle) {\n  each(labels, function (label) {\n    var x = label.attr('x');\n    var y = label.attr('y');\n    var matrix = getMatrixByAngle({\n      x: x,\n      y: y\n    }, angle);\n    label.attr('matrix', matrix);\n  });\n} // 旋转文本\n\n\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n  var labels = labelsGroup.getChildren();\n\n  if (!labels.length) {\n    return false;\n  }\n\n  if (!isVertical && labels.length < 2) {\n    // 水平时至少有两个时才旋转\n    return false;\n  }\n\n  var maxWidth = getMaxLabelWidth(labels);\n  var isOverlap = false;\n\n  if (isVertical) {\n    // limitLength 为 0 或者 null 时不生效\n    isOverlap = !!limitLength && maxWidth > limitLength;\n  } else {\n    // 同 limitLength 无关\n    var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n    isOverlap = maxWidth > tickWidth;\n  }\n\n  if (isOverlap) {\n    var angle = getAngle(limitLength, maxWidth);\n    setLabelsAngle(labels, angle);\n  }\n\n  return isOverlap;\n}\n\nexport function getDefault() {\n  return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\n\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function () {\n    if (isNumber(customRotate)) {\n      return customRotate;\n    }\n\n    return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n  });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\n\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n    if (!length) {\n      // 如果没有设置 limitLength，则使用固定的角度旋转\n      return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    }\n\n    if (isVertical) {\n      // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n      return -Math.acos(length / maxWidth);\n    } else {\n      var angle = 0;\n\n      if (length > maxWidth) {\n        // 需要判定，asin 的参数 -1， 1\n        angle = Math.PI / 4;\n      } else {\n        angle = Math.asin(length / maxWidth);\n\n        if (angle > Math.PI / 4) {\n          // 大于 Math.PI / 4 时没意义\n          angle = Math.PI / 4;\n        }\n      }\n\n      return angle;\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/axis/overlap/auto-rotate.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme';\n// 统一设置文本的角度\nfunction setLabelsAngle(labels, angle) {\n    each(labels, function (label) {\n        var x = label.attr('x');\n        var y = label.attr('y');\n        var matrix = getMatrixByAngle({ x: x, y: y }, angle);\n        label.attr('matrix', matrix);\n    });\n}\n// 旋转文本\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n    var labels = labelsGroup.getChildren();\n    if (!labels.length) {\n        return false;\n    }\n    if (!isVertical && labels.length < 2) {\n        // 水平时至少有两个时才旋转\n        return false;\n    }\n    var maxWidth = getMaxLabelWidth(labels);\n    var isOverlap = false;\n    if (isVertical) {\n        // limitLength 为 0 或者 null 时不生效\n        isOverlap = !!limitLength && maxWidth > limitLength;\n    }\n    else {\n        // 同 limitLength 无关\n        var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n        isOverlap = maxWidth > tickWidth;\n    }\n    if (isOverlap) {\n        var angle = getAngle(limitLength, maxWidth);\n        setLabelsAngle(labels, angle);\n    }\n    return isOverlap;\n}\nexport function getDefault() {\n    return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function () {\n        if (isNumber(customRotate)) {\n            return customRotate;\n        }\n        return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n        if (!length) {\n            // 如果没有设置 limitLength，则使用固定的角度旋转\n            return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n        }\n        if (isVertical) {\n            // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n            return -Math.acos(length / maxWidth);\n        }\n        else {\n            var angle = 0;\n            if (length > maxWidth) {\n                // 需要判定，asin 的参数 -1， 1\n                angle = Math.PI / 4;\n            }\n            else {\n                angle = Math.asin(length / maxWidth);\n                if (angle > Math.PI / 4) {\n                    // 大于 Math.PI / 4 时没意义\n                    angle = Math.PI / 4;\n                }\n            }\n            return angle;\n        }\n    });\n}\n//# sourceMappingURL=auto-rotate.js.map"]},"metadata":{},"sourceType":"module"}