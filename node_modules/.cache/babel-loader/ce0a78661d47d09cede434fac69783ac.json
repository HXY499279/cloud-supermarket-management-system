{"ast":null,"code":"import { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport line from './line';\nimport { snapLength, nearestPoint } from './bezier';\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\n\n  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\n}\n\nfunction derivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\n}\n\nfunction extrema(p0, p1, p2, p3) {\n  var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n  var b = 6 * p0 - 12 * p1 + 6 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var extremas = [];\n  var t1;\n  var t2;\n  var discSqrt;\n\n  if (isNumberEqual(a, 0)) {\n    if (!isNumberEqual(b, 0)) {\n      t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isNumberEqual(disc, 0)) {\n      extremas.push(-b / (2 * a));\n    } else if (disc > 0) {\n      discSqrt = Math.sqrt(disc);\n      t1 = (-b + discSqrt) / (2 * a);\n      t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extremas.push(t2);\n      }\n    }\n  }\n\n  return extremas;\n} // 分割贝塞尔曲线\n\n\nfunction divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n  // 划分点\n  var xt = cubicAt(x1, x2, x3, x4, t);\n  var yt = cubicAt(y1, y2, y3, y4, t); // 计算两点之间的差值点\n\n  var c1 = line.pointAt(x1, y1, x2, y2, t);\n  var c2 = line.pointAt(x2, y2, x3, y3, t);\n  var c3 = line.pointAt(x3, y3, x4, y4, t);\n  var c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\n  var c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\n  return [[x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt], [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4]];\n} // 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\n\n\nfunction cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {\n  if (iterationCount === 0) {\n    return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\n  }\n\n  var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\n  var left = cubics[0];\n  var right = cubics[1];\n  left.push(iterationCount - 1);\n  right.push(iterationCount - 1);\n  return cubicLength.apply(null, left) + cubicLength.apply(null, right);\n}\n\nexport default {\n  extrema: extrema,\n  box: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    var xArr = [x1, x4];\n    var yArr = [y1, y4];\n    var xExtrema = extrema(x1, x2, x3, x4);\n    var yExtrema = extrema(y1, y2, y3, y4);\n\n    for (var i = 0; i < xExtrema.length; i++) {\n      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\n    }\n\n    for (var i = 0; i < yExtrema.length; i++) {\n      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\n    }\n\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    // 迭代三次，划分成 8 段求长度\n    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\n  },\n  nearestPoint: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    return nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\n  },\n  pointDistance: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: cubicAt,\n  pointAt: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return {\n      x: cubicAt(x1, x2, x3, x4, t),\n      y: cubicAt(y1, y2, y3, y4, t)\n    };\n  },\n  divide: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\n  },\n  tangentAngle: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    var dx = derivativeAt(x1, x2, x3, x4, t);\n    var dy = derivativeAt(y1, y2, y3, y4, t);\n    return piMod(Math.atan2(dy, dx));\n  }\n};","map":{"version":3,"sources":["../src/cubic.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport line from './line';\nimport { snapLength, nearestPoint } from './bezier';\nfunction cubicAt(p0, p1, p2, p3, t) {\n    var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\n    return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\n}\nfunction derivativeAt(p0, p1, p2, p3, t) {\n    var onet = 1 - t;\n    return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\n}\nfunction extrema(p0, p1, p2, p3) {\n    var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n    var b = 6 * p0 - 12 * p1 + 6 * p2;\n    var c = 3 * p1 - 3 * p0;\n    var extremas = [];\n    var t1;\n    var t2;\n    var discSqrt;\n    if (isNumberEqual(a, 0)) {\n        if (!isNumberEqual(b, 0)) {\n            t1 = -c / b;\n            if (t1 >= 0 && t1 <= 1) {\n                extremas.push(t1);\n            }\n        }\n    }\n    else {\n        var disc = b * b - 4 * a * c;\n        if (isNumberEqual(disc, 0)) {\n            extremas.push(-b / (2 * a));\n        }\n        else if (disc > 0) {\n            discSqrt = Math.sqrt(disc);\n            t1 = (-b + discSqrt) / (2 * a);\n            t2 = (-b - discSqrt) / (2 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                extremas.push(t1);\n            }\n            if (t2 >= 0 && t2 <= 1) {\n                extremas.push(t2);\n            }\n        }\n    }\n    return extremas;\n}\n// 分割贝塞尔曲线\nfunction divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    // 划分点\n    var xt = cubicAt(x1, x2, x3, x4, t);\n    var yt = cubicAt(y1, y2, y3, y4, t);\n    // 计算两点之间的差值点\n    var c1 = line.pointAt(x1, y1, x2, y2, t);\n    var c2 = line.pointAt(x2, y2, x3, y3, t);\n    var c3 = line.pointAt(x3, y3, x4, y4, t);\n    var c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\n    var c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\n    return [\n        [x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt],\n        [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4],\n    ];\n}\n// 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\nfunction cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {\n    if (iterationCount === 0) {\n        return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\n    }\n    var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\n    var left = cubics[0];\n    var right = cubics[1];\n    left.push(iterationCount - 1);\n    right.push(iterationCount - 1);\n    return cubicLength.apply(null, left) + cubicLength.apply(null, right);\n}\nexport default {\n    extrema: extrema,\n    box: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        var xArr = [x1, x4];\n        var yArr = [y1, y4];\n        var xExtrema = extrema(x1, x2, x3, x4);\n        var yExtrema = extrema(y1, y2, y3, y4);\n        for (var i = 0; i < xExtrema.length; i++) {\n            xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\n        }\n        for (var i = 0; i < yExtrema.length; i++) {\n            yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\n        }\n        return getBBoxByArray(xArr, yArr);\n    },\n    length: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        // 迭代三次，划分成 8 段求长度\n        return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\n    },\n    nearestPoint: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n        return nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\n    },\n    pointDistance: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n        var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\n        return distance(point.x, point.y, x0, y0);\n    },\n    interpolationAt: cubicAt,\n    pointAt: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n        return {\n            x: cubicAt(x1, x2, x3, x4, t),\n            y: cubicAt(y1, y2, y3, y4, t),\n        };\n    },\n    divide: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n        return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\n    },\n    tangentAngle: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n        var dx = derivativeAt(x1, x2, x3, x4, t);\n        var dy = derivativeAt(y1, y2, y3, y4, t);\n        return piMod(Math.atan2(dy, dx));\n    },\n};\n//# sourceMappingURL=cubic.js.map"]},"metadata":{},"sourceType":"module"}