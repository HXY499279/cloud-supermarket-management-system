{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { Controller } from './base';\nimport { Scrollbar as ScrollbarComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\nvar DEFAULT_PADDING = 0;\nvar DEFAULT_SIZE = 8;\nvar DEFAULT_CATEGORY_SIZE = 32;\nvar MIN_THUMB_LENGTH = 20;\n\nvar Scrollbar =\n/** @class */\nfunction (_super) {\n  __extends(Scrollbar, _super);\n\n  function Scrollbar(view) {\n    var _this = _super.call(this, view) || this;\n\n    _this.onChangeFn = noop;\n\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n\n    _this.onValueChange = function (_a) {\n      var ratio = _a.ratio;\n\n      var animate = _this.getValidScrollbarCfg().animate;\n\n      _this.ratio = clamp(ratio, 0, 1);\n\n      var originalAnimate = _this.view.getOptions().animate;\n\n      if (!animate) {\n        _this.view.animate(false);\n      }\n\n      _this.changeViewData(_this.getScrollRange(), true);\n\n      _this.view.animate(originalAnimate);\n    };\n\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.trackLen = 0;\n    _this.thumbLen = 0;\n    _this.ratio = 0;\n\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n\n    return _this;\n  }\n\n  Object.defineProperty(Scrollbar.prototype, \"name\", {\n    get: function () {\n      return 'scrollbar';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Scrollbar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n\n  Scrollbar.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n\n\n  Scrollbar.prototype.render = function () {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n\n\n  Scrollbar.prototype.layout = function () {\n    var _this = this;\n\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(function () {\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.getScrollRange(), true);\n        }\n      });\n    }\n\n    if (this.scrollbar) {\n      var width = this.view.coordinateBBox.width;\n      var padding = this.scrollbar.component.get('padding');\n      var bboxObject = this.scrollbar.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var cfg = this.getScrollbarComponentCfg();\n      var x = void 0;\n      var y = void 0;\n\n      if (cfg.isHorizontal) {\n        var _a = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM),\n            x1 = _a[0],\n            y1 = _a[1];\n\n        var _b = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM),\n            x2 = _b[0],\n            y2 = _b[1];\n\n        x = x2;\n        y = y1;\n      } else {\n        var _c = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT),\n            x1 = _c[0],\n            y1 = _c[1];\n\n        var _d = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT),\n            x2 = _d[0],\n            y2 = _d[1];\n\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0]; // 默认放在 bottom\n\n      if (this.trackLen) {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n        }));\n      } else {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y\n        }));\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  };\n  /**\n   * 更新\n   */\n\n\n  Scrollbar.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n\n  Scrollbar.prototype.getComponents = function () {\n    return this.scrollbar ? [this.scrollbar] : [];\n  };\n\n  Scrollbar.prototype.clear = function () {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  };\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n\n\n  Scrollbar.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  };\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n\n\n  Scrollbar.prototype.getScrollbarTheme = function (style) {\n    var theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n\n    var _a = style || {},\n        thumbHighlightColor = _a.thumbHighlightColor,\n        restStyles = __rest(_a, [\"thumbHighlightColor\"]);\n\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), {\n        thumbColor: thumbHighlightColor\n      })\n    };\n  };\n\n  Scrollbar.prototype.measureScrollbar = function () {\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getYScales().slice();\n    this.data = this.view.getOptions().data;\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n\n    var _a = this.getScrollbarComponentCfg(),\n        trackLen = _a.trackLen,\n        thumbLen = _a.thumbLen;\n\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || []\n    };\n    this.yScalesCfg = yScales;\n  };\n\n  Scrollbar.prototype.getScrollRange = function () {\n    var startIdx = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    var endIdx = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  };\n\n  Scrollbar.prototype.changeViewData = function (_a, render) {\n    var _this = this;\n\n    var startIdx = _a[0],\n        endIdx = _a[1];\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var values = valuesOfKey(this.data, this.xScaleCfg.field);\n    var xValues = isHorizontal ? values : values.reverse();\n    this.yScalesCfg.forEach(function (cfg) {\n      _this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type,\n        min: cfg.min,\n        max: cfg.max\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, function (val) {\n      var idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  };\n\n  Scrollbar.prototype.createScrollbar = function () {\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var component = new ScrollbarComponent(__assign(__assign({\n      container: this.container\n    }, this.getScrollbarComponentCfg()), {\n      x: 0,\n      y: 0\n    }));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR\n    };\n  };\n\n  Scrollbar.prototype.updateScrollbar = function () {\n    var config = this.getScrollbarComponentCfg();\n    var realConfig = this.trackLen ? __assign(__assign({}, config), {\n      trackLen: this.trackLen,\n      thumbLen: this.thumbLen,\n      thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n    }) : __assign({}, config);\n    this.scrollbar.component.update(realConfig);\n    return this.scrollbar;\n  };\n\n  Scrollbar.prototype.getStep = function () {\n    if (this.step) {\n      return this.step;\n    }\n\n    var coordinateBBox = this.view.coordinateBBox;\n\n    var _a = this.getValidScrollbarCfg(),\n        type = _a.type,\n        categorySize = _a.categorySize;\n\n    var isHorizontal = type !== 'vertical';\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  };\n\n  Scrollbar.prototype.getCnt = function () {\n    if (this.cnt) {\n      return this.cnt;\n    }\n\n    var xScale = this.view.getXScale();\n    var data = this.view.getOptions().data;\n    var values = valuesOfKey(data, xScale.field);\n    return size(values);\n  };\n\n  Scrollbar.prototype.getScrollbarComponentCfg = function () {\n    var _a = this.view,\n        coordinateBBox = _a.coordinateBBox,\n        viewBBox = _a.viewBBox;\n\n    var _b = this.getValidScrollbarCfg(),\n        type = _b.type,\n        padding = _b.padding,\n        width = _b.width,\n        height = _b.height,\n        style = _b.style;\n\n    var isHorizontal = type !== 'vertical';\n    var paddingTop = padding[0],\n        paddingRight = padding[1],\n        paddingBottom = padding[2],\n        paddingLeft = padding[3];\n    var position = isHorizontal ? {\n      x: coordinateBBox.minX + paddingLeft,\n      y: viewBBox.maxY - height - paddingBottom\n    } : {\n      x: viewBBox.maxX - width - paddingRight,\n      y: coordinateBBox.minY + paddingTop\n    };\n    var step = this.getStep();\n    var cnt = this.getCnt();\n    var trackLen = isHorizontal ? coordinateBBox.width - paddingLeft - paddingRight : coordinateBBox.height - paddingTop - paddingBottom;\n    var thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n    return __assign(__assign({}, this.getThemeOptions()), {\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal: isHorizontal,\n      trackLen: trackLen,\n      thumbLen: thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style)\n    });\n  };\n  /**\n   * 填充一些默认的配置项目\n   */\n\n\n  Scrollbar.prototype.getValidScrollbarCfg = function () {\n    var cfg = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {}\n    };\n\n    if (isObject(this.option)) {\n      cfg = __assign(__assign({}, cfg), this.option);\n    }\n\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding = cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  };\n\n  return Scrollbar;\n}(Controller);\n\nexport default Scrollbar;","map":{"version":3,"sources":["../../../src/chart/controller/scrollbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() {}\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.view.getOptions().data;\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n    const xValues = isHorizontal ? values : values.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n          ...config,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.view.getOptions().data;\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n          x: coordinateBBox.minX + paddingLeft,\n          y: viewBBox.maxY - height - paddingBottom,\n        }\n      : {\n          x: viewBBox.maxX - width - paddingRight,\n          y: coordinateBBox.minY + paddingTop,\n        };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}