{"ast":null,"code":"import { Util } from '@antv/g-math';\nimport { mergeArrowBBox } from './util';\nexport default function (shape) {\n  var attrs = shape.attr();\n  var points = attrs.points;\n  var xArr = [];\n  var yArr = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    xArr.push(point[0]);\n    yArr.push(point[1]);\n  }\n\n  var _a = Util.getBBoxByArray(xArr, yArr),\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n\n  var bbox = {\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height\n  };\n  bbox = mergeArrowBBox(shape, bbox);\n  return {\n    x: bbox.minX,\n    y: bbox.minY,\n    width: bbox.maxX - bbox.minX,\n    height: bbox.maxY - bbox.minY\n  };\n}","map":{"version":3,"sources":["../../src/bbox/polyline.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,cAArB;AAGA,SAAS,cAAT,QAA+B,QAA/B;AAEA,eAAc,UAAW,KAAX,EAAwB;AACpC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAN,EAAd;AACQ,MAAA,MAAM,GAAK,KAAK,CAAV,MAAN;AACR,MAAM,IAAI,GAAG,EAAb;AACA,MAAM,IAAI,GAAG,EAAb;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,QAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,KAAK,CAAC,CAAD,CAAf;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,KAAK,CAAC,CAAD,CAAf;AACD;;AACK,MAAA,EAAA,GAA0B,IAAI,CAAC,cAAL,CAAoB,IAApB,EAA0B,IAA1B,CAA1B;AAAA,MAAE,CAAC,GAAA,EAAA,CAAA,CAAH;AAAA,MAAK,CAAC,GAAA,EAAA,CAAA,CAAN;AAAA,MAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AAAA,MAAe,MAAM,GAAA,EAAA,CAAA,MAArB;;AACN,MAAI,IAAI,GAAG;AACT,IAAA,IAAI,EAAE,CADG;AAET,IAAA,IAAI,EAAE,CAFG;AAGT,IAAA,IAAI,EAAE,CAAC,GAAG,KAHD;AAIT,IAAA,IAAI,EAAE,CAAC,GAAG;AAJD,GAAX;AAMA,EAAA,IAAI,GAAG,cAAc,CAAC,KAAD,EAAQ,IAAR,CAArB;AACA,SAAO;AACL,IAAA,CAAC,EAAE,IAAI,CAAC,IADH;AAEL,IAAA,CAAC,EAAE,IAAI,CAAC,IAFH;AAGL,IAAA,KAAK,EAAE,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAHnB;AAIL,IAAA,MAAM,EAAE,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC;AAJpB,GAAP;AAMD","sourceRoot":"","sourcesContent":["import { Util } from '@antv/g-math';\nimport { mergeArrowBBox } from './util';\nexport default function (shape) {\n    var attrs = shape.attr();\n    var points = attrs.points;\n    var xArr = [];\n    var yArr = [];\n    for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        xArr.push(point[0]);\n        yArr.push(point[1]);\n    }\n    var _a = Util.getBBoxByArray(xArr, yArr), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n    var bbox = {\n        minX: x,\n        minY: y,\n        maxX: x + width,\n        maxY: y + height,\n    };\n    bbox = mergeArrowBBox(shape, bbox);\n    return {\n        x: bbox.minX,\n        y: bbox.minY,\n        width: bbox.maxX - bbox.minX,\n        height: bbox.maxY - bbox.minY,\n    };\n}\n//# sourceMappingURL=polyline.js.map"]},"metadata":{},"sourceType":"module"}