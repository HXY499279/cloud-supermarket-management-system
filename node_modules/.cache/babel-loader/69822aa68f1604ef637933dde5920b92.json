{"ast":null,"code":"import { filter, isNil, isNumber } from '@antv/util';\nimport extended from '../util/extended';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\nexport default function calculateCatTicks(cfg) {\n  var values = cfg.values,\n      tickInterval = cfg.tickInterval,\n      tickCount = cfg.tickCount;\n  var ticks = values;\n\n  if (isNumber(tickInterval)) {\n    return filter(ticks, function (__, i) {\n      return i % tickInterval === 0;\n    });\n  }\n\n  var min = cfg.min,\n      max = cfg.max;\n\n  if (isNil(min)) {\n    min = 0;\n  }\n\n  if (isNil(max)) {\n    max = values.length - 1;\n  }\n\n  if (isNumber(tickCount) && tickCount < max - min) {\n    // 简单过滤，部分情况下小数的倍数也可以是整数\n    // tslint:disable-next-line: no-shadowed-variable\n    var ticks_1 = extended(min, max, tickCount, false, [1, 2, 5, 3, 4, 7, 6, 8, 9]).ticks;\n    var valid = filter(ticks_1, function (tick) {\n      return tick >= min && tick <= max;\n    });\n    return valid.map(function (index) {\n      return values[index];\n    });\n  }\n\n  return values.slice(min, max + 1);\n}","map":{"version":3,"sources":["../../src/tick-method/cat.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,EAAiB,KAAjB,EAAwB,QAAxB,QAAwC,YAAxC;AAEA,OAAO,QAAP,MAAqB,kBAArB;AAEA;;;;AAIG;;AACH,eAAc,SAAU,iBAAV,CAA4B,GAA5B,EAA4C;AAChD,MAAA,MAAM,GAA8B,GAAG,CAAjC,MAAN;AAAA,MAAQ,YAAY,GAAgB,GAAG,CAAnB,YAApB;AAAA,MAAsB,SAAS,GAAK,GAAG,CAAR,SAA/B;AAER,MAAM,KAAK,GAAG,MAAd;;AACA,MAAI,QAAQ,CAAC,YAAD,CAAZ,EAA4B;AAC1B,WAAO,MAAM,CAAC,KAAD,EAAQ,UAAC,EAAD,EAAU,CAAV,EAAmB;AAAK,aAAA,CAAC,GAAG,YAAJ,KAAA,CAAA;AAAsB,KAAtD,CAAb;AACD;;AACK,MAAA,GAAG,GAAU,GAAG,CAAb,GAAH;AAAA,MAAK,GAAG,GAAK,GAAG,CAAR,GAAR;;AACN,MAAI,KAAK,CAAC,GAAD,CAAT,EAAgB;AACd,IAAA,GAAG,GAAG,CAAN;AACD;;AACD,MAAI,KAAK,CAAC,GAAD,CAAT,EAAgB;AACd,IAAA,GAAG,GAAG,MAAM,CAAC,MAAP,GAAgB,CAAtB;AACD;;AACD,MAAI,QAAQ,CAAC,SAAD,CAAR,IAAuB,SAAS,GAAG,GAAG,GAAG,GAA7C,EAAkD;AAChD;AACA;AACQ,QAAA,OAAK,GAAK,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,SAAX,EAAsB,KAAtB,EAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAA7B,CAAR,CAAL,KAAL;AACR,QAAM,KAAK,GAAG,MAAM,CAAC,OAAD,EAAQ,UAAC,IAAD,EAAK;AAAK,aAAA,IAAI,IAAI,GAAR,IAAe,IAAI,IAAnB,GAAA;AAA0B,KAA5C,CAApB;AACA,WAAO,KAAK,CAAC,GAAN,CAAU,UAAC,KAAD,EAAM;AAAK,aAAA,MAAM,CAAN,KAAM,CAAN;AAAa,KAAlC,CAAP;AACD;;AACD,SAAO,MAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,GAAG,GAAG,CAAxB,CAAP;AACD","sourceRoot":"","sourcesContent":["import { filter, isNil, isNumber } from '@antv/util';\nimport extended from '../util/extended';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function calculateCatTicks(cfg) {\n    var values = cfg.values, tickInterval = cfg.tickInterval, tickCount = cfg.tickCount;\n    var ticks = values;\n    if (isNumber(tickInterval)) {\n        return filter(ticks, function (__, i) { return i % tickInterval === 0; });\n    }\n    var min = cfg.min, max = cfg.max;\n    if (isNil(min)) {\n        min = 0;\n    }\n    if (isNil(max)) {\n        max = values.length - 1;\n    }\n    if (isNumber(tickCount) && tickCount < max - min) {\n        // 简单过滤，部分情况下小数的倍数也可以是整数\n        // tslint:disable-next-line: no-shadowed-variable\n        var ticks_1 = extended(min, max, tickCount, false, [1, 2, 5, 3, 4, 7, 6, 8, 9]).ticks;\n        var valid = filter(ticks_1, function (tick) { return tick >= min && tick <= max; });\n        return valid.map(function (index) { return values[index]; });\n    }\n    return values.slice(min, max + 1);\n}\n//# sourceMappingURL=cat.js.map"]},"metadata":{},"sourceType":"module"}