{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport TransformAction from './scale-transform';\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\n\nvar ScaleTranslate =\n/** @class */\nfunction (_super) {\n  __extends(ScaleTranslate, _super);\n\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.zoomRatio = 0.05;\n    return _this; // 平移分类的度量\n    // private translateCategory(dim, scale, normalPoint) {\n    // }\n  }\n  /**\n   * 缩小\n   */\n\n\n  ScaleTranslate.prototype.zoomIn = function () {\n    this.zoom(this.zoomRatio);\n  };\n\n  ScaleTranslate.prototype.zoom = function (scale) {\n    var _this = this;\n\n    var dims = this.dims;\n    each(dims, function (dim) {\n      _this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  };\n  /**\n   * 放大\n   */\n\n\n  ScaleTranslate.prototype.zoomOut = function () {\n    this.zoom(-1 * this.zoomRatio);\n  }; // 缩放度量\n\n\n  ScaleTranslate.prototype.zoomDim = function (dim, dRatio) {\n    if (this.hasDim(dim)) {\n      var scale = this.getScale(dim);\n\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      } //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n\n    }\n  }; // linear 度量平移\n\n\n  ScaleTranslate.prototype.zoomLinear = function (dim, scale, dRatio) {\n    var view = this.context.view; // 只有第一次缓存，否则无法回滚\n\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max\n      };\n    } // 使用使用原始度量作为缩放标准\n\n\n    var scaleDef = this.cacheScaleDefs[dim];\n    var range = scaleDef.max - scaleDef.min;\n    var min = scale.min,\n        max = scale.max;\n    var d = dRatio * range;\n    var toMin = min - d;\n    var toMax = max + d;\n    var curRange = toMax - toMin;\n    var scaled = curRange / range;\n\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d\n      });\n    }\n  };\n\n  return ScaleTranslate;\n}(TransformAction);\n\nexport default ScaleTranslate;","map":{"version":3,"sources":["../../../../src/interaction/action/view/scale-zoom.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAA+B,YAA/B;AACA,OAAO,eAAP,MAA4B,mBAA5B;AAEA;;;AAGG;;AACH,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACU,IAAA,KAAA,CAAA,SAAA,GAAY,IAAZ;iBADV,CAmEE;AACA;AACA;AACD;AApEC;;AAEG;;;AACI,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,SAAK,IAAL,CAAU,KAAK,SAAf;AACD,GAFM;;AAIC,EAAA,cAAA,CAAA,SAAA,CAAA,IAAA,GAAR,UAAa,KAAb,EAAkB;AAAlB,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,IAAI,GAAG,KAAK,IAAlB;AACA,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,GAAD,EAAI;AACb,MAAA,KAAI,CAAC,OAAL,CAAa,GAAb,EAAkB,KAAlB;AACD,KAFG,CAAJ;AAGA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,CAAyB,IAAzB;AACD,GANO;AAQR;;AAEG;;;AACI,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,SAAK,IAAL,CAAU,CAAC,CAAD,GAAK,KAAK,SAApB;AACD,GAFM,CApBT,CAwBE;;;AACQ,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAR,UAAgB,GAAhB,EAAqB,MAArB,EAA2B;AACzB,QAAI,KAAK,MAAL,CAAY,GAAZ,CAAJ,EAAsB;AACpB,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,GAAd,CAAd;;AACA,UAAI,KAAK,CAAC,QAAV,EAAoB;AAClB,aAAK,UAAL,CAAgB,GAAhB,EAAqB,KAArB,EAA4B,MAA5B;AACD,OAJmB,CAKpB;AACA;AACA;;AACD;AACF,GAVO,CAzBV,CAoCE;;;AACQ,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAR,UAAmB,GAAnB,EAAwB,KAAxB,EAA+B,MAA/B,EAAqC;AACnC,QAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAA1B,CADmC,CAEnC;;AACA,QAAI,CAAC,KAAK,cAAL,CAAoB,GAApB,CAAL,EAA+B;AAC7B,WAAK,cAAL,CAAoB,GAApB,IAA2B;AACzB;AACA,QAAA,IAAI,EAAE,KAAK,CAAC,IAFa;AAGzB,QAAA,GAAG,EAAE,KAAK,CAAC,GAHc;AAIzB,QAAA,GAAG,EAAE,KAAK,CAAC;AAJc,OAA3B;AAMD,KAVkC,CAWnC;;;AACA,QAAM,QAAQ,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAjB;AACA,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,GAAe,QAAQ,CAAC,GAAtC;AACQ,QAAA,GAAG,GAAU,KAAK,CAAf,GAAH;AAAA,QAAK,GAAG,GAAK,KAAK,CAAV,GAAR;AACR,QAAM,CAAC,GAAG,MAAM,GAAG,KAAnB;AACA,QAAM,KAAK,GAAG,GAAG,GAAG,CAApB;AACA,QAAM,KAAK,GAAG,GAAG,GAAG,CAApB;AACA,QAAM,QAAQ,GAAG,KAAK,GAAG,KAAzB;AACA,QAAM,MAAM,GAAG,QAAQ,GAAG,KAA1B;;AACA,QAAI,KAAK,GAAG,KAAR,IAAiB,MAAM,GAAG,GAA1B,IAAiC,MAAM,GAAG,IAA9C,EAAoD;AAClD,MAAA,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,KAAjB,EAAwB;AACtB;AACA,QAAA,IAAI,EAAE,KAFgB;AAGtB,QAAA,GAAG,EAAE,GAAG,GAAG,CAHW;AAItB,QAAA,GAAG,EAAE,GAAG,GAAG;AAJW,OAAxB;AAMD;AACF,GA5BO;;AAiCV,SAAA,cAAA;AAAC,CAtED,CAA6B,eAA7B,CAAA;;AAwEA,eAAe,cAAf","sourcesContent":["import { each, throttle } from '@antv/util';\nimport TransformAction from './scale-transform';\n\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\nclass ScaleTranslate extends TransformAction {\n  private zoomRatio = 0.05;\n  /**\n   * 缩小\n   */\n  public zoomIn() {\n    this.zoom(this.zoomRatio);\n  }\n\n  private zoom(scale) {\n    const dims = this.dims;\n    each(dims, (dim) => {\n      this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  }\n\n  /**\n   * 放大\n   */\n  public zoomOut() {\n    this.zoom(-1 * this.zoomRatio);\n  }\n\n  // 缩放度量\n  private zoomDim(dim, dRatio) {\n    if (this.hasDim(dim)) {\n      const scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n    }\n  }\n  // linear 度量平移\n  private zoomLinear(dim, scale, dRatio) {\n    const view = this.context.view;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max,\n      };\n    }\n    // 使用使用原始度量作为缩放标准\n    const scaleDef = this.cacheScaleDefs[dim];\n    const range = scaleDef.max - scaleDef.min;\n    const { min, max } = scale;\n    const d = dRatio * range;\n    const toMin = min - d;\n    const toMax = max + d;\n    const curRange = toMax - toMin;\n    const scaled = curRange / range;\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d,\n      });\n    }\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n}\n\nexport default ScaleTranslate;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}