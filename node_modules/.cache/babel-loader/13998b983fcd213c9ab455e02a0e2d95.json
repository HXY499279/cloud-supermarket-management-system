{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nvar EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints: function (pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\nregisterShape('edge', 'line', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});\nexport default EdgeShapeFactory;","map":{"version":3,"sources":["../../../../src/geometry/shape/edge/index.ts"],"names":[],"mappings":";AAGA,SAAS,aAAT,EAAwB,oBAAxB,QAAoD,SAApD;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,WAAT,QAA4B,cAA5B;AACA,SAAS,WAAT,QAA4B,sBAA5B;AAEA,IAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAD,EAAS;AACpD,EAAA,gBAAgB,EAAE,MADkC;AAEpD,EAAA,gBAAgB,EAAhB,UAAiB,SAAjB,EAAsC;AACpC,WAAO,WAAW,CAAC,SAAD,CAAlB;AACD;AAJmD,CAAT,CAA7C;AAOA,aAAa,CAAC,MAAD,EAAS,MAAT,EAAiB;AAC5B,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,WAAnB,CAAtB;AACA,QAAM,IAAI,GAAG,WAAW,CAAC,KAAK,WAAL,CAAiB,GAAG,CAAC,MAArB,CAAD,EAA+B,KAAK,UAAL,CAAgB,OAA/C,CAAxB;AACA,WAAO,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AAChC,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,QAAA,IAAI,EAAA;AADI,OADL;AAD2B,KAA3B,CAAP;AAMD,GAV2B;AAW5B,EAAA,SAAS,EAAT,UAAU,SAAV,EAAmC;AACjC,WAAO;AACL,MAAA,MAAM,EAAE,QADH;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,CAAC,EAAE,GADE;AAEL,QAAA,IAAI,EAAE,SAAS,CAAC;AAFX;AAFF,KAAP;AAOD;AAnB2B,CAAjB,CAAb;AAsBA,eAAe,gBAAf","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\n\nconst EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\nregisterShape('edge', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n\nexport default EdgeShapeFactory;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}