{"ast":null,"code":"export function removeFromArray(arr, obj) {\n  var index = arr.indexOf(obj);\n\n  if (index !== -1) {\n    arr.splice(index, 1);\n  }\n}\nexport var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport { isNil, isFunction, isString, isObject, isArray, mix, each, upperFirst } from '@antv/util'; // 是否元素的父容器\n\nexport function isParent(container, shape) {\n  // 所有 shape 都是 canvas 的子元素\n  if (container.isCanvas()) {\n    return true;\n  }\n\n  var parent = shape.getParent();\n  var isParent = false;\n\n  while (parent) {\n    if (parent === container) {\n      isParent = true;\n      break;\n    }\n\n    parent = parent.getParent();\n  }\n\n  return isParent;\n}\nexport function isAllowCapture(element) {\n  // @ts-ignore\n  return element.cfg.visible && element.cfg.capture;\n}","map":{"version":3,"sources":["../../src/util/util.ts"],"names":[],"mappings":"AACA,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAsC,GAAtC,EAA8C;AAClD,MAAM,KAAK,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAd;;AACA,MAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,IAAA,GAAG,CAAC,MAAJ,CAAW,KAAX,EAAkB,CAAlB;AACD;AACF;AAED,OAAO,IAAM,SAAS,GAAG,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,MAAM,CAAC,QAAd,KAA2B,WAA9E;AACP,SAAS,KAAT,EAAgB,UAAhB,EAA4B,QAA5B,EAAsC,QAAtC,EAAgD,OAAhD,EAAyD,GAAzD,EAA8D,IAA9D,EAAoE,UAApE,QAAsF,YAAtF,C,CAEA;;AACA,OAAM,SAAU,QAAV,CAAmB,SAAnB,EAA8B,KAA9B,EAAmC;AACvC;AACA,MAAI,SAAS,CAAC,QAAV,EAAJ,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,MAAI,MAAM,GAAG,KAAK,CAAC,SAAN,EAAb;AACA,MAAI,QAAQ,GAAG,KAAf;;AACA,SAAO,MAAP,EAAe;AACb,QAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,MAAA,QAAQ,GAAG,IAAX;AACA;AACD;;AACD,IAAA,MAAM,GAAG,MAAM,CAAC,SAAP,EAAT;AACD;;AACD,SAAO,QAAP;AACD;AAED,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAAuC;AAC3C;AACA,SAAO,OAAO,CAAC,GAAR,CAAY,OAAZ,IAAuB,OAAO,CAAC,GAAR,CAAY,OAA1C;AACD","sourceRoot":"","sourcesContent":["export function removeFromArray(arr, obj) {\n    var index = arr.indexOf(obj);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport { isNil, isFunction, isString, isObject, isArray, mix, each, upperFirst } from '@antv/util';\n// 是否元素的父容器\nexport function isParent(container, shape) {\n    // 所有 shape 都是 canvas 的子元素\n    if (container.isCanvas()) {\n        return true;\n    }\n    var parent = shape.getParent();\n    var isParent = false;\n    while (parent) {\n        if (parent === container) {\n            isParent = true;\n            break;\n        }\n        parent = parent.getParent();\n    }\n    return isParent;\n}\nexport function isAllowCapture(element) {\n    // @ts-ignore\n    return element.cfg.visible && element.cfg.capture;\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}