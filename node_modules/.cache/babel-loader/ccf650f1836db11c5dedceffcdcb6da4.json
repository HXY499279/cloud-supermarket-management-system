{"ast":null,"code":"import { head, indexOf, size, last } from '@antv/util';\nimport { precisionAdd } from './math';\nexport var DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\nexport var ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\nvar eps = Number.EPSILON * 100;\n\nfunction mod(n, m) {\n  return (n % m + m) % m;\n}\n\nfunction simplicity(q, Q, j, lmin, lmax, lstep) {\n  var n = size(Q);\n  var i = indexOf(Q, q);\n  var v = 0;\n  var m = mod(lmin, lstep);\n\n  if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\n    v = 1;\n  }\n\n  return 1 - i / (n - 1) - j + v;\n}\n\nfunction simplicityMax(q, Q, j) {\n  var n = size(Q);\n  var i = indexOf(Q, q);\n  var v = 1;\n  return 1 - i / (n - 1) - j + v;\n}\n\nfunction density(k, m, dMin, dMax, lMin, lMax) {\n  var r = (k - 1) / (lMax - lMin);\n  var rt = (m - 1) / (Math.max(lMax, dMax) - Math.min(dMin, lMin));\n  return 2 - Math.max(r / rt, rt / r);\n}\n\nfunction densityMax(k, m) {\n  if (k >= m) {\n    return 2 - (k - 1) / (m - 1);\n  }\n\n  return 1;\n}\n\nfunction coverage(dMin, dMax, lMin, lMax) {\n  var range = dMax - dMin;\n  return 1 - 0.5 * (Math.pow(dMax - lMax, 2) + Math.pow(dMin - lMin, 2)) / Math.pow(0.1 * range, 2);\n}\n\nfunction coverageMax(dMin, dMax, span) {\n  var range = dMax - dMin;\n\n  if (span > range) {\n    var half = (span - range) / 2;\n    return 1 - Math.pow(half, 2) / Math.pow(0.1 * range, 2);\n  }\n\n  return 1;\n}\n\nfunction legibility() {\n  return 1;\n}\n/**\n * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes\n * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf\n * @param dMin 最小值\n * @param dMax 最大值\n * @param m tick个数\n * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]\n * @param Q nice numbers集合\n * @param w 四个优化组件的权重\n */\n\n\nexport default function extended(dMin, dMax, m, onlyLoose, Q, w) {\n  if (m === void 0) {\n    m = 5;\n  }\n\n  if (onlyLoose === void 0) {\n    onlyLoose = true;\n  }\n\n  if (Q === void 0) {\n    Q = DEFAULT_Q;\n  }\n\n  if (w === void 0) {\n    w = [0.25, 0.2, 0.5, 0.05];\n  } // nan 也会导致异常\n\n\n  if (Number.isNaN(dMin) || Number.isNaN(dMax) || typeof dMin !== 'number' || typeof dMax !== 'number' || !m) {\n    return {\n      min: 0,\n      max: 0,\n      ticks: []\n    };\n  } // js 极大值极小值问题，差值小于 1e-15 会导致计算出错\n\n\n  if (dMax - dMin < 1e-15 || m === 1) {\n    return {\n      min: dMin,\n      max: dMax,\n      ticks: [dMin]\n    };\n  }\n\n  var best = {\n    score: -2,\n    lmin: 0,\n    lmax: 0,\n    lstep: 0\n  };\n  var j = 1;\n\n  while (j < Infinity) {\n    for (var i_1 = 0; i_1 < Q.length; i_1 += 1) {\n      var q = Q[i_1];\n      var sm = simplicityMax(q, Q, j);\n\n      if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\n        j = Infinity;\n        break;\n      }\n\n      var k = 2;\n\n      while (k < Infinity) {\n        var dm = densityMax(k, m);\n\n        if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\n          break;\n        }\n\n        var delta = (dMax - dMin) / (k + 1) / j / q;\n        var z = Math.ceil(Math.log10(delta));\n\n        while (z < Infinity) {\n          var step = j * q * Math.pow(10, z);\n          var cm = coverageMax(dMin, dMax, step * (k - 1));\n\n          if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\n            break;\n          }\n\n          var minStart = Math.floor(dMax / step) * j - (k - 1) * j;\n          var maxStart = Math.ceil(dMin / step) * j;\n\n          if (minStart > maxStart) {\n            z += 1; // eslint-disable-next-line no-continue\n\n            continue;\n          }\n\n          for (var start = minStart; start <= maxStart; start += 1) {\n            var lMin = start * (step / j);\n            var lMax = lMin + step * (k - 1);\n            var lStep = step;\n            var s = simplicity(q, Q, j, lMin, lMax, lStep);\n            var c = coverage(dMin, dMax, lMin, lMax);\n            var g = density(k, m, dMin, dMax, lMin, lMax);\n            var l = legibility();\n            var score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\n\n            if (score > best.score && (!onlyLoose || lMin <= dMin && lMax >= dMax)) {\n              best.lmin = lMin;\n              best.lmax = lMax;\n              best.lstep = lStep;\n              best.score = score;\n            }\n          }\n\n          z += 1;\n        }\n\n        k += 1;\n      }\n    }\n\n    j += 1;\n  }\n\n  var i = 0; // 步长为浮点数时处理精度\n\n  var range = new Array(Math.floor((best.lmax - best.lmin) / best.lstep));\n\n  for (var tick = best.lmin; tick <= best.lmax; tick = precisionAdd(tick, best.lstep)) {\n    range[i] = tick;\n    i += 1;\n  }\n\n  return {\n    min: Math.min(dMin, head(range)),\n    max: Math.max(dMax, last(range)),\n    ticks: range\n  };\n}\n;","map":{"version":3,"sources":["../../src/util/extended.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { head, indexOf, size, last } from '@antv/util';\nimport { precisionAdd } from './math';\nexport var DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\nexport var ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\nvar eps = Number.EPSILON * 100;\nfunction mod(n, m) {\n    return ((n % m) + m) % m;\n}\nfunction simplicity(q, Q, j, lmin, lmax, lstep) {\n    var n = size(Q);\n    var i = indexOf(Q, q);\n    var v = 0;\n    var m = mod(lmin, lstep);\n    if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\n        v = 1;\n    }\n    return 1 - i / (n - 1) - j + v;\n}\nfunction simplicityMax(q, Q, j) {\n    var n = size(Q);\n    var i = indexOf(Q, q);\n    var v = 1;\n    return 1 - i / (n - 1) - j + v;\n}\nfunction density(k, m, dMin, dMax, lMin, lMax) {\n    var r = (k - 1) / (lMax - lMin);\n    var rt = (m - 1) / (Math.max(lMax, dMax) - Math.min(dMin, lMin));\n    return 2 - Math.max(r / rt, rt / r);\n}\nfunction densityMax(k, m) {\n    if (k >= m) {\n        return 2 - (k - 1) / (m - 1);\n    }\n    return 1;\n}\nfunction coverage(dMin, dMax, lMin, lMax) {\n    var range = dMax - dMin;\n    return 1 - (0.5 * (Math.pow((dMax - lMax), 2) + Math.pow((dMin - lMin), 2))) / Math.pow((0.1 * range), 2);\n}\nfunction coverageMax(dMin, dMax, span) {\n    var range = dMax - dMin;\n    if (span > range) {\n        var half = (span - range) / 2;\n        return 1 - Math.pow(half, 2) / Math.pow((0.1 * range), 2);\n    }\n    return 1;\n}\nfunction legibility() {\n    return 1;\n}\n/**\n * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes\n * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf\n * @param dMin 最小值\n * @param dMax 最大值\n * @param m tick个数\n * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]\n * @param Q nice numbers集合\n * @param w 四个优化组件的权重\n */\nexport default function extended(dMin, dMax, m, onlyLoose, Q, w) {\n    if (m === void 0) { m = 5; }\n    if (onlyLoose === void 0) { onlyLoose = true; }\n    if (Q === void 0) { Q = DEFAULT_Q; }\n    if (w === void 0) { w = [0.25, 0.2, 0.5, 0.05]; }\n    // nan 也会导致异常\n    if (Number.isNaN(dMin) || Number.isNaN(dMax) || typeof dMin !== 'number' || typeof dMax !== 'number' || !m) {\n        return {\n            min: 0,\n            max: 0,\n            ticks: [],\n        };\n    }\n    // js 极大值极小值问题，差值小于 1e-15 会导致计算出错\n    if (dMax - dMin < 1e-15 || m === 1) {\n        return {\n            min: dMin,\n            max: dMax,\n            ticks: [dMin],\n        };\n    }\n    var best = {\n        score: -2,\n        lmin: 0,\n        lmax: 0,\n        lstep: 0,\n    };\n    var j = 1;\n    while (j < Infinity) {\n        for (var i_1 = 0; i_1 < Q.length; i_1 += 1) {\n            var q = Q[i_1];\n            var sm = simplicityMax(q, Q, j);\n            if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\n                j = Infinity;\n                break;\n            }\n            var k = 2;\n            while (k < Infinity) {\n                var dm = densityMax(k, m);\n                if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\n                    break;\n                }\n                var delta = (dMax - dMin) / (k + 1) / j / q;\n                var z = Math.ceil(Math.log10(delta));\n                while (z < Infinity) {\n                    var step = j * q * Math.pow(10, z);\n                    var cm = coverageMax(dMin, dMax, step * (k - 1));\n                    if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\n                        break;\n                    }\n                    var minStart = Math.floor(dMax / step) * j - (k - 1) * j;\n                    var maxStart = Math.ceil(dMin / step) * j;\n                    if (minStart > maxStart) {\n                        z += 1;\n                        // eslint-disable-next-line no-continue\n                        continue;\n                    }\n                    for (var start = minStart; start <= maxStart; start += 1) {\n                        var lMin = start * (step / j);\n                        var lMax = lMin + step * (k - 1);\n                        var lStep = step;\n                        var s = simplicity(q, Q, j, lMin, lMax, lStep);\n                        var c = coverage(dMin, dMax, lMin, lMax);\n                        var g = density(k, m, dMin, dMax, lMin, lMax);\n                        var l = legibility();\n                        var score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\n                        if (score > best.score && (!onlyLoose || (lMin <= dMin && lMax >= dMax))) {\n                            best.lmin = lMin;\n                            best.lmax = lMax;\n                            best.lstep = lStep;\n                            best.score = score;\n                        }\n                    }\n                    z += 1;\n                }\n                k += 1;\n            }\n        }\n        j += 1;\n    }\n    var i = 0;\n    // 步长为浮点数时处理精度\n    var range = new Array(Math.floor((best.lmax - best.lmin) / best.lstep));\n    for (var tick = best.lmin; tick <= best.lmax; tick = precisionAdd(tick, best.lstep)) {\n        range[i] = tick;\n        i += 1;\n    }\n    return {\n        min: Math.min(dMin, head(range)),\n        max: Math.max(dMax, last(range)),\n        ticks: range,\n    };\n}\n;\n//# sourceMappingURL=extended.js.map"]},"metadata":{},"sourceType":"module"}