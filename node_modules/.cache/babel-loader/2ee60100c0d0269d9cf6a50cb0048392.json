{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\nexport var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\n\nexport function drawPoints(shape, cfg, container, shapeName, isStroke) {\n  var style = getStyle(cfg, isStroke, !isStroke, 'r');\n  var points = shape.parsePoints(cfg.points);\n  var pointPosition = points[0];\n\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    var group = container.addGroup();\n\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n      var point = points_1[_i];\n      group.addShape({\n        type: 'marker',\n        attrs: __assign(__assign(__assign({}, style), {\n          symbol: MarkerSymbols[shapeName] || shapeName\n        }), point)\n      });\n    }\n\n    return group;\n  }\n\n  return container.addShape({\n    type: 'marker',\n    attrs: __assign(__assign(__assign({}, style), {\n      symbol: MarkerSymbols[shapeName] || shapeName\n    }), pointPosition)\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/shape/point/util.ts"],"names":[],"mappings":";AAEA,SAAS,aAAT,QAA8B,sBAA9B;AACA,SAAS,QAAT,QAAyB,mBAAzB;AAEA,OAAO,IAAM,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,UAArD,EAAiE,eAAjE,CAAf;AACP,OAAO,IAAM,aAAa,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC,MAApC,CAAtB;AAEP;;;;;;;;;AASG;;AACH,OAAM,SAAU,UAAV,CACJ,KADI,EAEJ,GAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,QALI,EAKa;AAEjB,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,QAAN,EAAgB,CAAC,QAAjB,EAA2B,GAA3B,CAAtB;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,WAAN,CAAkB,GAAG,CAAC,MAAtB,CAAf;AACA,MAAI,aAAa,GAAG,MAAM,CAAC,CAAD,CAA1B;;AACA,MAAI,GAAG,CAAC,OAAR,EAAiB;AACf,IAAA,aAAa,GAAG,MAAM,CAAC,CAAD,CAAtB;AACD,GAFD,MAEO,IAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AAC5B,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,EAAd;;AACA,SAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAApB,EAAoB,EAAA,GAAA,QAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAA4B;AAAvB,UAAM,KAAK,GAAA,QAAA,CAAA,EAAA,CAAX;AACH,MAAA,KAAK,CAAC,QAAN,CAAe;AACb,QAAA,IAAI,EAAE,QADO;AAEb,QAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,UAAA,MAAM,EAAE,aAAa,CAAC,SAAD,CAAb,IAA4B;AAD5B,SADL,CAAA,EAGA,KAHA;AAFQ,OAAf;AAQD;;AACD,WAAO,KAAP;AACD;;AAED,SAAO,SAAS,CAAC,QAAV,CAAmB;AACxB,IAAA,IAAI,EAAE,QADkB;AAExB,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,MAAA,MAAM,EAAE,aAAa,CAAC,SAAD,CAAb,IAA4B;AAD5B,KADL,CAAA,EAGA,aAHA;AAFmB,GAAnB,CAAP;AAQD","sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { ShapeInfo } from '../../../interface';\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\n\nexport const SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport const HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(\n  shape,\n  cfg: ShapeInfo,\n  container: IGroup,\n  shapeName: string,\n  isStroke: boolean\n): IShape | IGroup {\n  const style = getStyle(cfg, isStroke, !isStroke, 'r');\n  const points = shape.parsePoints(cfg.points);\n  let pointPosition = points[0];\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    const group = container.addGroup();\n    for (const point of points) {\n      group.addShape({\n        type: 'marker',\n        attrs: {\n          ...style,\n          symbol: MarkerSymbols[shapeName] || shapeName,\n          ...point,\n        },\n      });\n    }\n    return group;\n  }\n\n  return container.addShape({\n    type: 'marker',\n    attrs: {\n      ...style,\n      symbol: MarkerSymbols[shapeName] || shapeName,\n      ...pointPosition,\n    },\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}