{"ast":null,"code":"/**\n * @fileoverview Marker\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport { path2Absolute } from '@antv/path-util';\nimport ShapeBase from './base';\nimport { isFunction } from '../util/util';\nimport { drawPath } from '../util/draw';\nvar Symbols = {\n  // 圆\n  circle: function (x, y, r) {\n    return [['M', x - r, y], ['A', r, r, 0, 1, 0, x + r, y], ['A', r, r, 0, 1, 0, x - r, y]];\n  },\n  // 正方形\n  square: function (x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n  },\n  // 菱形\n  diamond: function (x, y, r) {\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n  },\n  // 三角形\n  triangle: function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];\n  },\n  // 倒三角形\n  'triangle-down': function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n  }\n};\n\nvar Marker =\n/** @class */\nfunction (_super) {\n  __extends(Marker, _super);\n\n  function Marker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Marker.prototype.initAttrs = function (attrs) {\n    this._resetParamsCache();\n  }; // 重置绘制 path 存储的缓存\n\n\n  Marker.prototype._resetParamsCache = function () {\n    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n    this.set('paramsCache', {}); // 清理缓存\n  }; // 更新属性时，检测是否更改了 path\n\n\n  Marker.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {\n      // path 相关属性更改时，清理缓存\n      this._resetParamsCache();\n    }\n  }; // 仅仅使用包围盒检测来进行拾取\n  // 所以不需要复写 isInStrokeOrPath 的方法\n\n\n  Marker.prototype.isOnlyHitBox = function () {\n    return true;\n  };\n\n  Marker.prototype._getR = function (attrs) {\n    // 兼容 r 和 radius 两种写法，推荐使用 r\n    return isNil(attrs.r) ? attrs.radius : attrs.r;\n  };\n\n  Marker.prototype._getPath = function () {\n    var attrs = this.attr();\n    var x = attrs.x,\n        y = attrs.y;\n    var symbol = attrs.symbol || 'circle';\n\n    var r = this._getR(attrs);\n\n    var method;\n    var path;\n\n    if (isFunction(symbol)) {\n      method = symbol;\n      path = method(x, y, r); // 将 path 转成绝对路径\n\n      path = path2Absolute(path);\n    } else {\n      // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理\n      method = Marker.Symbols[symbol];\n\n      if (!method) {\n        console.warn(symbol + \" marker is not supported.\");\n        return null;\n      }\n\n      path = method(x, y, r);\n    }\n\n    return path;\n  };\n\n  Marker.prototype.createPath = function (context) {\n    var path = this._getPath();\n\n    var paramsCache = this.get('paramsCache');\n    drawPath(this, context, {\n      path: path\n    }, paramsCache);\n  };\n\n  Marker.Symbols = Symbols;\n  return Marker;\n}(ShapeBase);\n\nexport default Marker;","map":{"version":3,"sources":["../../src/shape/marker.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview Marker\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport { path2Absolute } from '@antv/path-util';\nimport ShapeBase from './base';\nimport { isFunction } from '../util/util';\nimport { drawPath } from '../util/draw';\nvar Symbols = {\n    // 圆\n    circle: function (x, y, r) {\n        return [\n            ['M', x - r, y],\n            ['A', r, r, 0, 1, 0, x + r, y],\n            ['A', r, r, 0, 1, 0, x - r, y],\n        ];\n    },\n    // 正方形\n    square: function (x, y, r) {\n        return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n    },\n    // 菱形\n    diamond: function (x, y, r) {\n        return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n    },\n    // 三角形\n    triangle: function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];\n    },\n    // 倒三角形\n    'triangle-down': function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n    },\n};\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Marker.prototype.initAttrs = function (attrs) {\n        this._resetParamsCache();\n    };\n    // 重置绘制 path 存储的缓存\n    Marker.prototype._resetParamsCache = function () {\n        // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n        // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n        this.set('paramsCache', {}); // 清理缓存\n    };\n    // 更新属性时，检测是否更改了 path\n    Marker.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {\n            // path 相关属性更改时，清理缓存\n            this._resetParamsCache();\n        }\n    };\n    // 仅仅使用包围盒检测来进行拾取\n    // 所以不需要复写 isInStrokeOrPath 的方法\n    Marker.prototype.isOnlyHitBox = function () {\n        return true;\n    };\n    Marker.prototype._getR = function (attrs) {\n        // 兼容 r 和 radius 两种写法，推荐使用 r\n        return isNil(attrs.r) ? attrs.radius : attrs.r;\n    };\n    Marker.prototype._getPath = function () {\n        var attrs = this.attr();\n        var x = attrs.x, y = attrs.y;\n        var symbol = attrs.symbol || 'circle';\n        var r = this._getR(attrs);\n        var method;\n        var path;\n        if (isFunction(symbol)) {\n            method = symbol;\n            path = method(x, y, r);\n            // 将 path 转成绝对路径\n            path = path2Absolute(path);\n        }\n        else {\n            // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理\n            method = Marker.Symbols[symbol];\n            if (!method) {\n                console.warn(symbol + \" marker is not supported.\");\n                return null;\n            }\n            path = method(x, y, r);\n        }\n        return path;\n    };\n    Marker.prototype.createPath = function (context) {\n        var path = this._getPath();\n        var paramsCache = this.get('paramsCache');\n        drawPath(this, context, { path: path }, paramsCache);\n    };\n    Marker.Symbols = Symbols;\n    return Marker;\n}(ShapeBase));\nexport default Marker;\n//# sourceMappingURL=marker.js.map"]},"metadata":{},"sourceType":"module"}