{"ast":null,"code":"import { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\n/**\n * 用于包围盒计算。\n */\n\nvar BBox =\n/** @class */\nfunction () {\n  function BBox(x, y, width, height) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (width === void 0) {\n      width = 0;\n    }\n\n    if (height === void 0) {\n      height = 0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  BBox.fromRange = function (minX, minY, maxX, maxY) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  };\n\n  BBox.fromObject = function (bbox) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  };\n\n  Object.defineProperty(BBox.prototype, \"minX\", {\n    get: function () {\n      return this.x;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxX\", {\n    get: function () {\n      return this.x + this.width;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"minY\", {\n    get: function () {\n      return this.y;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxY\", {\n    get: function () {\n      return this.y + this.height;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tl\", {\n    get: function () {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tr\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bl\", {\n    get: function () {\n      return {\n        x: this.x,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"br\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"top\", {\n    get: function () {\n      return {\n        x: this.x + this.width / 2,\n        y: this.minY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"right\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bottom\", {\n    get: function () {\n      return {\n        x: this.x + this.width / 2,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"left\", {\n    get: function () {\n      return {\n        x: this.minX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  }); // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n\n  BBox.prototype.isEqual = function (bbox) {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  };\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n\n\n  BBox.prototype.contains = function (child) {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  };\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n\n\n  BBox.prototype.clone = function () {\n    return new BBox(this.x, this.y, this.width, this.height);\n  };\n  /**\n   * 取并集\n   * @param subBBox\n   */\n\n\n  BBox.prototype.add = function () {\n    var subBBox = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * 取交集\n   * @param subBBox\n   */\n\n\n  BBox.prototype.merge = function () {\n    var subBBox = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n\n\n  BBox.prototype.cut = function (subBBox, direction) {\n    var width = subBBox.width;\n    var height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  };\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n\n\n  BBox.prototype.shrink = function (gap) {\n    var top = gap[0],\n        right = gap[1],\n        bottom = gap[2],\n        left = gap[3];\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  };\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n\n\n  BBox.prototype.expand = function (gap) {\n    var top = gap[0],\n        right = gap[1],\n        bottom = gap[2],\n        left = gap[3];\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  };\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n\n\n  BBox.prototype.exceed = function (bbox) {\n    return [Math.max(-this.minY + bbox.minY, 0), Math.max(this.maxX - bbox.maxX, 0), Math.max(this.maxY - bbox.maxY, 0), Math.max(-this.minX + bbox.minX, 0)];\n  };\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n\n\n  BBox.prototype.collide = function (bbox) {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX && this.minY < bbox.maxY && this.maxY > bbox.minY;\n  };\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n\n\n  BBox.prototype.size = function () {\n    return this.width * this.height;\n  };\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n\n\n  BBox.prototype.isPointIn = function (p) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  };\n\n  return BBox;\n}();\n\nexport { BBox };\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\n\nexport var getRegionBBox = function (bbox, region) {\n  var start = region.start,\n      end = region.end;\n  return new BBox(bbox.x + bbox.width * start.x, bbox.y + bbox.height * start.y, bbox.width * Math.abs(end.x - start.x), bbox.height * Math.abs(end.y - start.y));\n};\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\n\nexport function toPoints(bbox) {\n  return [[bbox.minX, bbox.minY], [bbox.maxX, bbox.minY], [bbox.maxX, bbox.maxY], [bbox.minX, bbox.maxY]];\n}","map":{"version":3,"sources":["../../src/util/bbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Padding, Point, Region } from '../interface';\nimport { BBox as BBoxObject } from '../dependents';\n\n/**\n * 用于包围盒计算。\n */\nexport class BBox {\n  /** x 轴坐标系 */\n  public x: number;\n  /** y 轴坐标系 */\n  public y: number;\n  /** 包围盒高度 */\n  public height: number;\n  /** 包围盒宽度 */\n  public width: number;\n\n  public static fromRange(minX: number, minY: number, maxX: number, maxY: number) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  public static fromObject(bbox: BBoxObject) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  }\n\n  constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  public get minX(): number {\n    return this.x;\n  }\n\n  public get maxX(): number {\n    return this.x + this.width;\n  }\n\n  public get minY(): number {\n    return this.y;\n  }\n\n  public get maxY(): number {\n    return this.y + this.height;\n  }\n\n  public get tl(): Point {\n    return { x: this.x, y: this.y };\n  }\n\n  public get tr(): Point {\n    return { x: this.maxX, y: this.y };\n  }\n\n  public get bl(): Point {\n    return { x: this.x, y: this.maxY };\n  }\n\n  public get br(): Point {\n    return { x: this.maxX, y: this.maxY };\n  }\n\n  public get top(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.minY,\n    };\n  }\n\n  public get right(): Point {\n    return {\n      x: this.maxX,\n      y: this.y + this.height / 2,\n    };\n  }\n  public get bottom(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.maxY,\n    };\n  }\n  public get left(): Point {\n    return {\n      x: this.minX,\n      y: this.y + this.height / 2,\n    };\n  }\n  // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n  public isEqual(bbox: BBox): boolean {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  }\n\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n  public contains(child: BBox): boolean {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  }\n\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n  public clone(): BBox {\n    return new BBox(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * 取并集\n   * @param subBBox\n   */\n  public add(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * 取交集\n   * @param subBBox\n   */\n  public merge(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n  public cut(subBBox: BBox, direction: DIRECTION): BBox {\n    const width = subBBox.width;\n    const height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  }\n\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n  public shrink(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  }\n\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n  public expand(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  }\n\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n  public exceed(bbox: BBox): Padding {\n    return [\n      Math.max(-this.minY + bbox.minY, 0),\n      Math.max(this.maxX - bbox.maxX, 0),\n      Math.max(this.maxY - bbox.maxY, 0),\n      Math.max(-this.minX + bbox.minX, 0),\n    ];\n  }\n\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n  public collide(bbox: BBox): boolean {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX &&\n      this.minY < bbox.maxY && this.maxY > bbox.minY;\n  }\n\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n  public size(): number {\n    return this.width * this.height;\n  }\n\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n  public isPointIn(p: Point) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  }\n}\n\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\nexport const getRegionBBox = (bbox: BBox, region: Region): BBox => {\n  const { start, end } = region;\n\n  return new BBox(\n    bbox.x + bbox.width * start.x,\n    bbox.y + bbox.height * start.y,\n    bbox.width * Math.abs(end.x - start.x),\n    bbox.height * Math.abs(end.y - start.y)\n  );\n};\n\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\nexport function toPoints(bbox: Partial<BBox>): any[] {\n  return [\n    [bbox.minX, bbox.minY],\n    [bbox.maxX, bbox.minY],\n    [bbox.maxX, bbox.maxY],\n    [bbox.minX, bbox.maxY],\n  ];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}