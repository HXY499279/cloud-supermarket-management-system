{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nvar CORNER_PERCENT = 1 / 3;\n\nfunction getVHVPath(from, to) {\n  var points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT\n  });\n  points.push({\n    x: to.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT\n  });\n  points.push(to);\n  var path = [['M', from.x, from.y]];\n  each(points, function (point) {\n    path.push(['L', point.x, point.y]);\n  });\n  return path;\n}\n\nregisterShape('edge', 'vhv', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var points = cfg.points;\n    var path = this.parsePath(getVHVPath(points[0], points[1]));\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/edge/vhv.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,YAArB;AAIA,SAAS,aAAT,QAA8B,SAA9B;AACA,SAAS,QAAT,QAAyB,mBAAzB;AAEA,IAAM,cAAc,GAAG,IAAI,CAA3B;;AAEA,SAAS,UAAT,CAAoB,IAApB,EAAiC,EAAjC,EAA0C;AACxC,MAAM,MAAM,GAAG,EAAf;AACA,EAAA,MAAM,CAAC,IAAP,CAAY;AACV,IAAA,CAAC,EAAE,IAAI,CAAC,CADE;AAEV,IAAA,CAAC,EAAE,IAAI,CAAC,CAAL,IAAU,IAAI,cAAd,IAAgC,EAAE,CAAC,CAAH,GAAO;AAFhC,GAAZ;AAIA,EAAA,MAAM,CAAC,IAAP,CAAY;AACV,IAAA,CAAC,EAAE,EAAE,CAAC,CADI;AAEV,IAAA,CAAC,EAAE,IAAI,CAAC,CAAL,IAAU,IAAI,cAAd,IAAgC,EAAE,CAAC,CAAH,GAAO;AAFhC,GAAZ;AAIA,EAAA,MAAM,CAAC,IAAP,CAAY,EAAZ;AAEA,MAAM,IAAI,GAAG,CAAC,CAAC,GAAD,EAAM,IAAI,CAAC,CAAX,EAAc,IAAI,CAAC,CAAnB,CAAD,CAAb;AACA,EAAA,IAAI,CAAC,MAAD,EAAS,UAAC,KAAD,EAAM;AACjB,IAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,KAAK,CAAC,CAAZ,EAAe,KAAK,CAAC,CAArB,CAAV;AACD,GAFG,CAAJ;AAIA,SAAO,IAAP;AACD;;AAED,aAAa,CAAC,MAAD,EAAS,KAAT,EAAgB;AAC3B,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,WAAnB,CAAtB;AACA,QAAM,MAAM,GAAG,GAAG,CAAC,MAAnB;AACA,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,UAAU,CAAC,MAAM,CAAC,CAAD,CAAP,EAAqB,MAAM,CAAC,CAAD,CAA3B,CAAzB,CAAb;AACA,WAAO,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AAChC,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,QAAA,IAAI,EAAA;AADI,OADL;AAD2B,KAA3B,CAAP;AAMD,GAX0B;AAY3B,EAAA,SAAS,EAAT,UAAU,SAAV,EAAmC;AACjC,WAAO;AACL,MAAA,MAAM,EAAE,QADH;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,CAAC,EAAE,GADE;AAEL,QAAA,IAAI,EAAE,SAAS,CAAC;AAFX;AAFF,KAAP;AAOD;AApB0B,CAAhB,CAAb","sourcesContent":["import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nconst CORNER_PERCENT = 1 / 3;\n\nfunction getVHVPath(from: Point, to: Point) {\n  const points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push({\n    x: to.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push(to);\n\n  const path = [['M', from.x, from.y]];\n  each(points, (point) => {\n    path.push(['L', point.x, point.y]);\n  });\n\n  return path;\n}\n\nregisterShape('edge', 'vhv', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const points = cfg.points;\n    const path = this.parsePath(getVHVPath(points[0] as Point, points[1] as Point));\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}