{"ast":null,"code":"import { each, isArray, isString } from '@antv/util';\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nvar regexDot = /[^\\s,]+/gi;\nexport function parseRadius(radius) {\n  var r1 = 0;\n  var r2 = 0;\n  var r3 = 0;\n  var r4 = 0;\n\n  if (isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n\n  return {\n    r1: r1,\n    r2: r2,\n    r3: r3,\n    r4: r4\n  };\n}\nexport function parsePath(path) {\n  path = path || [];\n\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, function (item, index) {\n      item = item.match(regexDot);\n\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0);\n        item.splice(1, 0, item[0].substr(1));\n        item[0] = tag;\n      }\n\n      each(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          item[i] = +sub;\n        }\n      });\n      path[index] = item;\n    });\n    return path;\n  }\n}","map":{"version":3,"sources":["../../src/util/format.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,QAAwC,YAAxC;AAEA,IAAM,SAAS,GAAG,gCAAlB;AACA,IAAM,QAAQ,GAAG,WAAjB;AAEA,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAA4B;AAChC,MAAI,EAAE,GAAG,CAAT;AACA,MAAI,EAAE,GAAG,CAAT;AACA,MAAI,EAAE,GAAG,CAAT;AACA,MAAI,EAAE,GAAG,CAAT;;AACA,MAAI,OAAO,CAAC,MAAD,CAAX,EAAqB;AACnB,QAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,MAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAD,CAA1B;AACD,KAFD,MAEO,IAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AAC9B,MAAA,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAD,CAAhB;AACA,MAAA,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAD,CAAhB;AACD,KAHM,MAGA,IAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AAC9B,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACA,MAAA,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAD,CAAhB;AACA,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACD,KAJM,MAIA;AACL,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACA,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACA,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACA,MAAA,EAAE,GAAG,MAAM,CAAC,CAAD,CAAX;AACD;AACF,GAhBD,MAgBO;AACL,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,MAApB;AACD;;AACD,SAAO;AACL,IAAA,EAAE,EAAA,EADG;AAEL,IAAA,EAAE,EAAA,EAFG;AAGL,IAAA,EAAE,EAAA,EAHG;AAIL,IAAA,EAAE,EAAA;AAJG,GAAP;AAMD;AAED,OAAM,SAAU,SAAV,CAAoB,IAApB,EAAwB;AAC5B,EAAA,IAAI,GAAG,IAAI,IAAI,EAAf;;AACA,MAAI,OAAO,CAAC,IAAD,CAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;AAClB,IAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAP;AACA,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAO,KAAP,EAAY;AACrB,MAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAP;;AACA,UAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,GAAG,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAZ;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAlB;AACA,QAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV;AACD;;AACD,MAAA,IAAI,CAAC,IAAD,EAAO,UAAC,GAAD,EAAM,CAAN,EAAO;AAChB,YAAI,CAAC,KAAK,CAAC,GAAD,CAAV,EAAiB;AACf,UAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAC,GAAX;AACD;AACF,OAJG,CAAJ;AAKA,MAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,IAAd;AACD,KAbG,CAAJ;AAcA,WAAO,IAAP;AACD;AACF","sourceRoot":"","sourcesContent":["import { each, isArray, isString } from '@antv/util';\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nvar regexDot = /[^\\s,]+/gi;\nexport function parseRadius(radius) {\n    var r1 = 0;\n    var r2 = 0;\n    var r3 = 0;\n    var r4 = 0;\n    if (isArray(radius)) {\n        if (radius.length === 1) {\n            r1 = r2 = r3 = r4 = radius[0];\n        }\n        else if (radius.length === 2) {\n            r1 = r3 = radius[0];\n            r2 = r4 = radius[1];\n        }\n        else if (radius.length === 3) {\n            r1 = radius[0];\n            r2 = r4 = radius[1];\n            r3 = radius[2];\n        }\n        else {\n            r1 = radius[0];\n            r2 = radius[1];\n            r3 = radius[2];\n            r4 = radius[3];\n        }\n    }\n    else {\n        r1 = r2 = r3 = r4 = radius;\n    }\n    return {\n        r1: r1,\n        r2: r2,\n        r3: r3,\n        r4: r4,\n    };\n}\nexport function parsePath(path) {\n    path = path || [];\n    if (isArray(path)) {\n        return path;\n    }\n    if (isString(path)) {\n        path = path.match(regexTags);\n        each(path, function (item, index) {\n            item = item.match(regexDot);\n            if (item[0].length > 1) {\n                var tag = item[0].charAt(0);\n                item.splice(1, 0, item[0].substr(1));\n                item[0] = tag;\n            }\n            each(item, function (sub, i) {\n                if (!isNaN(sub)) {\n                    item[i] = +sub;\n                }\n            });\n            path[index] = item;\n        });\n        return path;\n    }\n}\n//# sourceMappingURL=format.js.map"]},"metadata":{},"sourceType":"module"}