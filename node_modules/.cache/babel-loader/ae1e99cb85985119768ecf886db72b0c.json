{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isEmpty, clamp } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getRectAttrs(points, size) {\n  var width = Math.abs(points[0].x - points[2].x);\n  var height = Math.abs(points[0].y - points[2].y);\n  var len = Math.min(width, height);\n\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n\n  len = len / 2;\n  var centerX = (points[0].x + points[2].x) / 2;\n  var centerY = (points[0].y + points[2].y) / 2;\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2\n  };\n}\n\nregisterShape('polygon', 'square', {\n  draw: function (cfg, container) {\n    if (!isEmpty(cfg.points)) {\n      var shapeAttrs = getStyle(cfg, true, true);\n      var points = this.parsePoints(cfg.points); // 转换为画布坐标\n\n      return container.addShape('rect', {\n        attrs: __assign(__assign({}, shapeAttrs), getRectAttrs(points, cfg.size)),\n        name: 'polygon'\n      });\n    }\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/polygon/square.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,KAAlB,QAA+B,YAA/B;AAIA,SAAS,aAAT,QAA8B,SAA9B;AACA,SAAS,QAAT,QAAyB,mBAAzB;;AAEA,SAAS,YAAT,CAAsB,MAAtB,EAAqC,IAArC,EAAiD;AAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,GAAc,MAAM,CAAC,CAAD,CAAN,CAAU,CAAjC,CAAd;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,GAAc,MAAM,CAAC,CAAD,CAAN,CAAU,CAAjC,CAAf;AAEA,MAAI,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,MAAhB,CAAV;;AACA,MAAI,IAAJ,EAAU;AACR,IAAA,GAAG,GAAG,KAAK,CAAC,IAAD,EAAO,CAAP,EAAU,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,MAAhB,CAAV,CAAX;AACD;;AACD,EAAA,GAAG,GAAG,GAAG,GAAG,CAAZ;AACA,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,GAAc,MAAM,CAAC,CAAD,CAAN,CAAU,CAAzB,IAA8B,CAA9C;AACA,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,GAAc,MAAM,CAAC,CAAD,CAAN,CAAU,CAAzB,IAA8B,CAA9C;AAEA,SAAO;AACL,IAAA,CAAC,EAAE,OAAO,GAAG,GADR;AAEL,IAAA,CAAC,EAAE,OAAO,GAAG,GAFR;AAGL,IAAA,KAAK,EAAE,GAAG,GAAG,CAHR;AAIL,IAAA,MAAM,EAAE,GAAG,GAAG;AAJT,GAAP;AAMD;;AAED,aAAa,CAAC,SAAD,EAAY,QAAZ,EAAsB;AACjC,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAL,CAAZ,EAA0B;AACxB,UAAM,UAAU,GAAG,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAA3B;AACA,UAAM,MAAM,GAAG,KAAK,WAAL,CAAiB,GAAG,CAAC,MAArB,CAAf,CAFwB,CAEqB;;AAC7C,aAAO,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AAChC,QAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,UADA,CAAA,EAEA,YAAY,CAAC,MAAD,EAAS,GAAG,CAAC,IAAb,CAFZ,CAD2B;AAKhC,QAAA,IAAI,EAAE;AAL0B,OAA3B,CAAP;AAOD;AACF,GAbgC;AAcjC,EAAA,SAAS,EAAT,UAAU,SAAV,EAAmC;AACzB,QAAA,KAAK,GAAK,SAAS,CAAd,KAAL;AACR,WAAO;AACL,MAAA,MAAM,EAAE,QADH;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,CAAC,EAAE,CADE;AAEL,QAAA,IAAI,EAAE;AAFD;AAFF,KAAP;AAOD;AAvBgC,CAAtB,CAAb","sourcesContent":["import { isEmpty, clamp } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getRectAttrs(points: any[], size: number) {\n  const width = Math.abs(points[0].x - points[2].x);\n  const height = Math.abs(points[0].y - points[2].y);\n\n  let len = Math.min(width, height);\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n  len = len / 2;\n  const centerX = (points[0].x + points[2].x) / 2;\n  const centerY = (points[0].y + points[2].y) / 2;\n\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2,\n  };\n}\n\nregisterShape('polygon', 'square', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    if (!isEmpty(cfg.points)) {\n      const shapeAttrs = getStyle(cfg, true, true);\n      const points = this.parsePoints(cfg.points); // 转换为画布坐标\n      return container.addShape('rect', {\n        attrs: {\n          ...shapeAttrs,\n          ...getRectAttrs(points, cfg.size), // 获取 rect 绘图信息\n        },\n        name: 'polygon',\n      });\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}