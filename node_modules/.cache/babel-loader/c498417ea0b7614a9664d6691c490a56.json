{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\n\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\n\nfunction handleUserMarkerStyle(markerStyle, style) {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n\n  return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\n\n\nfunction adpatorMarkerStyle(marker, color) {\n  var symbol = marker.symbol;\n\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    var markerStyle = get(marker, 'style', {});\n    var lineWidth = get(markerStyle, 'lineWidth', 1);\n    var stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, {\n      lineWidth: lineWidth,\n      stroke: stroke,\n      fill: null\n    });\n  }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\n\n\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\n\n\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\n\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick, index) {\n      var _a;\n\n      var text = tick.text,\n          scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue); // 通过过滤图例项的数据，来看是否 unchecked\n\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      }); // @ts-ignore\n\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      });\n      var markerCfg = userMarker;\n\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, __assign({\n          name: name,\n          value: value\n        }, deepMix({}, themeMarker, marker)));\n      } // the marker configure order should be ensure\n\n\n      marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n      adpatorMarkerStyle(marker, color);\n\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n\n  return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\n\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item, index) {\n    var markerCfg = userMarker;\n\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n\n    var marker = deepMix({}, themeMarker, markerCfg, item.marker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\n\nexport function getLegendThemeCfg(theme, direction) {\n  var legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}","map":{"version":3,"sources":["../../src/util/legend.ts"],"names":[],"mappings":"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","sourcesContent":["import { LegendMarkerCfg } from '@antv/component';\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, ShapeAttrs, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendCfg, LegendItem, MarkerCfg } from '../interface';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n\n/** 线条形 marker symbol */\nconst STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle: ShapeAttrs, style: MarkerCfg['style']): ShapeAttrs {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker: LegendMarkerCfg, color: string): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    const markerStyle = get(marker, 'style', {});\n    const lineWidth = get(markerStyle, 'lineWidth', 1);\n    const stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, { lineWidth, stroke, fill: null });\n  }\n}\n\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker: LegendMarkerCfg): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/** item of @antv/component legend  */\ntype ComponentLegendItem = Omit<LegendItem, 'marker'> & {\n  marker: any;\n};\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker: LegendCfg['marker'],\n): ComponentLegendItem[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick, index: number) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      let unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n      each(view.views, (subView) => {\n        if (!subView.filterFieldData(field, [{ [field]: value }]).length) {\n          unchecked = true;\n        }\n      });\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n\n      let markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, { name, value, ...deepMix({}, themeMarker, marker) })\n      }\n\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit({ ...markerCfg }, ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem, index: number) => {\n    let markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item))\n      }\n    const marker = deepMix({}, themeMarker, markerCfg, item.marker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme: object, direction: string): object {\n  const legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}