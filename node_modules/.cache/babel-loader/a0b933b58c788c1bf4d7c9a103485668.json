{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\n\nimport './shape/violin';\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\n\nvar Violin =\n/** @class */\nfunction (_super) {\n  __extends(Violin, _super);\n\n  function Violin() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'violin';\n    _this.shapeType = 'violin';\n    _this.generatePoints = true;\n    return _this;\n  }\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n\n\n  Violin.prototype.createShapePointsCfg = function (record) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, record); // 计算每个 shape 的 size\n\n\n    var size;\n    var sizeAttr = this.getAttribute('size');\n\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0]; // 归一化\n\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n\n      size = this.defaultSize;\n    }\n\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  };\n  /**\n   * @override\n   */\n\n\n  Violin.prototype.initAttributes = function () {\n    var attributeOption = this.attributeOption;\n    var sizeField = attributeOption.size ? attributeOption.size.fields[0] : this._sizeField ? this._sizeField : 'size';\n    this._sizeField = sizeField; // fixme 干啥要删掉\n\n    delete attributeOption.size;\n\n    _super.prototype.initAttributes.call(this);\n  };\n\n  return Violin;\n}(Geometry);\n\nexport default Violin;","map":{"version":3,"sources":["../../src/geometry/violin.ts"],"names":[],"mappings":";AAAA,SAAS,GAAT,QAAoB,YAApB;AACA,SAAS,YAAT,QAA6B,aAA7B;AAEA,SAAS,mBAAT,QAAoC,oBAApC;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,OAAO,QAAP,MAAqB,QAArB;AACA;;AACA,OAAO,gBAAP;AAEA;;;AAGG;;AACH,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,MAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACkB,IAAA,KAAA,CAAA,IAAA,GAAe,QAAf;AACA,IAAA,KAAA,CAAA,SAAA,GAAoB,QAApB;AACN,IAAA,KAAA,CAAA,cAAA,GAA0B,IAA1B;;AA+CX;AA3CC;;;;AAIG;;;AACO,EAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,UAA+B,MAA/B,EAA4C;AAC1C,QAAM,GAAG,GAAG,MAAA,CAAA,SAAA,CAAM,oBAAN,CAA0B,IAA1B,CAA0B,IAA1B,EAA2B,MAA3B,CAAZ,CAD0C,CAG1C;;;AACA,QAAI,IAAJ;AACA,QAAM,QAAQ,GAAG,KAAK,YAAL,CAAkB,MAAlB,CAAjB;;AACA,QAAI,QAAJ,EAAc;AACZ,MAAA,IAAI,GAAG,KAAK,kBAAL,CAAwB,QAAxB,EAAkC,MAAlC,EAA0C,CAA1C,CAAP,CADY,CAEZ;;AACA,UAAM,UAAU,GAAG,KAAK,UAAxB;AACA,UAAM,eAAe,GAAG,mBAAmB,CAAC,UAAD,CAA3C;AACA,MAAA,IAAI,GAAG,IAAI,GAAG,eAAd;AACD,KAND,MAMO;AACL,UAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,aAAK,WAAL,GAAmB,cAAc,CAAC,IAAD,CAAjC;AACD;;AACD,MAAA,IAAI,GAAG,KAAK,WAAZ;AACD;;AACD,IAAA,GAAG,CAAC,IAAJ,GAAW,IAAX;AACA,IAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAM,CAAC,YAAD,CAAP,EAAuB,CAAC,KAAK,UAAN,CAAvB,CAAf;AACA,WAAO,GAAP;AACD,GArBS;AAuBV;;AAEG;;;AACO,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA,GAAV,YAAA;AACU,QAAA,eAAe,GAAK,KAAL,eAAf;AACR,QAAM,SAAS,GAAG,eAAe,CAAC,IAAhB,GACd,eAAe,CAAC,IAAhB,CAAqB,MAArB,CAA4B,CAA5B,CADc,GAEd,KAAK,UAAL,GACA,KAAK,UADL,GAEA,MAJJ;AAKA,SAAK,UAAL,GAAkB,SAAlB,CAPF,CAQE;;AACA,WAAO,eAAe,CAAC,IAAvB;;AACA,IAAA,MAAA,CAAA,SAAA,CAAM,cAAN,CAAoB,IAApB,CAAoB,IAApB;AACD,GAXS;;AAYZ,SAAA,MAAA;AAAC,CAlDD,CAAoC,QAApC,CAAA","sourcesContent":["import { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Datum, ViolinShapePoint } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nexport default class Violin extends Geometry<ViolinShapePoint> {\n  public readonly type: string = 'violin';\n  public readonly shapeType: string = 'violin';\n  protected generatePoints: boolean = true;\n  /** size 私有映射字段 */\n  private _sizeField: string;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  protected createShapePointsCfg(record: Datum) {\n    const cfg = super.createShapePointsCfg(record);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  }\n\n  /**\n   * @override\n   */\n  protected initAttributes() {\n    const { attributeOption } = this;\n    const sizeField = attributeOption.size\n      ? attributeOption.size.fields[0]\n      : this._sizeField\n      ? this._sizeField\n      : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    super.initAttributes();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}