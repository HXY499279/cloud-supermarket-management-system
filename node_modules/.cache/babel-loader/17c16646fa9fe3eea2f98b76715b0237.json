{"ast":null,"code":"import { each, pick } from '@antv/util';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../..//util/text';\nimport { translate } from '../../../util/transform';\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\n\nexport function limitInPlot(items, labels, shapes, region, cfg) {\n  if (labels.length <= 0) {\n    return;\n  }\n\n  var direction = (cfg === null || cfg === void 0 ? void 0 : cfg.direction) || ['top', 'right', 'bottom', 'left'];\n  var action = (cfg === null || cfg === void 0 ? void 0 : cfg.action) || 'translate';\n  var margin = (cfg === null || cfg === void 0 ? void 0 : cfg.margin) || 0;\n  var coordinate = labels[0].get('coordinate');\n\n  if (!coordinate) {\n    return;\n  }\n\n  var _a = getCoordinateBBox(coordinate, margin),\n      regionMinX = _a.minX,\n      regionMinY = _a.minY,\n      regionMaxX = _a.maxX,\n      regionMaxY = _a.maxY;\n\n  each(labels, function (label) {\n    var _a = label.getCanvasBBox(),\n        minX = _a.minX,\n        minY = _a.minY,\n        maxX = _a.maxX,\n        maxY = _a.maxY,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n\n    var finalX = x;\n    var finalY = y;\n\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n\n    if (finalX !== x || finalY !== y) {\n      var translateX_1 = finalX - x;\n\n      if (action === 'translate') {\n        translate(label, translateX_1, finalY - y);\n      } else if (action === 'ellipsis') {\n        var textShapes = label.findAll(function (shape) {\n          return shape.get('type') === 'text';\n        });\n        textShapes.forEach(function (textShape) {\n          var style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          var textBox = textShape.getCanvasBBox();\n          var text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX_1), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/label/layout/limit-in-plot.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, pick } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../..//util/text';\nimport { translate } from '../../../util/transform';\nimport { LabelItem } from '../interface';\n\n/** limitInPlot layout 的可选配置 */\nexport interface LimitInPlotLayoutCfg {\n  /** 需要限制哪些方向上不能超过 Plot 范围，默认四个方向上都限制 */\n  direction?: ('top' | 'right' | 'bottom' | 'left')[];\n  /** 可以允许的 margin */\n  margin?: number;\n  /** 超过限制后的动作，默认 translate 移动位置; ellipsis 对 text 进行省略展示 */\n  action?: 'hide' | 'translate' | 'ellipsis';\n}\n\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\nexport function limitInPlot(\n  items: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox,\n  cfg?: LimitInPlotLayoutCfg\n) {\n  if (labels.length <= 0) {\n    return;\n  }\n  const direction = cfg?.direction || ['top', 'right', 'bottom', 'left'];\n  const action = cfg?.action || 'translate';\n  const margin = cfg?.margin || 0;\n  const coordinate = labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  const { minX: regionMinX, minY: regionMinY, maxX: regionMaxX, maxY: regionMaxY } = getCoordinateBBox(\n    coordinate,\n    margin\n  );\n\n  each(labels, (label: IGroup) => {\n    const { minX, minY, maxX, maxY, x, y, width, height } = label.getCanvasBBox();\n\n    let finalX = x;\n    let finalY = y;\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n\n    if (finalX !== x || finalY !== y) {\n      const translateX = finalX - x;\n      if (action === 'translate') {\n        translate(label, translateX, finalY - y);\n      } else if (action === 'ellipsis') {\n        const textShapes = label.findAll((shape) => shape.get('type') === 'text');\n        textShapes.forEach((textShape) => {\n          const style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          const textBox = textShape.getCanvasBBox();\n          const text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}