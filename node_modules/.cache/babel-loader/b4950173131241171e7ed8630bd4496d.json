{"ast":null,"code":"import { doScaleAnimate } from './util';\n/**\n * @ignore\n * 入场动画\n * x 方向的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function growInX(element, animateCfg, cfg) {\n  var coordinate = cfg.coordinate,\n      minYPoint = cfg.minYPoint;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'x');\n}\n/**\n * @ignore\n * 入场动画\n * y 轴方向上的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function growInY(element, animateCfg, cfg) {\n  var coordinate = cfg.coordinate,\n      minYPoint = cfg.minYPoint;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'y');\n}\n/**\n * @ignore\n * 入场\n * 中心点的向四周的生长动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function growInXY(element, animateCfg, cfg) {\n  var coordinate = cfg.coordinate,\n      minYPoint = cfg.minYPoint;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'xy');\n}","map":{"version":3,"sources":["../../../src/animate/animation/grow-in.ts"],"names":[],"mappings":"AAIA,SAAS,cAAT,QAA+B,QAA/B;AAEA;;;;;;;AAOG;;AACH,OAAM,SAAU,OAAV,CAAkB,OAAlB,EAA4C,UAA5C,EAAqE,GAArE,EAAyF;AACrF,MAAA,UAAU,GAAgB,GAAG,CAAnB,UAAV;AAAA,MAAY,SAAS,GAAK,GAAG,CAAR,SAArB;AACR,EAAA,cAAc,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,GAA7C,CAAd;AACD;AAED;;;;;;;AAOG;;AACH,OAAM,SAAU,OAAV,CAAkB,OAAlB,EAA4C,UAA5C,EAAqE,GAArE,EAAyF;AACrF,MAAA,UAAU,GAAgB,GAAG,CAAnB,UAAV;AAAA,MAAY,SAAS,GAAK,GAAG,CAAR,SAArB;AACR,EAAA,cAAc,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,GAA7C,CAAd;AACD;AAED;;;;;;;AAOG;;AACH,OAAM,SAAU,QAAV,CAAmB,OAAnB,EAA6C,UAA7C,EAAsE,GAAtE,EAA0F;AACtF,MAAA,UAAU,GAAgB,GAAG,CAAnB,UAAV;AAAA,MAAY,SAAS,GAAK,GAAG,CAAR,SAArB;AACR,EAAA,cAAc,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,IAA7C,CAAd;AACD","sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nimport { doScaleAnimate } from './util';\n\n/**\n * @ignore\n * 入场动画\n * x 方向的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInX(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'x');\n}\n\n/**\n * @ignore\n * 入场动画\n * y 轴方向上的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'y');\n}\n\n/**\n * @ignore\n * 入场\n * 中心点的向四周的生长动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInXY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'xy');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}