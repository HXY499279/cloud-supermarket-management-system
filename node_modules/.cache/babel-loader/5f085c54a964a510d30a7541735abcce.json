{"ast":null,"code":"/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\nexport var VERSION = '4.1.18'; // 核心基类导出\n\nexport { Chart, View, Event } from './chart'; // Chart, View 类\n\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\n\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\n\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\n\nexport { default as Element } from './geometry/element'; // Element 类\n\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\n\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\n\nexport { Facet } from './facet'; // Facet 基类\n\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n// 注册 ComponentController\n\nexport { registerComponentController } from './chart'; // 注册 Geometry\n\nexport { registerGeometry } from './chart'; // 注册 Geometry Shape\n\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base'; // 注册 Geometry label 以及 Geometry Label 布局函数\n\nexport { registerGeometryLabel, registerGeometryLabelLayout, getGeometryLabel, getGeometryLabelLayout } from './geometry/label'; // 注册 interaction\n\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction'; // 注册 facet\n\nexport { getFacet, registerFacet } from './facet'; // 注册主题\n\nexport { getTheme, registerTheme } from './theme'; // G engine 管理相关\n\nexport { registerEngine, getEngine } from './engine'; // 注册动画函数\n\nexport { registerAnimation, getAnimation } from './animate/animation';\nexport { LAYER, DIRECTION } from './constant'; // 因为 typescript 部分版本不支持 export * as 语法。\n\nimport * as Types from './interface';\nexport { Coordinate, Scale } from './dependents'; // 一些工具方法导出\n\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nexport var Util = {\n  getLegendItems: getLegendItems,\n  translate: translate,\n  rotate: rotate,\n  zoom: zoom,\n  transform: transform,\n  getAngle: getAngle,\n  getSectorPath: getSectorPath,\n  polarToCartesian: polarToCartesian,\n  getDelegationObject: getDelegationObject,\n  getTooltipItems: getTooltipItems\n};","map":{"version":3,"sources":["../src/core.ts"],"names":[],"mappings":"AAAA;AAEA,OAAO,IAAM,OAAO,GAAG,QAAhB,C,CAEP;;AACA,SAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,QAAmC,SAAnC,C,CAA8C;;AAC9C,SAAS,UAAU,IAAI,mBAAvB,QAAkD,yBAAlD,C,CAA6E;;AAC7E,SAAS,OAAO,IAAI,iBAApB,QAA6C,4BAA7C,C,CAA2E;;AAC3E,SAAS,OAAO,IAAI,QAApB,QAAoC,iBAApC,C,CAAuD;;AACvD,SAAS,OAAO,IAAI,OAApB,QAAmC,oBAAnC,C,CAAyD;;AACzD,SAAS,OAAO,IAAI,aAApB,QAAyC,uBAAzC,C,CAAkE;;AAClE,SAAS,WAAT,EAAsB,MAAtB,QAAoC,eAApC,C,CAAqD;;AACrD,SAAS,KAAT,QAAsB,SAAtB,C,CAAiC;;AACjC,SAAS,OAAO,IAAI,iBAApB,QAA6C,2BAA7C,C,CAA0E;AAE1E;;AACA,SAAS,2BAAT,QAA4C,SAA5C,C,CAEA;;AACA,SAAS,gBAAT,QAAiC,SAAjC,C,CAEA;;AACA,SAAS,aAAT,EAAwB,oBAAxB,EAA8C,eAA9C,QAAqE,uBAArE,C,CAEA;;AACA,SACE,qBADF,EAEE,2BAFF,EAGE,gBAHF,EAIE,sBAJF,QAKO,kBALP,C,CAOA;;AACA,SAAS,cAAT,EAAyB,mBAAzB,EAA8C,cAA9C,EAA8D,cAA9D,QAAoF,eAApF,C,CAEA;;AACA,SAAS,QAAT,EAAmB,aAAnB,QAAwC,SAAxC,C,CAEA;;AACA,SAAS,QAAT,EAAmB,aAAnB,QAAwC,SAAxC,C,CAEA;;AACA,SAAS,cAAT,EAAyB,SAAzB,QAA0C,UAA1C,C,CAEA;;AACA,SAAS,iBAAT,EAA4B,YAA5B,QAAgD,qBAAhD;AAEA,SAAS,KAAT,EAAgB,SAAhB,QAAiC,YAAjC,C,CAEA;;AACA,OAAO,KAAK,KAAZ,MAAuB,aAAvB;AAGA,SAA6B,UAA7B,EAAyC,KAAzC,QAAmE,cAAnE,C,CAEA;;AACA,SAAS,cAAT,QAA+B,eAA/B;AACA,SAAS,QAAT,EAAmB,aAAnB,EAAkC,gBAAlC,QAA0D,iBAA1D;AACA,SAAS,MAAT,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,IAAvC,QAAmD,kBAAnD;AACA,SAAS,eAAT,QAAgC,gBAAhC;AACA,SAAS,mBAAT,QAAoC,2BAApC;AACA,OAAO,IAAM,IAAI,GAAG;AAClB,EAAA,cAAc,EAAA,cADI;AAElB,EAAA,SAAS,EAAA,SAFS;AAGlB,EAAA,MAAM,EAAA,MAHY;AAIlB,EAAA,IAAI,EAAA,IAJc;AAKlB,EAAA,SAAS,EAAA,SALS;AAMlB,EAAA,QAAQ,EAAA,QANU;AAOlB,EAAA,aAAa,EAAA,aAPK;AAQlB,EAAA,gBAAgB,EAAA,gBARE;AASlB,EAAA,mBAAmB,EAAA,mBATD;AAUlB,EAAA,eAAe,EAAA;AAVG,CAAb","sourcesContent":["/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\n\nexport const VERSION = '4.1.18';\n\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport {\n  registerGeometryLabel,\n  registerGeometryLabelLayout,\n  getGeometryLabel,\n  getGeometryLabelLayout,\n} from './geometry/label';\n\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\n\nexport { LAYER, DIRECTION } from './constant';\n\n// 因为 typescript 部分版本不支持 export * as 语法。\nimport * as Types from './interface';\nexport type { Types };\n\nexport { IGroup, ShapeAttrs, Coordinate, Scale, ScaleConfig } from './dependents';\n\n// 一些工具方法导出\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nexport const Util = {\n  getLegendItems,\n  translate,\n  rotate,\n  zoom,\n  transform,\n  getAngle,\n  getSectorPath,\n  polarToCartesian,\n  getDelegationObject,\n  getTooltipItems,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}