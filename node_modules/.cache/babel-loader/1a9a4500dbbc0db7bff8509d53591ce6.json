{"ast":null,"code":"// 检测各边是否超出\nexport function getOutSides(x, y, width, height, limitBox) {\n  var hits = {\n    left: x < limitBox.x,\n    right: x + width > limitBox.x + limitBox.width,\n    top: y < limitBox.y,\n    bottom: y + height > limitBox.y + limitBox.height\n  };\n  return hits;\n}\nexport function getPointByPosition(x, y, offset, width, height, position) {\n  var px = x;\n  var py = y;\n\n  switch (position) {\n    case 'left':\n      // left center\n      px = x - width - offset;\n      py = y - height / 2;\n      break;\n\n    case 'right':\n      px = x + offset;\n      py = y - height / 2;\n      break;\n\n    case 'top':\n      px = x - width / 2;\n      py = y - height - offset;\n      break;\n\n    case 'bottom':\n      // bottom\n      px = x - width / 2;\n      py = y + offset;\n      break;\n\n    default:\n      // auto, 在 top-right\n      px = x + offset;\n      py = y - height - offset;\n      break;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n}\nexport function getAlignPoint(x, y, offset, width, height, position, limitBox) {\n  var point = getPointByPosition(x, y, offset, width, height, position);\n\n  if (limitBox) {\n    var outSides = getOutSides(point.x, point.y, width, height, limitBox);\n\n    if (position === 'auto') {\n      // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可\n      if (outSides.right) {\n        point.x = Math.max(0, x - width - offset);\n      }\n\n      if (outSides.top) {\n        point.y = Math.max(0, y - height - offset);\n      }\n    } else if (position === 'top' || position === 'bottom') {\n      if (outSides.left) {\n        // 左侧躲避\n        point.x = limitBox.x;\n      }\n\n      if (outSides.right) {\n        // 右侧躲避\n        point.x = limitBox.x + limitBox.width - width;\n      }\n\n      if (position === 'top' && outSides.top) {\n        // 如果上面对齐检测上面，不检测下面\n        point.y = y + offset;\n      }\n\n      if (position === 'bottom' && outSides.bottom) {\n        point.y = y - height - offset;\n      }\n    } else {\n      // 检测左右位置\n      if (outSides.top) {\n        point.y = limitBox.y;\n      }\n\n      if (outSides.bottom) {\n        point.y = limitBox.y + limitBox.height - height;\n      }\n\n      if (position === 'left' && outSides.left) {\n        point.x = x + offset;\n      }\n\n      if (position === 'right' && outSides.right) {\n        point.x = x - width - offset;\n      }\n    }\n  }\n\n  return point;\n}","map":{"version":3,"sources":["../../src/util/align.ts"],"names":[],"mappings":"AASA;AACA,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAAiC,CAAjC,EAA4C,KAA5C,EAA2D,MAA3D,EAA2E,QAA3E,EAAyF;AAC7F,MAAM,IAAI,GAAG;AACX,IAAA,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,CADR;AAEX,IAAA,KAAK,EAAE,CAAC,GAAG,KAAJ,GAAY,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC,KAF9B;AAGX,IAAA,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC,CAHP;AAIX,IAAA,MAAM,EAAE,CAAC,GAAG,MAAJ,GAAa,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC;AAJhC,GAAb;AAMA,SAAO,IAAP;AACD;AAED,OAAM,SAAU,kBAAV,CACJ,CADI,EAEJ,CAFI,EAGJ,MAHI,EAIJ,KAJI,EAKJ,MALI,EAMJ,QANI,EAMY;AAEhB,MAAI,EAAE,GAAG,CAAT;AACA,MAAI,EAAE,GAAG,CAAT;;AACA,UAAQ,QAAR;AACE,SAAK,MAAL;AAAa;AACX,MAAA,EAAE,GAAG,CAAC,GAAG,KAAJ,GAAY,MAAjB;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,CAAlB;AACA;;AACF,SAAK,OAAL;AACE,MAAA,EAAE,GAAG,CAAC,GAAG,MAAT;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,CAAlB;AACA;;AACF,SAAK,KAAL;AACE,MAAA,EAAE,GAAG,CAAC,GAAG,KAAK,GAAG,CAAjB;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAJ,GAAa,MAAlB;AACA;;AACF,SAAK,QAAL;AACE;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,KAAK,GAAG,CAAjB;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAT;AACA;;AACF;AACE;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAT;AACA,MAAA,EAAE,GAAG,CAAC,GAAG,MAAJ,GAAa,MAAlB;AACA;AAtBJ;;AAyBA,SAAO;AACL,IAAA,CAAC,EAAE,EADE;AAEL,IAAA,CAAC,EAAE;AAFE,GAAP;AAID;AAED,OAAM,SAAU,aAAV,CACJ,CADI,EAEJ,CAFI,EAGJ,MAHI,EAIJ,KAJI,EAKJ,MALI,EAMJ,QANI,EAOJ,QAPI,EAOW;AAEf,MAAM,KAAK,GAAG,kBAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,EAAe,KAAf,EAAsB,MAAtB,EAA8B,QAA9B,CAAhC;;AACA,MAAI,QAAJ,EAAc;AACZ,QAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,CAAP,EAAU,KAAK,CAAC,CAAhB,EAAmB,KAAnB,EAA0B,MAA1B,EAAkC,QAAlC,CAA5B;;AACA,QAAI,QAAQ,KAAK,MAAjB,EAAyB;AACvB;AACA,UAAI,QAAQ,CAAC,KAAb,EAAoB;AAClB,QAAA,KAAK,CAAC,CAAN,GAAU,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,GAAG,KAAJ,GAAY,MAAxB,CAAV;AACD;;AACD,UAAI,QAAQ,CAAC,GAAb,EAAkB;AAChB,QAAA,KAAK,CAAC,CAAN,GAAU,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,GAAG,MAAJ,GAAa,MAAzB,CAAV;AACD;AACF,KARD,MAQO,IAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,KAAK,QAAvC,EAAiD;AACtD,UAAI,QAAQ,CAAC,IAAb,EAAmB;AACjB;AACA,QAAA,KAAK,CAAC,CAAN,GAAU,QAAQ,CAAC,CAAnB;AACD;;AACD,UAAI,QAAQ,CAAC,KAAb,EAAoB;AAClB;AACA,QAAA,KAAK,CAAC,CAAN,GAAU,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC,KAAtB,GAA8B,KAAxC;AACD;;AACD,UAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,CAAC,GAAnC,EAAwC;AACtC;AACA,QAAA,KAAK,CAAC,CAAN,GAAU,CAAC,GAAG,MAAd;AACD;;AACD,UAAI,QAAQ,KAAK,QAAb,IAAyB,QAAQ,CAAC,MAAtC,EAA8C;AAC5C,QAAA,KAAK,CAAC,CAAN,GAAU,CAAC,GAAG,MAAJ,GAAa,MAAvB;AACD;AACF,KAhBM,MAgBA;AACL;AACA,UAAI,QAAQ,CAAC,GAAb,EAAkB;AAChB,QAAA,KAAK,CAAC,CAAN,GAAU,QAAQ,CAAC,CAAnB;AACD;;AACD,UAAI,QAAQ,CAAC,MAAb,EAAqB;AACnB,QAAA,KAAK,CAAC,CAAN,GAAU,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC,MAAtB,GAA+B,MAAzC;AACD;;AACD,UAAI,QAAQ,KAAK,MAAb,IAAuB,QAAQ,CAAC,IAApC,EAA0C;AACxC,QAAA,KAAK,CAAC,CAAN,GAAU,CAAC,GAAG,MAAd;AACD;;AACD,UAAI,QAAQ,KAAK,OAAb,IAAwB,QAAQ,CAAC,KAArC,EAA4C;AAC1C,QAAA,KAAK,CAAC,CAAN,GAAU,CAAC,GAAG,KAAJ,GAAY,MAAtB;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["// 检测各边是否超出\nexport function getOutSides(x, y, width, height, limitBox) {\n    var hits = {\n        left: x < limitBox.x,\n        right: x + width > limitBox.x + limitBox.width,\n        top: y < limitBox.y,\n        bottom: y + height > limitBox.y + limitBox.height,\n    };\n    return hits;\n}\nexport function getPointByPosition(x, y, offset, width, height, position) {\n    var px = x;\n    var py = y;\n    switch (position) {\n        case 'left': // left center\n            px = x - width - offset;\n            py = y - height / 2;\n            break;\n        case 'right':\n            px = x + offset;\n            py = y - height / 2;\n            break;\n        case 'top':\n            px = x - width / 2;\n            py = y - height - offset;\n            break;\n        case 'bottom':\n            // bottom\n            px = x - width / 2;\n            py = y + offset;\n            break;\n        default:\n            // auto, 在 top-right\n            px = x + offset;\n            py = y - height - offset;\n            break;\n    }\n    return {\n        x: px,\n        y: py,\n    };\n}\nexport function getAlignPoint(x, y, offset, width, height, position, limitBox) {\n    var point = getPointByPosition(x, y, offset, width, height, position);\n    if (limitBox) {\n        var outSides = getOutSides(point.x, point.y, width, height, limitBox);\n        if (position === 'auto') {\n            // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可\n            if (outSides.right) {\n                point.x = Math.max(0, x - width - offset);\n            }\n            if (outSides.top) {\n                point.y = Math.max(0, y - height - offset);\n            }\n        }\n        else if (position === 'top' || position === 'bottom') {\n            if (outSides.left) {\n                // 左侧躲避\n                point.x = limitBox.x;\n            }\n            if (outSides.right) {\n                // 右侧躲避\n                point.x = limitBox.x + limitBox.width - width;\n            }\n            if (position === 'top' && outSides.top) {\n                // 如果上面对齐检测上面，不检测下面\n                point.y = y + offset;\n            }\n            if (position === 'bottom' && outSides.bottom) {\n                point.y = y - height - offset;\n            }\n        }\n        else {\n            // 检测左右位置\n            if (outSides.top) {\n                point.y = limitBox.y;\n            }\n            if (outSides.bottom) {\n                point.y = limitBox.y + limitBox.height - height;\n            }\n            if (position === 'left' && outSides.left) {\n                point.x = x + offset;\n            }\n            if (position === 'right' && outSides.right) {\n                point.x = x - width - offset;\n            }\n        }\n    }\n    return point;\n}\n//# sourceMappingURL=align.js.map"]},"metadata":{},"sourceType":"module"}