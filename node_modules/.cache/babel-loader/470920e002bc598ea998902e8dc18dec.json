{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { calBase } from '../util/math';\nimport Continuous from './base';\n/**\n * Pow 度量，处理非均匀分布\n */\n\nvar Pow =\n/** @class */\nfunction (_super) {\n  __extends(Pow, _super);\n\n  function Pow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'pow';\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  Pow.prototype.invert = function (value) {\n    var percent = this.getInvertPercent(value);\n    var exponent = this.exponent;\n    var max = calBase(exponent, this.max);\n    var min = calBase(exponent, this.min);\n    var tmp = percent * (max - min) + min;\n    var factor = tmp >= 0 ? 1 : -1;\n    return Math.pow(tmp, exponent) * factor;\n  };\n\n  Pow.prototype.initCfg = function () {\n    this.tickMethod = 'pow';\n    this.exponent = 2;\n    this.tickCount = 5;\n    this.nice = true;\n  }; // 获取度量计算时，value占的定义域百分比\n\n\n  Pow.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    }\n\n    var exponent = this.exponent;\n    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n    return percent;\n  };\n\n  return Pow;\n}(Continuous);\n\nexport default Pow;","map":{"version":3,"sources":["../../src/continuous/pow.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,cAAxB;AACA,OAAO,UAAP,MAAuB,QAAvB;AAEA;;AAEG;;AACH,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAlB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACkB,IAAA,KAAA,CAAA,IAAA,GAAe,KAAf;;AAsCjB;AAhCC;;AAEG;;;AACI,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAA2B;AACzB,QAAM,OAAO,GAAG,KAAK,gBAAL,CAAsB,KAAtB,CAAhB;AACA,QAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,QAAM,GAAG,GAAG,OAAO,CAAC,QAAD,EAAW,KAAK,GAAhB,CAAnB;AACA,QAAM,GAAG,GAAG,OAAO,CAAC,QAAD,EAAW,KAAK,GAAhB,CAAnB;AACA,QAAM,GAAG,GAAG,OAAO,IAAI,GAAG,GAAG,GAAV,CAAP,GAAwB,GAApC;AACA,QAAM,MAAM,GAAG,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAA/B;AACA,WAAO,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,QAAd,IAA0B,MAAjC;AACD,GARM;;AAUG,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,GAAV,YAAA;AACE,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,QAAL,GAAgB,CAAhB;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,IAAL,GAAY,IAAZ;AACD,GALS,CApBZ,CA2BE;;;AACU,EAAA,GAAA,CAAA,SAAA,CAAA,eAAA,GAAV,UAA0B,KAA1B,EAAuC;AACrC,QAAM,GAAG,GAAG,KAAK,GAAjB;AACA,QAAM,GAAG,GAAG,KAAK,GAAjB;;AACA,QAAI,GAAG,KAAK,GAAZ,EAAiB;AACf,aAAO,CAAP;AACD;;AACD,QAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,QAAM,OAAO,GACX,CAAC,OAAO,CAAC,QAAD,EAAW,KAAX,CAAP,GAA2B,OAAO,CAAC,QAAD,EAAW,GAAX,CAAnC,KAAuD,OAAO,CAAC,QAAD,EAAW,GAAX,CAAP,GAAyB,OAAO,CAAC,QAAD,EAAW,GAAX,CAAvF,CADF;AAEA,WAAO,OAAP;AACD,GAVS;;AAWZ,SAAA,GAAA;AAAC,CAvCD,CAAkB,UAAlB,CAAA;;AAyCA,eAAe,GAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { calBase } from '../util/math';\nimport Continuous from './base';\n/**\n * Pow 度量，处理非均匀分布\n */\nvar Pow = /** @class */ (function (_super) {\n    __extends(Pow, _super);\n    function Pow() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'pow';\n        return _this;\n    }\n    /**\n     * @override\n     */\n    Pow.prototype.invert = function (value) {\n        var percent = this.getInvertPercent(value);\n        var exponent = this.exponent;\n        var max = calBase(exponent, this.max);\n        var min = calBase(exponent, this.min);\n        var tmp = percent * (max - min) + min;\n        var factor = tmp >= 0 ? 1 : -1;\n        return Math.pow(tmp, exponent) * factor;\n    };\n    Pow.prototype.initCfg = function () {\n        this.tickMethod = 'pow';\n        this.exponent = 2;\n        this.tickCount = 5;\n        this.nice = true;\n    };\n    // 获取度量计算时，value占的定义域百分比\n    Pow.prototype.getScalePercent = function (value) {\n        var max = this.max;\n        var min = this.min;\n        if (max === min) {\n            return 0;\n        }\n        var exponent = this.exponent;\n        var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n        return percent;\n    };\n    return Pow;\n}(Continuous));\nexport default Pow;\n//# sourceMappingURL=pow.js.map"]},"metadata":{},"sourceType":"module"}