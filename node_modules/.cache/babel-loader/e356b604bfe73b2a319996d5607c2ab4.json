{"ast":null,"code":"/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging'\n}; // for FireFox\n\nvar BASELINE_MAP_FOR_FIREFOX = {\n  top: 'text-before-edge',\n  middle: 'central',\n  bottom: 'text-after-edge',\n  alphabetic: 'alphabetic',\n  hanging: 'hanging'\n};\nvar ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end'\n};\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'text';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  };\n\n  Text.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n\n    var attrs = this.attr();\n    var el = this.get('el');\n\n    this._setFont();\n\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'text') {\n        _this._setText(\"\" + value);\n      } else if (attr === 'matrix' && value) {\n        setTransform(_this);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    el.setAttribute('paint-order', 'stroke');\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n  };\n\n  Text.prototype._setFont = function () {\n    var el = this.get('el');\n\n    var _a = this.attr(),\n        textBaseline = _a.textBaseline,\n        textAlign = _a.textAlign;\n\n    var browser = detect();\n\n    if (browser && browser.name === 'firefox') {\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n    } else {\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n    }\n\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n  };\n\n  Text.prototype._setText = function (text) {\n    var el = this.get('el');\n\n    var _a = this.attr(),\n        x = _a.x,\n        _b = _a.textBaseline,\n        baseline = _b === void 0 ? 'bottom' : _b;\n\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      var textArr = text.split('\\n');\n      var textLen_1 = textArr.length - 1;\n      var arr_1 = '';\n      each(textArr, function (segment, i) {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'top') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'middle') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'bottom') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'hanging') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          }\n        } else {\n          arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n        }\n      });\n      el.innerHTML = arr_1;\n    } else {\n      el.innerHTML = text;\n    }\n  };\n\n  return Text;\n}(ShapeBase);\n\nexport default Text;","map":{"version":3,"sources":["../../src/shape/text.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n    top: 'before-edge',\n    middle: 'central',\n    bottom: 'after-edge',\n    alphabetic: 'baseline',\n    hanging: 'hanging',\n};\n// for FireFox\nvar BASELINE_MAP_FOR_FIREFOX = {\n    top: 'text-before-edge',\n    middle: 'central',\n    bottom: 'text-after-edge',\n    alphabetic: 'alphabetic',\n    hanging: 'hanging',\n};\nvar ANCHOR_MAP = {\n    left: 'left',\n    start: 'left',\n    center: 'middle',\n    right: 'end',\n    end: 'end',\n};\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'text';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Text.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, text: null, fontSize: 12, fontFamily: 'sans-serif', fontStyle: 'normal', fontWeight: 'normal', fontVariant: 'normal', textAlign: 'start', textBaseline: 'bottom' });\n    };\n    Text.prototype.createPath = function (context, targetAttrs) {\n        var _this = this;\n        var attrs = this.attr();\n        var el = this.get('el');\n        this._setFont();\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'text') {\n                _this._setText(\"\" + value);\n            }\n            else if (attr === 'matrix' && value) {\n                setTransform(_this);\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n        el.setAttribute('paint-order', 'stroke');\n        el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n    };\n    Text.prototype._setFont = function () {\n        var el = this.get('el');\n        var _a = this.attr(), textBaseline = _a.textBaseline, textAlign = _a.textAlign;\n        var browser = detect();\n        if (browser && browser.name === 'firefox') {\n            // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n            el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n        }\n        else {\n            el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n        }\n        el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n    };\n    Text.prototype._setText = function (text) {\n        var el = this.get('el');\n        var _a = this.attr(), x = _a.x, _b = _a.textBaseline, baseline = _b === void 0 ? 'bottom' : _b;\n        if (!text) {\n            el.innerHTML = '';\n        }\n        else if (~text.indexOf('\\n')) {\n            var textArr = text.split('\\n');\n            var textLen_1 = textArr.length - 1;\n            var arr_1 = '';\n            each(textArr, function (segment, i) {\n                if (i === 0) {\n                    if (baseline === 'alphabetic') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'top') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'middle') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'bottom') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'hanging') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                }\n                else {\n                    arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n                }\n            });\n            el.innerHTML = arr_1;\n        }\n        else {\n            el.innerHTML = text;\n        }\n    };\n    return Text;\n}(ShapeBase));\nexport default Text;\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}