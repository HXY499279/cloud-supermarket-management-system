{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, head, isEqual, last, get } from '@antv/util';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\nvar DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3\n};\n/**\n * 背景框的 Action\n * @ignore\n */\n\nvar ActiveRegion =\n/** @class */\nfunction (_super) {\n  __extends(ActiveRegion, _super);\n\n  function ActiveRegion() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   */\n\n\n  ActiveRegion.prototype.show = function (args) {\n    var view = this.context.view;\n    var ev = this.context.event;\n    var tooltipItems = view.getTooltipItems({\n      x: ev.x,\n      y: ev.y\n    });\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n\n    this.items = tooltipItems;\n\n    if (tooltipItems.length) {\n      var xField_1 = view.getXScale().field;\n      var xValue_1 = tooltipItems[0].data[xField_1]; // 根据 x 对应的值查找 elements\n\n      var elements_1 = [];\n      var geometries = view.geometries;\n      each(geometries, function (geometry) {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          var result = geometry.getElementsBy(function (ele) {\n            var eleData = ele.getData();\n            return eleData[xField_1] === xValue_1;\n          });\n          elements_1 = elements_1.concat(result);\n        }\n      }); // 根据 bbox 计算背景框的面积区域\n\n      if (elements_1.length) {\n        var coordinate_1 = view.getCoordinate();\n        var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var groupBBox_1 = firstBBox_1;\n        each(elements_1, function (ele) {\n          var bbox = ele.shape.getCanvasBBox();\n\n          if (coordinate_1.isTransposed) {\n            if (bbox.minY < firstBBox_1.minY) {\n              firstBBox_1 = bbox;\n            }\n\n            if (bbox.maxY > lastBBox_1.maxY) {\n              lastBBox_1 = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox_1.minX) {\n              firstBBox_1 = bbox;\n            }\n\n            if (bbox.maxX > lastBBox_1.maxX) {\n              lastBBox_1 = bbox;\n            }\n          }\n\n          groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n          groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n          groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n          groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n        });\n        var backgroundGroup = view.backgroundGroup,\n            coordinateBBox = view.coordinateBBox;\n        var path = void 0;\n\n        if (coordinate_1.isRect) {\n          var xScale = view.getXScale();\n          var appendRatio = xScale.isLinear ? 0 : 0.25; // 如果 x 轴是数值类型，如直方图，不需要家额外的宽度\n\n          var minX = void 0;\n          var minY = void 0;\n          var width = void 0;\n          var height = void 0;\n\n          if (coordinate_1.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendRatio * lastBBox_1.height;\n            width = coordinateBBox.width;\n            height = groupBBox_1.height + appendRatio * 2 * lastBBox_1.height;\n          } else {\n            minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendRatio * firstBBox_1.width;\n            minY = Math.min(coordinateBBox.minY, firstBBox_1.minY);\n            width = groupBBox_1.width + appendRatio * 2 * firstBBox_1.width;\n            height = coordinateBBox.height;\n          }\n\n          path = [['M', minX, minY], ['L', minX + width, minY], ['L', minX + width, minY + height], ['L', minX, minY + height], ['Z']];\n        } else {\n          var firstElement = head(elements_1);\n          var lastElement = last(elements_1);\n          var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n          var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n          var center = coordinate_1.getCenter();\n          var radius = coordinate_1.getRadius();\n          var innterRadius = coordinate_1.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          var style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: __assign(__assign({}, style), {\n              path: path\n            })\n          });\n        }\n      }\n    }\n  };\n  /**\n   * 隐藏\n   */\n\n\n  ActiveRegion.prototype.hide = function () {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    } // this.regionPath = null;\n\n\n    this.items = null;\n  };\n  /**\n   * 销毁\n   */\n\n\n  ActiveRegion.prototype.destroy = function () {\n    this.hide();\n\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return ActiveRegion;\n}(Action);\n\nexport default ActiveRegion;","map":{"version":3,"sources":["../../../src/interaction/action/active-region.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, head, isEqual, last, get } from '@antv/util';\nimport { IShape, ShapeAttrs } from '../../dependents';\nimport Element from '../../geometry/element/';\nimport { LooseObject } from '../../interface';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\n\nconst DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3,\n};\n\n/**\n * 背景框的 Action\n * @ignore\n */\nclass ActiveRegion extends Action {\n  private items: any[];\n  private regionPath: IShape;\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   */\n  public show(args?: { style: ShapeAttrs }) {\n    const view = this.context.view;\n    const ev = this.context.event;\n    const tooltipItems = view.getTooltipItems({\n      x: ev.x,\n      y: ev.y,\n    });\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      const xField = view.getXScale().field;\n      const xValue = tooltipItems[0].data[xField];\n      // 根据 x 对应的值查找 elements\n      let elements: Element[] = [];\n      const geometries = view.geometries;\n      each(geometries, (geometry) => {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          const result = geometry.getElementsBy((ele) => {\n            const eleData = ele.getData();\n            return eleData[xField] === xValue;\n          });\n\n          elements = elements.concat(result);\n        }\n      });\n\n      // 根据 bbox 计算背景框的面积区域\n      if (elements.length) {\n        const coordinate = view.getCoordinate();\n\n        let firstBBox = elements[0].shape.getCanvasBBox();\n        let lastBBox = elements[0].shape.getCanvasBBox();\n        const groupBBox: LooseObject = firstBBox;\n\n        each(elements, (ele: Element) => {\n          const bbox = ele.shape.getCanvasBBox();\n          if (coordinate.isTransposed) {\n            if (bbox.minY < firstBBox.minY) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxY > lastBBox.maxY) {\n              lastBBox = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox.minX) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxX > lastBBox.maxX) {\n              lastBBox = bbox;\n            }\n          }\n\n          groupBBox.x = Math.min(bbox.minX, groupBBox.minX);\n          groupBBox.y = Math.min(bbox.minY, groupBBox.minY);\n          groupBBox.width = Math.max(bbox.maxX, groupBBox.maxX) - groupBBox.x;\n          groupBBox.height = Math.max(bbox.maxY, groupBBox.maxY) - groupBBox.y;\n        });\n\n        const { backgroundGroup, coordinateBBox } = view;\n        let path;\n        if (coordinate.isRect) {\n          const xScale = view.getXScale();\n          const appendRatio = xScale.isLinear ? 0 : 0.25; // 如果 x 轴是数值类型，如直方图，不需要家额外的宽度\n          let minX: number;\n          let minY: number;\n          let width: number;\n          let height: number;\n          if (coordinate.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox.minY, firstBBox.minY) - appendRatio * lastBBox.height;\n            width = coordinateBBox.width;\n            height = groupBBox.height + appendRatio * 2 * lastBBox.height;\n          } else {\n            minX = Math.min(firstBBox.minX, lastBBox.minX) - appendRatio * firstBBox.width;\n            minY = Math.min(coordinateBBox.minY, firstBBox.minY);\n            width = groupBBox.width + appendRatio * 2 * firstBBox.width;\n            height = coordinateBBox.height;\n          }\n          path = [\n            ['M', minX, minY],\n            ['L', minX + width, minY],\n            ['L', minX + width, minY + height],\n            ['L', minX, minY + height],\n            ['Z'],\n          ];\n        } else {\n          const firstElement = head(elements);\n          const lastElement = last(elements);\n          const { startAngle } = getAngle(firstElement.getModel(), coordinate);\n          const { endAngle } = getAngle(lastElement.getModel(), coordinate);\n          const center = coordinate.getCenter();\n          const radius = coordinate.getRadius();\n          const innterRadius = coordinate.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          const style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: {\n              ...style,\n              path,\n            },\n          });\n        }\n      }\n    }\n  }\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  }\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    super.destroy();\n  }\n}\n\nexport default ActiveRegion;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}