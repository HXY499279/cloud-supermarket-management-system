{"ast":null,"code":"import { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nexport function adjustColor(items, labels, shapes) {\n  if (shapes.length === 0) {\n    return;\n  }\n\n  var element = shapes[0].get('element');\n  var theme = element.geometry.theme;\n\n  var _a = theme.labels || {},\n      fillColorLight = _a.fillColorLight,\n      fillColorDark = _a.fillColorDark;\n\n  shapes.forEach(function (shape, index) {\n    var label = labels[index];\n    var textShape = label.find(function (el) {\n      return el.get('type') === 'text';\n    });\n    var shapeBBox = BBox.fromObject(shape.getBBox());\n    var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    var overflow = !shapeBBox.contains(textBBox);\n    var bgColor = shape.attr('fill');\n    var fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/label/layout/adjust-color.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,QAAqB,oBAArB;AACA,SAAS,oBAAT,QAAqC,qBAArC;AAIA,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAA0C,MAA1C,EAA4D,MAA5D,EAAuF;AAC3F,MAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AACD,MAAM,OAAO,GAAY,MAAM,CAAC,CAAD,CAAN,CAAU,GAAV,CAAc,SAAd,CAAzB;AACA,MAAM,KAAK,GAAG,OAAO,CAAC,QAAR,CAAiB,KAA/B;;AACM,MAAA,EAAA,GAAoC,KAAK,CAAC,MAAN,IAAgB,EAApD;AAAA,MAAE,cAAc,GAAA,EAAA,CAAA,cAAhB;AAAA,MAAkB,aAAa,GAAA,EAAA,CAAA,aAA/B;;AAEN,EAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAyB,KAAzB,EAAsC;AACnD,QAAM,KAAK,GAAG,MAAM,CAAC,KAAD,CAApB;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,IAAN,CAAW,UAAC,EAAD,EAAG;AAAK,aAAA,EAAE,CAAC,GAAH,CAAO,MAAP,MAAA,MAAA;AAAyB,KAA5C,CAAlB;AACA,QAAM,SAAS,GAAG,IAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,OAAN,EAAhB,CAAlB;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,UAAL,CAAgB,SAAS,CAAC,aAAV,EAAhB,CAAjB;AACA,QAAM,QAAQ,GAAG,CAAC,SAAS,CAAC,QAAV,CAAmB,QAAnB,CAAlB;AAEA,QAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,MAAX,CAAhB;AACA,QAAM,SAAS,GAAG,oBAAoB,CAAC,OAAD,CAAtC;;AAEA,QAAI,CAAC,QAAL,EAAe;AACb,UAAI,SAAJ,EAAe;AACb,YAAI,cAAJ,EAAoB;AAClB,UAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,cAAvB;AACD;AACF,OAJD,MAIO;AACL,YAAI,aAAJ,EAAmB;AACjB,UAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,aAAvB;AACD;AACF;AACF,KAVD,MAUO;AACL;AACA,MAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,cAAN,CAAqB,KAApC;AACD;AACF,GAxBD;AAyBD","sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport Element from '../../element';\nimport { LabelItem } from '../interface';\n\nexport function adjustColor(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0].get('element');\n  const theme = element.geometry.theme;\n  const { fillColorLight, fillColorDark } = theme.labels || {};\n\n  shapes.forEach((shape: IShape | IGroup, index: number) => {\n    const label = labels[index];\n    const textShape = label.find((el) => el.get('type') === 'text');\n    const shapeBBox = BBox.fromObject(shape.getBBox());\n    const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    const overflow = !shapeBBox.contains(textBBox);\n\n    const bgColor = shape.attr('fill');\n    const fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}