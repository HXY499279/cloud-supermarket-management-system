{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport Coordinate from './base';\n\nvar Polar =\n/** @class */\nfunction (_super) {\n  __extends(Polar, _super);\n\n  function Polar(cfg) {\n    var _this = _super.call(this, cfg) || this;\n\n    _this.isPolar = true;\n    _this.type = 'polar';\n    var _a = cfg.startAngle,\n        startAngle = _a === void 0 ? -Math.PI / 2 : _a,\n        _b = cfg.endAngle,\n        endAngle = _b === void 0 ? Math.PI * 3 / 2 : _b,\n        _c = cfg.innerRadius,\n        innerRadius = _c === void 0 ? 0 : _c,\n        radius = cfg.radius;\n    _this.startAngle = startAngle;\n    _this.endAngle = endAngle;\n    _this.innerRadius = innerRadius;\n    _this.radius = radius;\n\n    _this.initial();\n\n    return _this;\n  }\n\n  Polar.prototype.initial = function () {\n    _super.prototype.initial.call(this);\n\n    while (this.endAngle < this.startAngle) {\n      this.endAngle += Math.PI * 2;\n    }\n\n    var oneBox = this.getOneBox();\n    var oneWidth = oneBox.maxX - oneBox.minX;\n    var oneHeight = oneBox.maxY - oneBox.minY;\n    var left = Math.abs(oneBox.minX) / oneWidth;\n    var top = Math.abs(oneBox.minY) / oneHeight;\n    var maxRadius;\n\n    if (this.height / oneHeight > this.width / oneWidth) {\n      // width 为主\n      maxRadius = this.width / oneWidth;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * this.width,\n        y: this.center.y - (0.5 - top) * maxRadius * oneHeight\n      };\n    } else {\n      // height 为主\n      maxRadius = this.height / oneHeight;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n        y: this.center.y - (0.5 - top) * this.height\n      };\n    }\n\n    this.polarRadius = this.radius;\n\n    if (!this.radius) {\n      this.polarRadius = maxRadius;\n    } else if (this.radius > 0 && this.radius <= 1) {\n      this.polarRadius = maxRadius * this.radius;\n    } else if (this.radius <= 0 || this.radius > maxRadius) {\n      this.polarRadius = maxRadius;\n    }\n\n    this.x = {\n      start: this.startAngle,\n      end: this.endAngle\n    };\n    this.y = {\n      start: this.innerRadius * this.polarRadius,\n      end: this.polarRadius\n    };\n  };\n\n  Polar.prototype.getRadius = function () {\n    return this.polarRadius;\n  };\n\n  Polar.prototype.convertPoint = function (point) {\n    var _a;\n\n    var center = this.getCenter();\n    var x = point.x,\n        y = point.y;\n\n    if (this.isTransposed) {\n      _a = [y, x], x = _a[0], y = _a[1];\n    }\n\n    x = this.convertDim(x, 'x');\n    y = this.convertDim(y, 'y');\n    return {\n      x: center.x + Math.cos(x) * y,\n      y: center.y + Math.sin(x) * y\n    };\n  };\n\n  Polar.prototype.invertPoint = function (point) {\n    var _a;\n\n    var center = this.getCenter();\n    var vPoint = [point.x - center.x, point.y - center.y];\n\n    var _b = this,\n        startAngle = _b.startAngle,\n        endAngle = _b.endAngle;\n\n    if (this.isReflect('x')) {\n      _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\n    }\n\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    ext.leftRotate(m, m, startAngle);\n    var vStart3 = [1, 0, 0];\n    vec3.transformMat3(vStart3, vStart3, m);\n    var vStart2 = [vStart3[0], vStart3[1]];\n    var angle = ext.angleTo(vStart2, vPoint, endAngle < startAngle);\n\n    if (isNumberEqual(angle, Math.PI * 2)) {\n      angle = 0;\n    }\n\n    var radius = vec2.length(vPoint);\n    var xPercent = angle / (endAngle - startAngle);\n    xPercent = endAngle - startAngle > 0 ? xPercent : -xPercent;\n    var yPercent = this.invertDim(radius, 'y');\n    var rst = {\n      x: 0,\n      y: 0\n    };\n    rst.x = this.isTransposed ? yPercent : xPercent;\n    rst.y = this.isTransposed ? xPercent : yPercent;\n    return rst;\n  };\n\n  Polar.prototype.getCenter = function () {\n    return this.circleCenter;\n  };\n\n  Polar.prototype.getOneBox = function () {\n    var startAngle = this.startAngle;\n    var endAngle = this.endAngle;\n\n    if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n      return {\n        minX: -1,\n        maxX: 1,\n        minY: -1,\n        maxY: 1\n      };\n    }\n\n    var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n    var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n\n    for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n      xs.push(Math.cos(i));\n      ys.push(Math.sin(i));\n    }\n\n    return {\n      minX: Math.min.apply(Math, xs),\n      maxX: Math.max.apply(Math, xs),\n      minY: Math.min.apply(Math, ys),\n      maxY: Math.max.apply(Math, ys)\n    };\n  };\n\n  return Polar;\n}(Coordinate);\n\nexport default Polar;","map":{"version":3,"sources":["../../src/coord/polar.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport Coordinate from './base';\nvar Polar = /** @class */ (function (_super) {\n    __extends(Polar, _super);\n    function Polar(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.isPolar = true;\n        _this.type = 'polar';\n        var _a = cfg.startAngle, startAngle = _a === void 0 ? -Math.PI / 2 : _a, _b = cfg.endAngle, endAngle = _b === void 0 ? (Math.PI * 3) / 2 : _b, _c = cfg.innerRadius, innerRadius = _c === void 0 ? 0 : _c, radius = cfg.radius;\n        _this.startAngle = startAngle;\n        _this.endAngle = endAngle;\n        _this.innerRadius = innerRadius;\n        _this.radius = radius;\n        _this.initial();\n        return _this;\n    }\n    Polar.prototype.initial = function () {\n        _super.prototype.initial.call(this);\n        while (this.endAngle < this.startAngle) {\n            this.endAngle += Math.PI * 2;\n        }\n        var oneBox = this.getOneBox();\n        var oneWidth = oneBox.maxX - oneBox.minX;\n        var oneHeight = oneBox.maxY - oneBox.minY;\n        var left = Math.abs(oneBox.minX) / oneWidth;\n        var top = Math.abs(oneBox.minY) / oneHeight;\n        var maxRadius;\n        if (this.height / oneHeight > this.width / oneWidth) {\n            // width 为主\n            maxRadius = this.width / oneWidth;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * this.width,\n                y: this.center.y - (0.5 - top) * maxRadius * oneHeight,\n            };\n        }\n        else {\n            // height 为主\n            maxRadius = this.height / oneHeight;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n                y: this.center.y - (0.5 - top) * this.height,\n            };\n        }\n        this.polarRadius = this.radius;\n        if (!this.radius) {\n            this.polarRadius = maxRadius;\n        }\n        else if (this.radius > 0 && this.radius <= 1) {\n            this.polarRadius = maxRadius * this.radius;\n        }\n        else if (this.radius <= 0 || this.radius > maxRadius) {\n            this.polarRadius = maxRadius;\n        }\n        this.x = {\n            start: this.startAngle,\n            end: this.endAngle,\n        };\n        this.y = {\n            start: this.innerRadius * this.polarRadius,\n            end: this.polarRadius,\n        };\n    };\n    Polar.prototype.getRadius = function () {\n        return this.polarRadius;\n    };\n    Polar.prototype.convertPoint = function (point) {\n        var _a;\n        var center = this.getCenter();\n        var x = point.x, y = point.y;\n        if (this.isTransposed) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        x = this.convertDim(x, 'x');\n        y = this.convertDim(y, 'y');\n        return {\n            x: center.x + Math.cos(x) * y,\n            y: center.y + Math.sin(x) * y,\n        };\n    };\n    Polar.prototype.invertPoint = function (point) {\n        var _a;\n        var center = this.getCenter();\n        var vPoint = [point.x - center.x, point.y - center.y];\n        var _b = this, startAngle = _b.startAngle, endAngle = _b.endAngle;\n        if (this.isReflect('x')) {\n            _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\n        }\n        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        ext.leftRotate(m, m, startAngle);\n        var vStart3 = [1, 0, 0];\n        vec3.transformMat3(vStart3, vStart3, m);\n        var vStart2 = [vStart3[0], vStart3[1]];\n        var angle = ext.angleTo(vStart2, vPoint, endAngle < startAngle);\n        if (isNumberEqual(angle, Math.PI * 2)) {\n            angle = 0;\n        }\n        var radius = vec2.length(vPoint);\n        var xPercent = angle / (endAngle - startAngle);\n        xPercent = endAngle - startAngle > 0 ? xPercent : -xPercent;\n        var yPercent = this.invertDim(radius, 'y');\n        var rst = { x: 0, y: 0 };\n        rst.x = this.isTransposed ? yPercent : xPercent;\n        rst.y = this.isTransposed ? xPercent : yPercent;\n        return rst;\n    };\n    Polar.prototype.getCenter = function () {\n        return this.circleCenter;\n    };\n    Polar.prototype.getOneBox = function () {\n        var startAngle = this.startAngle;\n        var endAngle = this.endAngle;\n        if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n            return {\n                minX: -1,\n                maxX: 1,\n                minY: -1,\n                maxY: 1,\n            };\n        }\n        var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n        var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n        for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n            xs.push(Math.cos(i));\n            ys.push(Math.sin(i));\n        }\n        return {\n            minX: Math.min.apply(Math, xs),\n            maxX: Math.max.apply(Math, xs),\n            minY: Math.min.apply(Math, ys),\n            maxY: Math.max.apply(Math, ys),\n        };\n    };\n    return Polar;\n}(Coordinate));\nexport default Polar;\n//# sourceMappingURL=polar.js.map"]},"metadata":{},"sourceType":"module"}