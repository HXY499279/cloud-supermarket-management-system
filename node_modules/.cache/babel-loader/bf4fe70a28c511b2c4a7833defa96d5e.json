{"ast":null,"code":"import { fixedBase } from '@antv/util';\n\nfunction snapMultiple(v, base, snapType) {\n  var div;\n\n  if (snapType === 'ceil') {\n    div = Math.ceil(v / base);\n  } else if (snapType === 'floor') {\n    div = Math.floor(v / base);\n  } else {\n    div = Math.round(v / base);\n  }\n\n  return div * base;\n}\n\nexport default function intervalTicks(min, max, interval) {\n  // 变成 interval 的倍数\n  var minTick = snapMultiple(min, interval, 'floor');\n  var maxTick = snapMultiple(max, interval, 'ceil'); // 统一小数位数\n\n  minTick = fixedBase(minTick, interval);\n  maxTick = fixedBase(maxTick, interval);\n  var ticks = [];\n\n  for (var i = minTick; i <= maxTick; i = i + interval) {\n    var tickValue = fixedBase(i, interval); // 防止浮点数加法出现问题\n\n    ticks.push(tickValue);\n  }\n\n  return {\n    min: minTick,\n    max: maxTick,\n    ticks: ticks\n  };\n}","map":{"version":3,"sources":["../../src/util/interval.ts"],"names":[],"mappings":"AACA,SAAS,SAAT,QAA0B,YAA1B;;AAEA,SAAS,YAAT,CAAsB,CAAtB,EAAyB,IAAzB,EAA+B,QAA/B,EAAuC;AACrC,MAAI,GAAJ;;AACA,MAAI,QAAQ,KAAK,MAAjB,EAAyB;AACvB,IAAA,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,GAAG,IAAd,CAAN;AACD,GAFD,MAEO,IAAI,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,IAAA,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,IAAf,CAAN;AACD,GAFM,MAEA;AACL,IAAA,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,IAAf,CAAN;AACD;;AACD,SAAO,GAAG,GAAG,IAAb;AACD;;AAED,eAAc,SAAU,aAAV,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,QAAlC,EAA0C;AACtD;AACA,MAAI,OAAO,GAAG,YAAY,CAAC,GAAD,EAAM,QAAN,EAAgB,OAAhB,CAA1B;AACA,MAAI,OAAO,GAAG,YAAY,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,CAA1B,CAHsD,CAItD;;AACA,EAAA,OAAO,GAAG,SAAS,CAAC,OAAD,EAAU,QAAV,CAAnB;AACA,EAAA,OAAO,GAAG,SAAS,CAAC,OAAD,EAAU,QAAV,CAAnB;AACA,MAAM,KAAK,GAAG,EAAd;;AACA,OAAK,IAAI,CAAC,GAAG,OAAb,EAAsB,CAAC,IAAI,OAA3B,EAAoC,CAAC,GAAG,CAAC,GAAG,QAA5C,EAAsD;AACpD,QAAM,SAAS,GAAG,SAAS,CAAC,CAAD,EAAI,QAAJ,CAA3B,CADoD,CACV;;AAC1C,IAAA,KAAK,CAAC,IAAN,CAAW,SAAX;AACD;;AACD,SAAO;AACL,IAAA,GAAG,EAAE,OADA;AAEL,IAAA,GAAG,EAAE,OAFA;AAGL,IAAA,KAAK,EAAA;AAHA,GAAP;AAKD","sourceRoot":"","sourcesContent":["import { fixedBase } from '@antv/util';\nfunction snapMultiple(v, base, snapType) {\n    var div;\n    if (snapType === 'ceil') {\n        div = Math.ceil(v / base);\n    }\n    else if (snapType === 'floor') {\n        div = Math.floor(v / base);\n    }\n    else {\n        div = Math.round(v / base);\n    }\n    return div * base;\n}\nexport default function intervalTicks(min, max, interval) {\n    // 变成 interval 的倍数\n    var minTick = snapMultiple(min, interval, 'floor');\n    var maxTick = snapMultiple(max, interval, 'ceil');\n    // 统一小数位数\n    minTick = fixedBase(minTick, interval);\n    maxTick = fixedBase(maxTick, interval);\n    var ticks = [];\n    for (var i = minTick; i <= maxTick; i = i + interval) {\n        var tickValue = fixedBase(i, interval); // 防止浮点数加法出现问题\n        ticks.push(tickValue);\n    }\n    return {\n        min: minTick,\n        max: maxTick,\n        ticks: ticks\n    };\n}\n//# sourceMappingURL=interval.js.map"]},"metadata":{},"sourceType":"module"}