{"ast":null,"code":"/**\n * @fileoverview ellipse\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nvar Ellipse =\n/** @class */\nfunction (_super) {\n  __extends(Ellipse, _super);\n\n  function Ellipse() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'ellipse';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Ellipse.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      rx: 0,\n      ry: 0\n    });\n  };\n\n  Ellipse.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy\n      if (attr === 'x' || attr === 'y') {\n        el.setAttribute(\"c\" + attr, value);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n\n  return Ellipse;\n}(ShapeBase);\n\nexport default Ellipse;","map":{"version":3,"sources":["../../src/shape/ellipse.ts"],"names":[],"mappings":"AAAA;;;AAGG;;AAEH,SAAS,IAAT,QAAqB,YAArB;AACA,SAAS,YAAT,QAA6B,aAA7B;AACA,OAAO,SAAP,MAAsB,QAAtB;;AAEA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAtB,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACE,IAAA,KAAA,CAAA,IAAA,GAAe,SAAf;AACA,IAAA,KAAA,CAAA,OAAA,GAAmB,IAAnB;AACA,IAAA,KAAA,CAAA,SAAA,GAAqB,IAArB;;AAyBD;;AAvBC,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,QAAM,KAAK,GAAG,MAAA,CAAA,SAAA,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB,CAAd;;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,MAAA,CAAC,EAAE,CADK;AAER,MAAA,CAAC,EAAE,CAFK;AAGR,MAAA,EAAE,EAAE,CAHI;AAIR,MAAA,EAAE,EAAE;AAJI,KADV,CAAA;AAOD,GATD;;AAWA,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAoB,WAApB,EAA+B;AAC7B,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACA,QAAM,EAAE,GAAG,KAAK,GAAL,CAAS,IAAT,CAAX;AACA,IAAA,IAAI,CAAC,WAAW,IAAI,KAAhB,EAAuB,UAAC,KAAD,EAAQ,IAAR,EAAY;AACrC;AACA,UAAI,IAAI,KAAK,GAAT,IAAgB,IAAI,KAAK,GAA7B,EAAkC;AAChC,QAAA,EAAE,CAAC,YAAH,CAAgB,MAAI,IAApB,EAA4B,KAA5B;AACD,OAFD,MAEO,IAAI,YAAY,CAAC,IAAD,CAAhB,EAAwB;AAC7B,QAAA,EAAE,CAAC,YAAH,CAAgB,YAAY,CAAC,IAAD,CAA5B,EAAoC,KAApC;AACD;AACF,KAPG,CAAJ;AAQD,GAXD;;AAYF,SAAA,OAAA;AAAC,CA5BD,CAAsB,SAAtB,CAAA;;AA8BA,eAAe,OAAf","sourceRoot":"","sourcesContent":["/**\n * @fileoverview ellipse\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Ellipse = /** @class */ (function (_super) {\n    __extends(Ellipse, _super);\n    function Ellipse() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'ellipse';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Ellipse.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, rx: 0, ry: 0 });\n    };\n    Ellipse.prototype.createPath = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy\n            if (attr === 'x' || attr === 'y') {\n                el.setAttribute(\"c\" + attr, value);\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    return Ellipse;\n}(ShapeBase));\nexport default Ellipse;\n//# sourceMappingURL=ellipse.js.map"]},"metadata":{},"sourceType":"module"}