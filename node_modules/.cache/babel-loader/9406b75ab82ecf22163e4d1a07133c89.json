{"ast":null,"code":"import { deepMix, get, map } from '@antv/util';\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\n\nexport function getGridThemeCfg(theme, direction) {\n  var axisTheme = deepMix({}, get(theme, ['components', 'axis', 'common']), get(theme, ['components', 'axis', direction]));\n  return get(axisTheme, ['grid'], {});\n}\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\n\nexport function getLineGridItems(coordinate, scale, dim, alignTick) {\n  var items = [];\n  var ticks = scale.getTicks();\n\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: ''\n    });\n  }\n\n  ticks.reduce(function (preTick, currentTick, currentIndex) {\n    var currentValue = currentTick.value;\n\n    if (alignTick) {\n      items.push({\n        points: [coordinate.convert(dim === 'y' ? {\n          x: 0,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 0\n        }), coordinate.convert(dim === 'y' ? {\n          x: 1,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 1\n        })]\n      });\n    } else {\n      if (currentIndex) {\n        var preValue = preTick.value;\n        var middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [coordinate.convert(dim === 'y' ? {\n            x: 0,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 0\n          }), coordinate.convert(dim === 'y' ? {\n            x: 1,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 1\n          })]\n        });\n      }\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\n\nexport function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {\n  var count = xScale.values.length;\n  var items = [];\n  var ticks = yScale.getTicks();\n  ticks.reduce(function (preTick, currentTick) {\n    var preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n\n    var currentValue = currentTick.value;\n    var middleValue = (preValue + currentValue) / 2;\n\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 0\n        }), coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 1\n        })]\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), function (__, idx) {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue\n          });\n        })\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\n\nexport function showGrid(axisTheme, axisOption) {\n  var userGrid = get(axisOption, 'grid');\n\n  if (userGrid === null) {\n    return false;\n  }\n\n  var themeGrid = get(axisTheme, 'grid');\n  return !(userGrid === undefined && themeGrid === null);\n}","map":{"version":3,"sources":["../../src/util/grid.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, get, map } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale, Tick } from '../dependents';\n\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme: object, direction: DIRECTION | 'common'): object {\n  const axisTheme = deepMix(\n    {},\n    get(theme, ['components', 'axis', 'common']),\n    get(theme, ['components', 'axis', direction])\n  );\n  return get(axisTheme, ['grid'], {});\n}\n\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate: Coordinate, scale: Scale, dim: string, alignTick?: boolean) {\n  const items = [];\n  const ticks = scale.getTicks();\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: '',\n    });\n  }\n  ticks.reduce((preTick: Tick, currentTick: Tick, currentIndex) => {\n    const currentValue = currentTick.value;\n    if (alignTick) {\n      items.push({\n        points: [\n          coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\n          coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\n        ],\n      });\n    } else {\n      if (currentIndex) {\n        const preValue = preTick.value;\n        const middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [\n            coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\n            coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\n          ],\n        });\n      }\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(\n  coordinate: Coordinate,\n  xScale: Scale,\n  yScale: Scale,\n  alignTick: boolean,\n  dim: string\n) {\n  const count = xScale.values.length;\n  const items = [];\n  const ticks = yScale.getTicks();\n\n  ticks.reduce((preTick: Tick, currentTick: Tick) => {\n    const preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n    const currentValue = currentTick.value;\n    const middleValue = (preValue + currentValue) / 2;\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 0,\n          }),\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 1,\n          }),\n        ],\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), (__: any, idx: number) => {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue,\n          });\n        }),\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme: any, axisOption: any): boolean {\n  const userGrid = get(axisOption, 'grid');\n  if (userGrid === null) {\n    return false;\n  }\n\n  const themeGrid = get(axisTheme, 'grid');\n\n  return !(userGrid === undefined && themeGrid === null);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}