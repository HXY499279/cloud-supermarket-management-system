{"ast":null,"code":"import isNil from './is-nil';\nimport isArrayLike from './is-array-like';\nimport getType from './get-type';\nimport isPrototype from './is-prototype';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isEmpty(value) {\n  /**\n   * isEmpty(null) => true\n   * isEmpty() => true\n   * isEmpty(true) => true\n   * isEmpty(1) => true\n   * isEmpty([1, 2, 3]) => false\n   * isEmpty('abc') => false\n   * isEmpty({ a: 1 }) => false\n   */\n  if (isNil(value)) {\n    return true;\n  }\n\n  if (isArrayLike(value)) {\n    return !value.length;\n  }\n\n  var type = getType(value);\n\n  if (type === 'Map' || type === 'Set') {\n    return !value.size;\n  }\n\n  if (isPrototype(value)) {\n    return !Object.keys(value).length;\n  }\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isEmpty;","map":{"version":3,"sources":["../src/is-empty.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,UAAlB;AACA,OAAO,WAAP,MAAwB,iBAAxB;AACA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP,MAAwB,gBAAxB;AAEA,IAAM,cAAc,GAAG,MAAM,CAAC,SAAP,CAAiB,cAAxC;;AAEA,SAAS,OAAT,CAAiB,KAAjB,EAA2B;AACzB;;;;;;;;AAQG;AACH,MAAI,KAAK,CAAC,KAAD,CAAT,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,WAAO,CAAC,KAAK,CAAC,MAAd;AACD;;AACD,MAAM,IAAI,GAAG,OAAO,CAAC,KAAD,CAApB;;AACA,MAAI,IAAI,KAAK,KAAT,IAAkB,IAAI,KAAK,KAA/B,EAAsC;AACpC,WAAO,CAAC,KAAK,CAAC,IAAd;AACD;;AACD,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,WAAO,CAAC,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,MAA3B;AACD;;AACD,OAAK,IAAM,GAAX,IAAkB,KAAlB,EAAyB;AACvB,QAAI,cAAc,CAAC,IAAf,CAAoB,KAApB,EAA2B,GAA3B,CAAJ,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,eAAe,OAAf","sourceRoot":"","sourcesContent":["import isNil from './is-nil';\nimport isArrayLike from './is-array-like';\nimport getType from './get-type';\nimport isPrototype from './is-prototype';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmpty(value) {\n    /**\n     * isEmpty(null) => true\n     * isEmpty() => true\n     * isEmpty(true) => true\n     * isEmpty(1) => true\n     * isEmpty([1, 2, 3]) => false\n     * isEmpty('abc') => false\n     * isEmpty({ a: 1 }) => false\n     */\n    if (isNil(value)) {\n        return true;\n    }\n    if (isArrayLike(value)) {\n        return !value.length;\n    }\n    var type = getType(value);\n    if (type === 'Map' || type === 'Set') {\n        return !value.size;\n    }\n    if (isPrototype(value)) {\n        return !Object.keys(value).length;\n    }\n    for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport default isEmpty;\n//# sourceMappingURL=is-empty.js.map"]},"metadata":{},"sourceType":"module"}