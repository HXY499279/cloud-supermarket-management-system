{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { Path } from '../shape';\nvar sin = Math.sin,\n    cos = Math.cos,\n    atan2 = Math.atan2,\n    PI = Math.PI;\n\nfunction _addDefaultArrow(shape, attrs, x1, y1, x2, y2, isStart) {\n  var stroke = attrs.stroke,\n      lineWidth = attrs.lineWidth;\n  var x = x1 - x2;\n  var y = y1 - y2;\n  var rad = atan2(y, x);\n  var arrowShape = new Path({\n    type: 'path',\n    canvas: shape.get('canvas'),\n    isArrowShape: true,\n    attrs: {\n      // 默认箭头的边长为 10，夹角为 60 度\n      path: \"M\" + 10 * cos(PI / 6) + \",\" + 10 * sin(PI / 6) + \" L0,0 L\" + 10 * cos(PI / 6) + \",-\" + 10 * sin(PI / 6),\n      // 使用 shape stroke 值\n      stroke: stroke,\n      lineWidth: lineWidth\n    }\n  });\n  arrowShape.translate(x2, y2);\n  arrowShape.rotateAtPoint(x2, y2, rad);\n  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\n}\n/**\n * 箭头 path 的设置要求\n * 1. 箭头顶点坐标需要为 (0, 0)\n * 2. 箭头夹角的中心分割线需要与 X 轴正方向对齐\n */\n\n\nfunction _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, isStart) {\n  var startArrow = attrs.startArrow,\n      endArrow = attrs.endArrow,\n      stroke = attrs.stroke,\n      lineWidth = attrs.lineWidth;\n  var arrowAttrs = isStart ? startArrow : endArrow;\n\n  var d = arrowAttrs.d,\n      arrowFill = arrowAttrs.fill,\n      arrowStroke = arrowAttrs.stroke,\n      arrowLineWidth = arrowAttrs.lineWidth,\n      restAttrs = __rest(arrowAttrs, [\"d\", \"fill\", \"stroke\", \"lineWidth\"]);\n\n  var x = x1 - x2;\n  var y = y1 - y2;\n  var rad = atan2(y, x);\n\n  if (d) {\n    x2 = x2 - cos(rad) * d;\n    y2 = y2 - sin(rad) * d;\n  }\n\n  var arrowShape = new Path({\n    type: 'path',\n    canvas: shape.get('canvas'),\n    isArrowShape: true,\n    attrs: __assign(__assign({}, restAttrs), {\n      // 支持单独设置箭头的 stroke 和 lineWidth，若为空则使用 shape 的值\n      stroke: arrowStroke || stroke,\n      lineWidth: arrowLineWidth || lineWidth,\n      // 箭头是否填充需要手动设置，不会继承自 shape 的值\n      fill: arrowFill\n    })\n  });\n  arrowShape.translate(x2, y2);\n  arrowShape.rotateAtPoint(x2, y2, rad);\n  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\n}\n/**\n * 如果自定义箭头并且有 d 需要做偏移，如果直接画，线条会超出箭头尖端，因此需要根据箭头偏移 d, 返回线需要缩短的距离\n * |----------------\n * |<|--------------\n * |\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n * @param {number} d  箭头沿线条方向的偏移距离\n * @return {{dx: number, dy: number}} 返回线条偏移距离\n */\n\n\nexport function getShortenOffset(x1, y1, x2, y2, d) {\n  var rad = atan2(y2 - y1, x2 - x1);\n  return {\n    dx: cos(rad) * d,\n    dy: sin(rad) * d\n  };\n}\n/**\n * 绘制起始箭头\n * @param {IShape} shape 图形\n * @param {ShapeAttrs} attrs shape 的绘图属性\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n */\n\nexport function addStartArrow(shape, attrs, x1, y1, x2, y2) {\n  if (typeof attrs.startArrow === 'object') {\n    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, true);\n  } else if (attrs.startArrow) {\n    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, true);\n  } else {\n    shape.set('startArrowShape', null);\n  }\n}\n/**\n * 绘制结束箭头\n * @param {IShape} shape 图形\n * @param {ShapeAttrs} attrs shape 的绘图属性\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n */\n\nexport function addEndArrow(shape, attrs, x1, y1, x2, y2) {\n  if (typeof attrs.endArrow === 'object') {\n    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, false);\n  } else if (attrs.endArrow) {\n    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, false);\n  } else {\n    shape.set('startArrowShape', null);\n  }\n}","map":{"version":3,"sources":["../../src/util/arrow.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { Path } from '../shape';\nvar sin = Math.sin, cos = Math.cos, atan2 = Math.atan2, PI = Math.PI;\nfunction _addDefaultArrow(shape, attrs, x1, y1, x2, y2, isStart) {\n    var stroke = attrs.stroke, lineWidth = attrs.lineWidth;\n    var x = x1 - x2;\n    var y = y1 - y2;\n    var rad = atan2(y, x);\n    var arrowShape = new Path({\n        type: 'path',\n        canvas: shape.get('canvas'),\n        isArrowShape: true,\n        attrs: {\n            // 默认箭头的边长为 10，夹角为 60 度\n            path: \"M\" + 10 * cos(PI / 6) + \",\" + 10 * sin(PI / 6) + \" L0,0 L\" + 10 * cos(PI / 6) + \",-\" + 10 * sin(PI / 6),\n            // 使用 shape stroke 值\n            stroke: stroke,\n            lineWidth: lineWidth,\n        },\n    });\n    arrowShape.translate(x2, y2);\n    arrowShape.rotateAtPoint(x2, y2, rad);\n    shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\n}\n/**\n * 箭头 path 的设置要求\n * 1. 箭头顶点坐标需要为 (0, 0)\n * 2. 箭头夹角的中心分割线需要与 X 轴正方向对齐\n */\nfunction _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, isStart) {\n    var startArrow = attrs.startArrow, endArrow = attrs.endArrow, stroke = attrs.stroke, lineWidth = attrs.lineWidth;\n    var arrowAttrs = isStart ? startArrow : endArrow;\n    var d = arrowAttrs.d, arrowFill = arrowAttrs.fill, arrowStroke = arrowAttrs.stroke, arrowLineWidth = arrowAttrs.lineWidth, restAttrs = __rest(arrowAttrs, [\"d\", \"fill\", \"stroke\", \"lineWidth\"]);\n    var x = x1 - x2;\n    var y = y1 - y2;\n    var rad = atan2(y, x);\n    if (d) {\n        x2 = x2 - cos(rad) * d;\n        y2 = y2 - sin(rad) * d;\n    }\n    var arrowShape = new Path({\n        type: 'path',\n        canvas: shape.get('canvas'),\n        isArrowShape: true,\n        attrs: __assign(__assign({}, restAttrs), { \n            // 支持单独设置箭头的 stroke 和 lineWidth，若为空则使用 shape 的值\n            stroke: arrowStroke || stroke, lineWidth: arrowLineWidth || lineWidth, \n            // 箭头是否填充需要手动设置，不会继承自 shape 的值\n            fill: arrowFill }),\n    });\n    arrowShape.translate(x2, y2);\n    arrowShape.rotateAtPoint(x2, y2, rad);\n    shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\n}\n/**\n * 如果自定义箭头并且有 d 需要做偏移，如果直接画，线条会超出箭头尖端，因此需要根据箭头偏移 d, 返回线需要缩短的距离\n * |----------------\n * |<|--------------\n * |\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n * @param {number} d  箭头沿线条方向的偏移距离\n * @return {{dx: number, dy: number}} 返回线条偏移距离\n */\nexport function getShortenOffset(x1, y1, x2, y2, d) {\n    var rad = atan2(y2 - y1, x2 - x1);\n    return {\n        dx: cos(rad) * d,\n        dy: sin(rad) * d,\n    };\n}\n/**\n * 绘制起始箭头\n * @param {IShape} shape 图形\n * @param {ShapeAttrs} attrs shape 的绘图属性\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n */\nexport function addStartArrow(shape, attrs, x1, y1, x2, y2) {\n    if (typeof attrs.startArrow === 'object') {\n        _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, true);\n    }\n    else if (attrs.startArrow) {\n        _addDefaultArrow(shape, attrs, x1, y1, x2, y2, true);\n    }\n    else {\n        shape.set('startArrowShape', null);\n    }\n}\n/**\n * 绘制结束箭头\n * @param {IShape} shape 图形\n * @param {ShapeAttrs} attrs shape 的绘图属性\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 箭头作用点 x\n * @param {number} y2 箭头作用点 y\n */\nexport function addEndArrow(shape, attrs, x1, y1, x2, y2) {\n    if (typeof attrs.endArrow === 'object') {\n        _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, false);\n    }\n    else if (attrs.endArrow) {\n        _addDefaultArrow(shape, attrs, x1, y1, x2, y2, false);\n    }\n    else {\n        shape.set('startArrowShape', null);\n    }\n}\n//# sourceMappingURL=arrow.js.map"]},"metadata":{},"sourceType":"module"}