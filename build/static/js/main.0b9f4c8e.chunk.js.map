{"version":3,"sources":["assets/2.jpg","pages/Login/Login.js","utils/UimChangePassword/UimChangePassword.jsx","components/Content/Uim/Uim.jsx","utils/AdmAddAd/AdmAddAd.jsx","components/Content/Adm/Adm.jsx","utils/CimCommodityCard/CommodityCard.jsx","utils/CimAddCommodity/CimAddCommodity.jsx","components/Content/Cim/Cim.jsx","utils/ofStatusToChinese.js","utils/numberRegular.js","components/Content/Dashboard/Dashboard.jsx","components/Content/Om/Om.jsx","components/Content/Category/Category.jsx","components/Content/Content.jsx","components/Menu/MeNu.jsx","pages/Home/Home.js","pages/Test/Test.jsx","App.jsx","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Login","props","submitHandle","undefined","nameElem","value","passwordElem","admin","state","asname","password","setState","reqwest","url","method","type","data","then","res","console","log","status","message","success","adminObj","JSON","stringify","sessionStorage","setItem","window","location","href","error","input","catch","err","id","src","pic","preview","className","style","color","fontSize","initialValues","remember","Item","name","rules","required","ref","borderRadius","placeholder","Password","valuePropName","htmlType","onClick","this","Component","UimChangePassword","onFinish","predata","newdata","modifiedpassword","upassword","warning","componentWillMount","uid","account","onBack","subTitle","paddingLeft","backgroundColor","size","bind","label","initialValue","hidden","getRandomuserParams","params","current","pagination","pageSize","Uim","total","loading","columns","title","dataIndex","key","render","to","marginLeft","danger","onConfirm","confirm","okText","cancelText","handleTableChange","fetch","users","UimChangePasswordComponent","match","dataitem","filter","item","margin","path","component","rowKey","nanoid","dataSource","onChange","AdmAddAd","property","headers","authorization","beforeUpload","maxCount","uploadTheadid","adCompany","search","adName","category","formData","FormData","append","file","axios","adid","adNumber","encType","Adm","adData","showUploadList","customRequest","newData","forEach","picture","getAdid","defaultSortOrder","sorter","a","b","width","TableComponent","results","length","marginBottom","marginTop","CommodityCard","isEdit","edit","delete","cid","renderCommodityList","comfimEdit","currentPriceElev","inventoryElev","originalPriceElev","currentPrice","inventory","originalPrice","oldData","propertyEdit","keyword","defaultValue","elev","componentDidMount","height","cover","alt","actions","EditOutlined","CloseOutlined","fontWeight","textAlign","commodityName","weight","salesVolume","originalPlace","Option","Select","CimAddCommodity","subCategory","toString","replace","showCategoryList","map","index","categorySelectChange","e","categorySelect","handleFileChange","target","files","minHeight","min","Cim","hasMore","isAddCategory","count","fetchData","callback","handleInfiniteOnLoad","concat","commodities","end","showCommodity","CimSearch","idInput","nameInput","statusSelect","reg","str","split","string","searchCondition","statusSelectChange","showCommodityInit","Demo","commodityListElev","shape","icon","SearchOutlined","padding","paddingTop","gutter","initialLoad","pageStart","loadMore","useWindow","ofStatusToChinese","arr","numberRefular","number","decimals","toFixed","Dashboard","ofDetail","sales","totalSales","todaySale","willDelivery","totalWillDelivery","delivery","totalDelivery","refund","totalRefund","refunded","totalRefunded","totalSuccess","totalof","ofSummary","percent","totalFinishedof","ofSuccessRate","timer1","setTimeout","chart","Chart","container","autoFit","coordinate","radius","scale","formatter","val","tooltip","showTitle","showMarkers","interval","position","content","adjust","interaction","clearTimeout","timer2","bordered","RangePicker","DatePicker","Om","date","ofDetails","confirmStatus","getColumns","ofid","changeOprationButtonWord","confirmChangeStatus","startStatus","endStatus","confirmEndStatus","dateOnChange","dateString","OmSearch","ofidInput","uidInput","dateSta","dateEnd","changeStatusAndPost","willdeliveryClick","deliveryClick","successClick","refundClick","refundedClick","locale","zh_CN","showTime","format","dateElev","expandable","onExpand","boo","tag","detail","user","commodityDetails","push","expandedRowRender","ind","address","uname","phone","Category","judgeCategoryNameIsExist","categoryName","addCategory","categoryInput","deleteCategory","caid","AddCategoryIsTrue","AddCategoryIsFalse","renderItem","Meta","Content","MeNu","menuClick","theme","mode","defaultSelectedKeys","PieChartOutlined","UserOutlined","AppstoreOutlined","AlignLeftOutlined","FileTextOutlined","AccountBookOutlined","Header","Layout","Sider","Home","collapsed","toggle","logoClick","showContent","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","Conten","showSider","trigger","collapsible","parse","getItem","action","info","fileList","Test","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b9f4c8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2.00b0783a.jpg\";","import React, { Component } from 'react';\r\nimport { Form, Input, Button, Checkbox, message, Image } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport reqwest from 'reqwest'\r\nimport pic from '../../assets/2.jpg'\r\n\r\nconst layout = {\r\n    labelCol: { span: 10 },\r\n    wrapperCol: { span: 50 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 0, span: 10 },\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            admin: {\r\n                asname: '',\r\n                password: ''\r\n            },\r\n            status: ''\r\n        }\r\n    }\r\n\r\n    submitHandle = () => {\r\n        // console.log(this.nameElem.props.value)\r\n        // console.log(this.passwordElem.props.value)\r\n        if (this.nameElem.props.value !== undefined && this.passwordElem.props.value !== undefined) {\r\n            let admin = this.state.admin\r\n            admin.asname = this.nameElem.props.value\r\n            admin.password = this.passwordElem.props.value\r\n            this.setState({\r\n                admin\r\n            }, () => {\r\n                // console.log(this.state.admin)\r\n                reqwest({\r\n                    url: '/login',\r\n                    method: 'post',\r\n                    type: 'json',\r\n                    data: this.state.admin\r\n                })\r\n                    .then((res) => {\r\n                        console.log(res)\r\n                        this.setState({\r\n                            status: res.status\r\n                        }, () => {\r\n                            let status = this.state.status\r\n                            if (status === 'success') {\r\n                                message.success(\"登陆成功！\")\r\n                                let adminObj = JSON.stringify(this.state.admin)\r\n                                // console.log(adminObj)\r\n                                sessionStorage.setItem(\"admin\", adminObj)\r\n                                window.location.href = \"./home\"\r\n                            } else {\r\n                                message.error(\"账号或密码错误！\")\r\n                                this.nameElem.input.value = ''\r\n                                this.passwordElem.input.value = ''\r\n                            }\r\n                        })\r\n                    }, () => {\r\n                        message.error(\"服务器出错！\")\r\n                    })\r\n                    .catch(err => {\r\n                        message.error(\"服务器出错！\")\r\n                    })\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Image id=\"pageLogin\" src={pic} preview={false} />\r\n                <div id=\"formWrap\">\r\n                    <p className=\"login-p\" style={{ color: 'white', fontSize: 18 }}>请使用您的账号密码登录系统</p>\r\n                    <Form\r\n                        initialValues={{ remember: true }}\r\n                        {...layout}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"asname\"\r\n                            rules={[{ required: true, message: '请输入你的用户名！' }]}\r\n                        >\r\n                            <Input ref={input => { this.nameElem = input }} style={{ borderRadius: 7 }} placeholder='请输入账号' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: '请输入你的密码！' }]}\r\n                        >\r\n                            <Input.Password ref={input => { this.passwordElem = input }} style={{ borderRadius: 7 }} placeholder='请输入密码' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                            <Checkbox style={{ color: 'white' }}>记住密码</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\" id=\"submit\" onClick={this.submitHandle} style={{ borderRadius: 7 }}>\r\n                                登陆\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <p className=\"login-p\" style={{ color: 'white' }}>CQUPT-Supermarket-Management-System</p>\r\n                    <p className=\"login-p\" style={{ color: 'white' }}>Designed By LTH</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button, message, PageHeader } from 'antd';\r\nimport './index.css'\r\nimport reqwest from 'reqwest';\r\n\r\nconst layout = {\r\n    labelCol: { span: 9 },\r\n    wrapperCol: { span: 5 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 10, span: 16 },\r\n};\r\n\r\n\r\nexport default class UimChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: {\r\n                uid: 1,\r\n                account: \"\",\r\n                upassword: \"\"\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onFinish = (predata, newdata) => {\r\n        if (newdata.modifiedpassword === predata.upassword) {\r\n            message.warning(\"密码未修改！\")\r\n        } else {\r\n            console.log(newdata)\r\n            reqwest({\r\n                // 后端接口\r\n                url: '/modifypassword',\r\n                method: 'post',\r\n                type: 'json',\r\n                // 传递给后端的数据\r\n                data: newdata,\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        message.success(\"密码修改成功！\")\r\n                        window.location.href = '/home/uim'\r\n                    } else {\r\n                        message.error(\"密码修改失败！\")\r\n                        window.location.href = '/home/uim'\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    componentWillMount = () => {\r\n        console.log(this.props)\r\n        this.setState({\r\n            data: this.props.data[0]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data = {\r\n            uid: 1,\r\n            account: \"\",\r\n            upassword: \"\"\r\n        } } = this.state\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => { window.location.href = '/home/uim' }}\r\n                    subTitle=\"用户信息管理/修改用户密码\"\r\n                    style={{ paddingLeft: 10, backgroundColor: 'white' }}\r\n                />\r\n                {/* <div style={{ backgroundColor: 'white', paddingTop: 9, paddingLeft: 10 }}>\r\n                    <Link to='/home/uim'>\r\n                        <ArrowLeftOutlined style={{ fontSize: 20 }} />\r\n                    </Link>\r\n                </div> */}\r\n                <Form\r\n                    {...layout}\r\n                    id=\"changePasswordFrom\"\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    size='large'\r\n                    onFinish={this.onFinish.bind(this, data)}\r\n                >\r\n                    <Form.Item\r\n                        label=\"uid\"\r\n                        name=\"uid\"\r\n                        required={false}\r\n                        initialValue={`${data.uid}`}\r\n                        hidden\r\n                    >\r\n                        <Input hidden />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"用户名称\"\r\n                        name=\"username\"\r\n                        required={false}\r\n                        initialValue={`${data.account}`}\r\n                    >\r\n                        <Input hidden />\r\n                        {data.account}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"用户密码\"\r\n                        name=\"modifiedpassword\"\r\n                        required={false}\r\n                        initialValue={`${data.upassword}`}\r\n                    >\r\n                        <Input.Password  />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            style={{ borderRadius: 5 }}\r\n                        >\r\n                            提交修改\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, } from 'react'\r\nimport { Descriptions, Divider, Breadcrumb, Table, Button, message, Popconfirm } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { BrowserRouter, Link, Route, Switch, } from 'react-router-dom'\r\nimport { nanoid } from 'nanoid'\r\nimport 'antd/dist/antd.css'\r\nimport './index.css'\r\nimport UimChangePassword from '../../../utils/UimChangePassword/UimChangePassword'\r\n\r\n\r\nconst getRandomuserParams = params => ({\r\n    current: params.pagination.current,\r\n    pageSize: params.pagination.pageSize,\r\n});\r\n\r\nexport default class Uim extends Component {\r\n    state = {\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 6,\r\n            total: ''\r\n        },\r\n        loading: false,\r\n        status: 0\r\n    };\r\n\r\n    confirm(uid) {\r\n        let { current, pageSize } = this.state.pagination\r\n        const data = { uid: uid, current, pageSize }\r\n        reqwest({\r\n            // 后端接口\r\n            url: '/deleteuser',\r\n            method: 'post',\r\n            type: 'json',\r\n            // 传递给后端的数据\r\n            data: data,\r\n        })\r\n            //根据返回的状态码status判断是否删除用户成功\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    data: res.users\r\n                })\r\n                if (res.status === 'success') {\r\n                    message.success('删除成功');\r\n                } else {\r\n                    message.error('删除失败');\r\n                }\r\n            })\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: '用户ID',\r\n            dataIndex: 'uid',\r\n            key: 'uid',\r\n        },\r\n        {\r\n            title: '账号',\r\n            dataIndex: 'account',\r\n            key: 'account'\r\n        },\r\n        {\r\n            title: '密码',\r\n            dataIndex: 'upassword',\r\n            key: 'upassword',\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'uid',\r\n            key: 'uid',\r\n            render: (uid) => {\r\n                return (\r\n                    <>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            style={{ borderRadius: 5 }}\r\n                        >\r\n                            <Link to={`/home/uim/changepassword/${uid}`}>\r\n                                更改密码\r\n                            </Link>\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            style={{ borderRadius: 5, marginLeft: 20 }}\r\n                            danger\r\n                        >\r\n                            <Popconfirm\r\n                                title=\"确定删除该用户吗?\"\r\n                                onConfirm={this.confirm.bind(this, uid)}\r\n                                okText=\"确认\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                删除用户\r\n                            </Popconfirm>\r\n                        </Button>\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        const { pagination } = this.state;\r\n        this.fetch({ pagination });\r\n    }\r\n\r\n    handleTableChange = (pagination) => {\r\n        console.log(pagination)\r\n        let { current, pageSize } = pagination\r\n        // console.log(pagination)\r\n        this.setState({\r\n            pagination: {\r\n                current,\r\n                pageSize\r\n            }\r\n        })\r\n        this.fetch({\r\n            pagination,\r\n        });\r\n    };\r\n\r\n    fetch = (params = {}) => {\r\n        this.setState({ loading: true });\r\n        reqwest({\r\n            // 后端接口\r\n            url: '/userlist',\r\n            method: 'post',\r\n            type: 'json',\r\n            // 传递给后端的数据\r\n            data: getRandomuserParams(params),\r\n        })\r\n            .then(data => {\r\n                console.log(data, 111111)\r\n                this.setState({\r\n                    loading: false,\r\n                    // 根据接口返回的数据源\r\n                    data: data.users,\r\n                    pagination: {\r\n                        ...params.pagination,\r\n                        // 根据接口返回的总条数\r\n                        total: data.total,\r\n                    },\r\n                });\r\n            })\r\n            ;\r\n    };\r\n\r\n    UimChangePasswordComponent = (props) => {\r\n        let uid = props.match.params.uid * 1\r\n        let dataitem = this.state.data.filter(item => {\r\n            if (item.uid === uid) {\r\n                return item\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        console.log(dataitem)\r\n        return <UimChangePassword data={dataitem} />\r\n    }\r\n\r\n    render() {\r\n        const { data, pagination, loading } = this.state;\r\n        // let encryptedUser = JSON.parse(JSON.stringify(data))\r\n        // encryptedUser.forEach(item => {\r\n        //     item.upassword = \"******\"\r\n        // })\r\n        // console.log(this.state.data)\r\n        function TableComponent() {\r\n            return <Table\r\n                columns={this.columns}\r\n                rowKey={nanoid()}\r\n                dataSource={data}\r\n                pagination={pagination}\r\n                loading={loading}\r\n                onChange={this.handleTableChange}\r\n            />\r\n        }\r\n        return (\r\n            <div>\r\n                <Divider style={{ margin: 0 }} />\r\n                <div className=\"descwraper\">\r\n                    <Breadcrumb className=\"bdc\">\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/home\">主页</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>用户信息管理</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Descriptions title=\"用户列表\" className=\"desc\">\r\n                        <Descriptions.Item>用户信息展示，可进行用户密码修改和删除用户操作</Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n                <div className=\"contentWraper\">\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path='/home/uim/changepassword/:uid?' component={this.UimChangePasswordComponent} />\r\n                            <Route path='/home/uim' component={TableComponent.bind(this)} />\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button, message, PageHeader, Upload } from 'antd';\r\nimport './index.css'\r\nimport axios from 'axios'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 6 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 10, span: 16 },\r\n};\r\n\r\nexport default class AdmAddAd extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            file: '',\r\n            adid: '',\r\n            adNumber: props\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    property = {\r\n        name: 'file',\r\n        headers: {\r\n            authorization: 'authorization-text'\r\n        },\r\n        beforeUpload: () => {\r\n            return false\r\n        },\r\n        maxCount: 1\r\n    };\r\n\r\n    uploadTheadid = () => {\r\n\r\n    }\r\n\r\n    onFinish = (data) => {\r\n        if (data.adCompany.search(/\\s/) === -1 && data.adName.search(/\\s/) === -1 && data.category.search(/\\s/) === -1) {\r\n            let formData = new FormData()\r\n            formData.append(\"file\", data.file.file);\r\n            formData.append(\"adCompany\", data.adCompany);\r\n            formData.append(\"adName\", data.adName);\r\n            formData.append(\"category\", data.category)\r\n            // console.log(data.file)\r\n            // console.log(formData.get(\"file\"))\r\n\r\n            axios({\r\n                // 后端接口\r\n                url: '/addad',\r\n                method: 'post',\r\n                // 传递给后端的数据\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    message.success(\"广告添加成功！\")\r\n                    window.location.href = '/home/adm'\r\n                }, () => {\r\n                    message.error(\"广告添加失败！\")\r\n                })\r\n        } else {\r\n            message.warning(\"输入内容不能含有空格！\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (this.state.adNumber >= 3) ? (window.location.href = \"/home/adm\") : (\r\n            <div>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => { window.location.href = '/home/adm' }}\r\n                    subTitle=\"广告投放管理/新增广告\"\r\n                    style={{ paddingLeft: 10, backgroundColor: 'white' }}\r\n                />\r\n                <Form\r\n                    {...layout}\r\n                    id=\"addAdForm\"\r\n                    name=\"basic\"\r\n                    size=\"large\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    encType=\"multipart/form-data\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"广告公司\"\r\n                        name=\"adCompany\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入广告公司名称！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"广告名称\"\r\n                        name=\"adName\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入广告名称！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"所属分类\"\r\n                        name=\"category\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入广告分类！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"图片地址\"\r\n                        name=\"file\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入广告图片地址！' }]}\r\n                    >\r\n                        <Upload {...this.property}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"middle\"\r\n                                style={{ borderRadius: 5 }}\r\n                            >\r\n                                上传图片\r\n                            </Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" style={{ borderRadius: 5 }}>\r\n                            添加\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport { Descriptions, Divider, Breadcrumb, Button, message, Popconfirm, Table, Upload, Image } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport axios from 'axios'\r\nimport AdmAddAd from '../../../utils/AdmAddAd/AdmAddAd'\r\nimport 'antd/dist/antd.css'\r\nimport './index.css'\r\n\r\n\r\nexport default class Adm extends Component {\r\n    state = {\r\n        adData: [],\r\n        adid: ''\r\n    }\r\n\r\n    property = {\r\n        name: 'file',\r\n        headers: {\r\n            authorization: 'authorization-text'\r\n        },\r\n        showUploadList: false,\r\n        customRequest: (data) => {\r\n            console.log(this.state.adData)\r\n\r\n            let formData = new FormData()\r\n            formData.append(\"file\", data.file);\r\n            formData.append(\"adid\", this.state.adid);\r\n            axios({\r\n                // 后端接口\r\n                url: '/modifyad',\r\n                method: 'post',\r\n                // 传递给后端的数据\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    let newData = res.data\r\n                    if (newData.status === '图片修改成功') {\r\n                        let adData = this.state.adData\r\n                        adData.forEach(item => {\r\n                            if (item.adid === this.state.adid) {\r\n                                item.picture = newData.url\r\n                            }\r\n                        })\r\n                        this.setState({\r\n                            adData\r\n                        })\r\n                        message.success(\"广告图片更改成功！\")\r\n                    } else {\r\n                        message.error(\"广告图片更改失败！\")\r\n                    }\r\n                })\r\n        },\r\n        maxCount: 1\r\n    };\r\n\r\n    confirm(adid) {\r\n        const data = { adid: adid }\r\n        console.log(this.state.adData)\r\n        reqwest({\r\n            // 后端接口\r\n            url: '/deletead',\r\n            method: 'post',\r\n            type: 'json',\r\n            // 传递给后端的数据\r\n            data: data,\r\n        })\r\n            //根据返回的状态码status判断是否删除广告成功\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.status === \"success\") {\r\n                    this.setState({\r\n                        adData: res.results\r\n                    })\r\n                    message.success('删除成功');\r\n                } else {\r\n                    message.error('删除失败');\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    getAdid = (adid) => {\r\n        this.setState({\r\n            adid\r\n        })\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: 'adid',\r\n            dataIndex: 'adid',\r\n            key: 'adid',\r\n            defaultSortOrder: 'ascend',\r\n            sorter: (a, b) => a.adid - b.adid,\r\n        },\r\n        {\r\n            title: '广告公司',\r\n            dataIndex: 'adCompany',\r\n            key: 'adCompany',\r\n        },\r\n        {\r\n            title: '广告名称',\r\n            dataIndex: 'adName',\r\n            key: 'adName',\r\n        },\r\n        {\r\n            title: '所属分类',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n        },\r\n        {\r\n            title: '广告图片',\r\n            key: 'picture',\r\n            dataIndex: 'picture',\r\n            render: picture => (\r\n                <>\r\n                    <Image\r\n                        preview={false}\r\n                        width={150}\r\n                        src={picture}\r\n                    />\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'adid',\r\n            key: 'operation',\r\n            render: (adid) => {\r\n                return (\r\n                    <>\r\n                        <Upload {...this.property}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                style={{ borderRadius: 5 }}\r\n                                onClick={this.getAdid.bind(this, adid)}\r\n                            >\r\n                                修改图片\r\n                            </Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            style={{ borderRadius: 5, marginLeft: 13 }}\r\n                            danger\r\n                        >\r\n                            <Popconfirm\r\n                                title=\"确定删除该广告吗?\"\r\n                                onConfirm={this.confirm.bind(this, adid)}\r\n                                okText=\"确认\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                删除广告\r\n                            </Popconfirm>\r\n                        </Button>\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    TableComponent = () => {\r\n        return <Table columns={this.columns} dataSource={this.state.adData} pagination={false} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        reqwest({\r\n            url: '/adlist',\r\n            method: 'get',\r\n            type: 'json',\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    adData: res\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"我被渲染了\")\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className=\"descwraper\">\r\n                        <Breadcrumb className=\"bdc\">\r\n                            <Breadcrumb.Item>\r\n                                <a href=\"/home\">主页</a>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>广告投放管理</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <Descriptions title=\"广告管理\" className=\"desc\">\r\n                            <Descriptions.Item>广告信息展示，可以进行新增广告，更改广告，删除广告操作。注意：最多只允许3个广告位</Descriptions.Item>\r\n                        </Descriptions>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        {(this.state.adData.length >= 3)\r\n                            ?\r\n                            <Button\r\n                                type=\"primary\"\r\n                                style={{ marginBottom: 10, marginTop: 10, borderRadius: 5 }}\r\n                                danger\r\n                            >\r\n                                广告位已达3位\r\n                            </Button>\r\n                            :\r\n                            <Button\r\n                                type=\"primary\"\r\n                                style={{ marginBottom: 10, marginTop: 10, borderRadius: 5 }}\r\n                            >\r\n                                <Link to='/home/adm/addad'>新增广告</Link>\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                    <div className=\"contentWraper\">\r\n                        <Switch>\r\n                            <Route path='/home/adm/addad' component={AdmAddAd.bind(this,this.state.adData.length)} />\r\n                            <Route path='/home/adm' component={this.TableComponent} />\r\n                        </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Divider, Input, Popconfirm, Button, message, Image } from 'antd';\r\nimport { EditOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport reqwest from 'reqwest';\r\nimport './index.css'\r\n\r\nexport default class CommodityCard extends Component {\r\n    state = {\r\n        data: {},\r\n        isEdit: false\r\n    }\r\n\r\n    edit = () => {\r\n        this.setState({\r\n            isEdit: true\r\n        })\r\n\r\n    }\r\n    // 删除商品操作\r\n    delete = (cid) => {\r\n        console.log(typeof cid)\r\n        this.props.renderCommodityList(cid)\r\n    }\r\n    // 确认编辑操作,发送表单请求到后端\r\n    comfimEdit = () => {\r\n        const [\r\n            cid,\r\n            currentPrice,\r\n            inventory,\r\n            originalPrice,\r\n        ] = [\r\n                this.state.data.cid,\r\n                this.currentPriceElev.state.value,\r\n                this.inventoryElev.state.value,\r\n                this.originalPriceElev.state.value,\r\n            ]\r\n        const newData = {\r\n            cid,\r\n            currentPrice,\r\n            inventory,\r\n            originalPrice,\r\n        }\r\n        console.log(this.state.data)\r\n        console.log(newData)\r\n        reqwest({\r\n            url: '/editcommodity',\r\n            method: 'post',\r\n            type: 'json',\r\n            data: newData\r\n        })\r\n            .then(res => {\r\n                if (res.status === \"success\") {\r\n                    message.success(\"更改成功！\")\r\n                    console.log(this.state.data)\r\n                    let oldData = this.state.data;\r\n                    [\r\n                        oldData.currentPrice,\r\n                        oldData.inventory,\r\n                        oldData.originalPrice,\r\n                    ] = [\r\n                            newData.currentPrice,\r\n                            newData.inventory,\r\n                            newData.originalPrice,\r\n                        ]\r\n                    this.setState({\r\n                        data: oldData,\r\n                        isEdit: false\r\n                    })\r\n                } else {\r\n                    message.error(\"更改失败！\")\r\n                    let oldData = this.state.data;\r\n                    this.setState({\r\n                        data: oldData,\r\n                        isEdit: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    // 属性函数化\r\n    propertyEdit = (keyword) => {\r\n        const item = this.state.data\r\n        const isEdit = this.state.isEdit\r\n        return (isEdit)\r\n            ?\r\n            <Input className='editInput' defaultValue={item[keyword]} onChange={this[`${keyword}Change`]} ref={elev => { this[`${keyword}Elev`] = elev }} />\r\n            :\r\n            item[keyword]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            data: this.props.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const item = this.state.data\r\n        if (item.src === undefined ) {\r\n            // console.log(item)\r\n        }\r\n        const isEdit = this.state.isEdit\r\n        return (\r\n            <Card\r\n                style={{ width: 307, height: 375, margin: '0 auto' }}\r\n                cover={\r\n                    <Image\r\n                        alt=\"图片出错\"\r\n                        src={item.src}\r\n                        height={186}\r\n                        width={307}\r\n                        preview={false}\r\n                    />\r\n                }\r\n                actions={[\r\n                    (isEdit)\r\n                        ?\r\n                        <Button type='primary' size=\"small\" style={{ borderRadius: 5 }} onClick={this.comfimEdit}>确认</Button>\r\n                        :\r\n                        <EditOutlined key=\"edit\" onClick={this.edit} />,\r\n                    <Popconfirm\r\n                        title=\"确定删除该商品吗?\"\r\n                        onConfirm={this.delete.bind(this, item.cid)}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <CloseOutlined key=\"ellipsis\" />\r\n                    </Popconfirm>\r\n                ]}\r\n            // loading={true}\r\n            >\r\n                <p style={{ margin: '10PX 0 0 0 ', fontWeight: 900, fontSize: 18, textAlign: 'center' }}>{item.commodityName}</p>\r\n                <div className='detailWraper'>\r\n                    <div className='detail'>编号: {item.cid}\r\n                    </div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail'>现价: {this.propertyEdit('currentPrice')}元</div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail'>进货量: {this.propertyEdit('inventory')}件 </div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail'>规格: {item.weight}g </div>\r\n                </div>\r\n                <div className='detailWraper'>\r\n                    <div className='detail' title={item.category}>分类: {item.category} </div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail'>原价: {this.propertyEdit('originalPrice')}元 </div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail'>销量: {item.salesVolume}件 </div>\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className='detail' title={item.originalPlace}>产地: {item.originalPlace} </div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, message, PageHeader, Select, Upload } from 'antd';\r\nimport { nanoid } from 'nanoid'\r\nimport axios from 'axios'\r\nimport './index.css'\r\nimport reqwest from 'reqwest';\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 6 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 10, span: 16 },\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nexport default class CimAddCommodity extends Component {\r\n\r\n    state = {\r\n        subCategory: [],\r\n    }\r\n\r\n    property = {\r\n        name: 'file',\r\n        headers: {\r\n            authorization: 'authorization-text',\r\n        },\r\n        beforeUpload: () => {\r\n            return false\r\n        },\r\n        maxCount: 1\r\n    };\r\n\r\n    onFinish = (data) => {\r\n            // 处理空格\r\n            data.commodityName = data.commodityName.toString().replace(/\\s/,'') \r\n            data.originalPlace = data.originalPlace.toString().replace(/\\s/,'') \r\n\r\n            data.currentPrice = data.originalPrice\r\n            data.status = \"在售\"\r\n            data.salesVolume = 0\r\n            data.file = data.file.file\r\n            let formData = new FormData()\r\n            formData.append(\"commodityName\", data.commodityName)\r\n            formData.append(\"inventory\", data.inventory)\r\n            formData.append(\"originalPrice\", data.originalPrice)\r\n            formData.append(\"currentPrice\", data.currentPrice)\r\n            formData.append(\"originalPlace\", data.originalPlace)\r\n            formData.append(\"weight\", data.weight)\r\n            formData.append(\"category\", data.category)\r\n            formData.append(\"status\", data.status)\r\n            formData.append(\"salesVolume\", data.salesVolume)\r\n            formData.append(\"file\", data.file)\r\n            axios({\r\n                // 后端接口\r\n                url: '/addcommodity',\r\n                method: 'post',\r\n                // 传递给后端的数据\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    message.success(\"商品添加成功！\")\r\n                    window.location.href = '/home/cim'\r\n                }, () => {\r\n                    message.error(\"商品添加失败！\")\r\n                })\r\n    };\r\n\r\n    // 渲染分类下拉框的选项\r\n    showCategoryList = () => {\r\n        return this.state.subCategory.map((item, index) => {\r\n            return <Option value={`${item.category}`} key={nanoid()}>{item.category}</Option>\r\n        })\r\n    }\r\n\r\n    // 获取下拉框的值\r\n    categorySelectChange = (e) => {\r\n        this.categorySelect.value = e\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        console.log(e.target.files[0])\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // 请求分类列表\r\n        reqwest({\r\n            url: '/category/allcategory',\r\n            method: 'get',\r\n            type: 'json'\r\n        })\r\n            .then(res => {\r\n                // console.log(res.results)\r\n                this.setState({\r\n                    subCategory: res\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contentWraper\" style={{ minHeight: 0 }}>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => { window.location.href = '/home/cim' }}\r\n                    subTitle=\"商品信息管理/新增商品\"\r\n                    style={{ paddingLeft: 10, backgroundColor: 'white' }}\r\n                />\r\n                <Form\r\n                    {...layout}\r\n                    id=\"addCommodityForm\"\r\n                    name=\"basic\"\r\n                    size=\"large\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item\r\n                        label=\"商品名称\"\r\n                        name=\"commodityName\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入商品名称！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品分类\"\r\n                        name=\"category\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请选择商品分类！' }]}\r\n                    >\r\n                        <Select\r\n                            name='category'\r\n                            style={{ width: '100%' }}\r\n                            // defaultValue='onsale'\r\n                            ref={elev => { this.categorySelect = elev }}\r\n                            onChange={this.categorySelectChange}\r\n                        >\r\n                            {this.showCategoryList()}\r\n                        </Select >\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        hidden\r\n                        name=\"status\"\r\n                    >\r\n                        <Input value=\"\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        hidden\r\n                        label=\"商品售价\"\r\n                        name=\"currentPrice\"\r\n                    // required={false}\r\n                    // rules={[{ required: true, message: '请输入商品售价！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品价格\"\r\n                        name=\"originalPrice\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入商品原价！' }]}\r\n                    >\r\n                        <InputNumber className=\"input-number\" min={0} />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"商品库存\"\r\n                        name=\"inventory\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入商品库存！' }]}\r\n                    >\r\n                        <InputNumber className=\"input-number\" min={0} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        hidden\r\n                        name=\"salesVolume\"\r\n                    >\r\n                        <Input value=\"\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品规格\"\r\n                        name=\"weight\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入商品规格！' }]}\r\n                    >\r\n                        <InputNumber className=\"input-number\" min={0}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品产地\"\r\n                        name=\"originalPlace\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请输入商品产地！' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"商品图片\"\r\n                        name=\"file\"\r\n                        required={false}\r\n                        rules={[{ required: true, message: '请上传商品图片！' }]}\r\n                    >\r\n                        <Upload {...this.property}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"middle\"\r\n                                style={{ borderRadius: 5 }}\r\n                            >\r\n                                上传图片\r\n                            </Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" style={{ borderRadius: 5 }}>\r\n                            添加\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Divider, Breadcrumb, Button, Input, message, InputNumber, Empty, Select, Col, Row, Space, Affix } from 'antd';\r\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { nanoid } from 'nanoid'\r\nimport './index.css'\r\nimport reqwest from 'reqwest';\r\nimport CommodityCard from '../../../utils/CimCommodityCard/CommodityCard'\r\nimport CimAddCommodity from '../../../utils/CimAddCommodity/CimAddCommodity'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class Cim extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        subCategory: [],\r\n        loading: false,\r\n        hasMore: true,\r\n        total: '',\r\n        isAddCategory: false,\r\n        count: 0,\r\n        pageSize: 8\r\n    };\r\n\r\n    fetchData = callback => {\r\n        let count = this.state.count\r\n        let pageSize = this.state.pageSize\r\n        count += 1\r\n        this.setState({\r\n            count: count\r\n        })\r\n        let data = { count, pageSize }\r\n        reqwest({\r\n            url: '/commoditylist',\r\n            type: 'json',\r\n            method: 'post',\r\n            data: data,\r\n            success: res => {\r\n                callback(res);\r\n            },\r\n        });\r\n    };\r\n\r\n    handleInfiniteOnLoad = () => {\r\n        let { data, total } = this.state;\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        if (data.length >= total) {\r\n            message.warning('商品已展示完毕');\r\n            this.setState({\r\n                hasMore: false,\r\n                loading: false,\r\n            });\r\n            return;\r\n        }\r\n        this.fetchData(res => {\r\n            data = data.concat(res.commodities);\r\n            this.setState({\r\n                data,\r\n                loading: false,\r\n                total: res.total\r\n            });\r\n        });\r\n    };\r\n\r\n    // 删除操作，请求数据库重新渲染数据到页面\r\n    renderCommodityList = (cid) => {\r\n        let count = this.state.count\r\n        let pageSize = this.state.pageSize\r\n        let end = count * pageSize\r\n        reqwest({\r\n            url: '/deletecommodity',\r\n            method: 'post',\r\n            type: 'json',\r\n            data: { cid, end }\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    data: res.commodities\r\n                })\r\n                message.success('删除成功');\r\n            }, () => {\r\n                message.error('删除失败');\r\n            })\r\n    }\r\n    // 展示商品列表\r\n    showCommodity = () => {\r\n        console.log(this.state.data)\r\n        return this.state.data.map((item, index) => {\r\n            return (\r\n                // 循环项的key值，不要用index，可以用nanoid来设置\r\n                <Col span={6} style={{ marginBottom: 20 }} key={nanoid()} >\r\n                    <CommodityCard data={item} renderCommodityList={this.renderCommodityList} />\r\n                </Col>\r\n            )\r\n        })\r\n    }\r\n    // 搜索商品\r\n    CimSearch = () => {\r\n        let [cid, commodityName = ' ', category = ' ', status] = [\r\n            this.idInput.value,\r\n            this.nameInput.state.value,\r\n            this.categorySelect.value,\r\n            (undefined === this.statusSelect.value) ? this.statusSelect.props.defaultValue : this.statusSelect.value\r\n        ]\r\n        // 去除搜索内容中的空格，常见标点符号\r\n        function reg(str) {\r\n            str = str.replace(/\\s/g, ',')\r\n            str = str.split(/[,，；;.。]/g)\r\n            let string = ''\r\n            str.forEach(item => {\r\n                if (item !== '') {\r\n                    string += (item)\r\n                }\r\n            })\r\n            return string\r\n        }\r\n        commodityName = reg(commodityName)\r\n        category = reg(category)\r\n        if (cid !== '') {\r\n            cid *= 1\r\n        }\r\n        const searchCondition = { cid, commodityName, category, status }\r\n        console.log(searchCondition)\r\n        reqwest({\r\n            url: '/searchcommodity',\r\n            method: 'post',\r\n            type: 'json',\r\n            data: searchCondition\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.status === 'success') {\r\n                    this.setState({\r\n                        data: res.commodities,\r\n                        total:res.total\r\n                    })\r\n                    message.success(\"搜索成功！\")\r\n                } else {\r\n                    message.error(\"查无该商品！\")\r\n                }\r\n\r\n            })\r\n    }\r\n    // 获取下拉框的值\r\n    statusSelectChange = (e) => {\r\n        console.log(e)\r\n        this.statusSelect.value = e\r\n    }\r\n    categorySelectChange = (e) => {\r\n        console.log(e)\r\n        this.categorySelect.value = e\r\n    }\r\n    // 渲染分类下拉框的选项\r\n    showCategoryList = () => {\r\n        return this.state.subCategory.map((item, index) => {\r\n            // console.log(item.category)\r\n            return <Option value={`${item.category}`} key={nanoid()}>{item.category}</Option>\r\n        })\r\n    }\r\n    // 渲染初始商品操作页面\r\n    showCommodityInit = () => {\r\n        const Demo = () => {\r\n            return (\r\n                <div className=\"background\">\r\n                    <Affix target={() => this.commodityListElev}>\r\n                        <div className=\"search\">\r\n                            <Divider style={{ margin: 0 }} />\r\n                            <Space style={{ marginTop: 20 }} size={20}>\r\n                                <div>\r\n                                    商品编号:\r\n                                    <InputNumber name='cid' className=\"CimInput\" min={0} ref={elev => { this.idInput = elev }} />\r\n                                </div>\r\n                                <div>\r\n                                    商品名称:\r\n                                    <Input name=\"commodity\" className=\"CimInput\" ref={elev => { this.nameInput = elev }} />\r\n                                </div>\r\n                                <div>\r\n                                    商品分类:\r\n                                    <Select\r\n                                        name='category'\r\n                                        style={{ width: 100 }}\r\n                                        ref={elev => { this.categorySelect = elev }}\r\n                                        onChange={this.categorySelectChange}\r\n                                    >\r\n                                        {this.showCategoryList()}\r\n                                    </Select >\r\n                                </div>\r\n                                <div>\r\n                                    商品状态:\r\n                                    <Select\r\n                                        name='status'\r\n                                        style={{ width: 100 }}\r\n                                        defaultValue='在售'\r\n                                        ref={elev => { this.statusSelect = elev }}\r\n                                        onChange={this.statusSelectChange}\r\n                                    >\r\n                                        <Option value=\"在售\">在售</Option>\r\n                                        <Option value=\"已下架\">已下架</Option>\r\n                                    </Select >\r\n                                </div>\r\n                                <div style={{ marginLeft: 20 }}>\r\n                                    <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} onClick={this.CimSearch} />\r\n                                </div>\r\n                                <div style={{ marginLeft: 20 }}>\r\n                                    <Button type=\"primary\" style={{ borderRadius: 5 }}>\r\n                                        <Link to=\"/home/cim/addcommodity\">\r\n                                            添加商品\r\n                                        </Link>\r\n                                    </Button>\r\n                                </div>\r\n                            </Space>\r\n                        </div>\r\n                    </Affix>\r\n                </div>\r\n            );\r\n        };\r\n        return <>\r\n            <Demo />\r\n            <div className=\"contentWraper\">\r\n                <div style={{ padding: 0 }}>\r\n                    {/* {console.log(this.state.data)} */}\r\n                    {(undefined === this.state.data[0]) ? <Empty style={{ paddingTop: 150 }} /> :\r\n                        <Row gutter={10} className=\"\">\r\n                            {\r\n                                this.showCommodity()\r\n                            }\r\n                        </Row>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"页面初始渲染\")\r\n        this.fetchData(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                data: res.commodities,\r\n                total: res.total\r\n            });\r\n        });\r\n        // 请求分类列表\r\n        reqwest({\r\n            url: '/category/allcategory',\r\n            method: 'get',\r\n            type: 'json'\r\n        })\r\n            .then(res => {\r\n                // console.log(res.results)\r\n                this.setState({\r\n                    subCategory: res\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-scroll\" ref={elev => { this.commodityListElev = elev }}>\r\n                <InfiniteScroll\r\n                    initialLoad={false}\r\n                    pageStart={0}\r\n                    loadMore={this.handleInfiniteOnLoad}\r\n                    hasMore={!this.state.loading && this.state.hasMore}\r\n                    useWindow={false}\r\n                >\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <div className=\"descwraper\">\r\n                        <Breadcrumb className=\"bdc\">\r\n                            <Breadcrumb.Item>\r\n                                <a href=\"/home\">主页</a>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>商品信息管理</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <Descriptions title=\"商品管理\" className=\"desc\">\r\n                            <Descriptions.Item>仓库商品信息展示，可以进行新增商品，搜索商品，编辑商品，删除商品操作</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </div>\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"/home/cim/addcommodity\" component={CimAddCommodity} />\r\n                            <Route path=\"/home/cim\" component={this.showCommodityInit} />\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </InfiniteScroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","let ofStatusToChinese = (arr) => {\r\n    arr.forEach(item => {\r\n        console.log(item.status)\r\n        if (item.status === undefined) {\r\n            switch (item.item) {\r\n                case \"willDelivery\":\r\n                    item.item = \"待发货\"\r\n                    break;\r\n                case \"delivery\":\r\n                    item.item = \"配送中\"\r\n                    break;\r\n                case \"success\":\r\n                    item.item = \"已成交\"\r\n                    break;\r\n                case \"refund\":\r\n                    item.item = \"待退款\"\r\n                    break;\r\n                case \"refunded\":\r\n                    item.item = \"已退款\"\r\n                    break;\r\n                case \"totalSuccess\":\r\n                    item.item = \"总成交数\"\r\n                    break;\r\n                case \"totalRefunded\":\r\n                    item.item = \"总失败数\"\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        } else {\r\n            switch (item.status) {\r\n                case \"willdelivery\":\r\n                    item.status = \"待发货\"\r\n                    break;\r\n                case \"delivery\":\r\n                    item.status = \"配送中\"\r\n                    break;\r\n                case \"success\":\r\n                    item.status = \"已成交\"\r\n                    break;\r\n                case \"refund\":\r\n                    item.status = \"待退款\"\r\n                    break;\r\n                case \"refunded\":\r\n                    item.status = \"已退款\"\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\nexport default ofStatusToChinese","export default function numberRefular (number,decimals = 2) {\r\n    console.log(number.toFixed(decimals) * 1)\r\n    return number.toFixed(decimals) * 1\r\n}","import React, { Component } from 'react'\r\nimport { Card, Col, Row } from 'antd';\r\nimport { Chart } from '@antv/g2';\r\nimport reqwest from 'reqwest'\r\nimport './index.css';\r\n// 引用工具\r\nimport ofStatusToChinese from '../../../utils/ofStatusToChinese';\r\nimport numberRefular from '../../../utils/numberRegular';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    state = {\r\n        results: {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        reqwest({\r\n            url: \"/dashboard/showdashboard\",\r\n            type: \"json\",\r\n            method: \"get\",\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                // 处理数据\r\n                let ofDetail = {\r\n                    sales: {\r\n                        totalSales: res.totalSales,\r\n                        todaySale: res.todaySale\r\n                    },\r\n                    willDelivery: {\r\n                        totalWillDelivery: res.willDelivery,\r\n                    },\r\n                    delivery: {\r\n                        totalDelivery: res.delivery,\r\n                    },\r\n                    refund: {\r\n                        totalRefund: res.refund,\r\n                    },\r\n                    refunded: {\r\n                        totalRefunded: res.refunded,\r\n                    },\r\n                    success: {\r\n                        totalSuccess: res.success,\r\n                    }\r\n                }\r\n                let totalof = res.willDelivery + res.delivery + res.success + res.refund + res.refunded\r\n                console.log(typeof (res.willDelivery * 1.0 / totalof).toFixed(4))\r\n                let ofSummary = [\r\n                    {\r\n                        item: \"willDelivery\",\r\n                        count: res.willDelivery,\r\n                        percent: numberRefular(res.willDelivery * 1.0 / totalof)\r\n                    },\r\n                    {\r\n                        item: \"delivery\",\r\n                        count: res.delivery,\r\n                        percent: numberRefular(res.delivery * 1.0 / totalof)\r\n                    },\r\n                    {\r\n                        item: \"success\",\r\n                        count: res.success,\r\n                        percent: numberRefular(res.success * 1.0 / totalof)\r\n                    },\r\n                    {\r\n                        item: \"refund\",\r\n                        count: res.refund,\r\n                        percent: numberRefular(res.refund * 1.0 / totalof)\r\n                    },\r\n                    {\r\n                        item: \"refunded\",\r\n                        count: res.refunded,\r\n                        percent: numberRefular(res.refunded * 1.0 / totalof)\r\n                    }\r\n                ]\r\n                let totalFinishedof = res.success + res.refunded\r\n                let ofSuccessRate = [\r\n                    {\r\n                        item: \"totalSuccess\",\r\n                        count: res.success,\r\n                        percent: numberRefular(res.success / totalFinishedof)\r\n                    },\r\n                    {\r\n                        item: \"totalRefunded\",\r\n                        count: res.refunded,\r\n                        percent: numberRefular(res.refunded / totalFinishedof)\r\n                    }\r\n                ]\r\n                ofStatusToChinese(ofSummary)\r\n                ofStatusToChinese(ofSuccessRate)\r\n                let results = {\r\n                    ofDetail,\r\n                    ofSummary,\r\n                    ofSuccessRate\r\n                }\r\n                this.setState({\r\n                    results: results\r\n                }, () => {\r\n                    const results = this.state.results\r\n                    let timer1 = setTimeout(() => {\r\n                        const data = results.ofSummary;\r\n\r\n                        const chart = new Chart({\r\n                            container: 'order-from-details',\r\n                            autoFit: true,\r\n                            height: 300,\r\n                            width: 630\r\n                        });\r\n\r\n                        chart.coordinate('theta', {\r\n                            radius: 0.75,\r\n                        });\r\n\r\n                        chart.data(data);\r\n\r\n                        chart.scale('percent', {\r\n                            formatter: (val) => {\r\n                                val = val * 100 + '%';\r\n                                return val;\r\n                            },\r\n                        });\r\n\r\n                        chart.tooltip({\r\n                            showTitle: false,\r\n                            showMarkers: false,\r\n                        });\r\n\r\n                        chart\r\n                            .interval()\r\n                            .position('percent')\r\n                            .color('item')\r\n                            .label('percent', {\r\n                                content: (data) => {\r\n                                    return `${data.item}: ${data.percent * 100}%`;\r\n                                },\r\n                            })\r\n                            .adjust('stack');\r\n\r\n                        chart.interaction('element-active');\r\n\r\n                        chart.render();\r\n\r\n                        clearTimeout(timer1)\r\n\r\n                    }, 0);\r\n\r\n                    let timer2 = setTimeout(() => {\r\n                        const data = results.ofSuccessRate;\r\n\r\n                        const chart = new Chart({\r\n                            container: 'order-finish-rate',\r\n                            autoFit: true,\r\n                            height: 300,\r\n                            width: 630\r\n\r\n                        });\r\n\r\n                        chart.coordinate('theta', {\r\n                            radius: 0.75,\r\n                        });\r\n\r\n                        chart.data(data);\r\n\r\n                        chart.scale('percent', {\r\n                            formatter: (val) => {\r\n                                val = val * 100 + '%';\r\n                                return val;\r\n                            },\r\n                        });\r\n\r\n                        chart.tooltip({\r\n                            showTitle: false,\r\n                            showMarkers: false,\r\n                        });\r\n\r\n                        chart\r\n                            .interval()\r\n                            .position('percent')\r\n                            .color('item')\r\n                            .label('percent', {\r\n                                content: (data) => {\r\n                                    return `${data.item}: ${data.percent * 100}%`;\r\n                                },\r\n                            })\r\n                            .adjust('stack');\r\n\r\n                        chart.interaction('element-active');\r\n\r\n                        chart.render();\r\n\r\n                        clearTimeout(timer2)\r\n\r\n                    }, 0);\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const ofDetail = this.state.results.ofDetail\r\n        console.log(ofDetail, this.state.results)\r\n        return (\r\n            <div className=\"contentWraper\">\r\n                <div className=\"site-card-wrapper \">\r\n                    <Row gutter={16}>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                className=\"data-card\"\r\n                                title={`今日新增：${(undefined === ofDetail) ? 0 : ofDetail.sales.todaySale}元`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                    总销售额：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.sales.totalSales}`}元\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                title={`待发货`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                    累计数量：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.willDelivery.totalWillDelivery}`}\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                title={`配送中`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                累计数量：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.delivery.totalDelivery}`}\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                title={`待退款`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                累计数量：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.refund.totalRefund}`}\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                title={`已退款`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                累计数量：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.refunded.totalRefunded}`}\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                title={`已成交`}\r\n                                bordered={true}\r\n                            >\r\n                                <div className=\"dataCard\">\r\n                                累计数量：<br />\r\n                                    <div className='Card_data'>\r\n                                        {`${(undefined === ofDetail) ? 0 : ofDetail.success.totalSuccess}`}\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"chart-rule\">\r\n                    <div className=\"chart-wraper\">\r\n                        <div className=\"chart-title\" >订单状态比率</div>\r\n                        <div id=\"order-from-details\"></div>\r\n                    </div>\r\n                    <div className=\"chart-wraper\">\r\n                        <div className=\"chart-title\">订单成败比率</div>\r\n                        <div id=\"order-finish-rate\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Divider, Breadcrumb, Button, Input, message, InputNumber, DatePicker, Table, ConfigProvider, Popconfirm, Space, Empty } from 'antd';\r\nimport { nanoid } from 'nanoid'\r\nimport reqwest from 'reqwest';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport './index.css'\r\n// 配置中文环境\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport 'moment/locale/zh-cn';\r\n// 引用工具\r\nimport ofStatusToChinese from '../../../utils/ofStatusToChinese';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class Om extends Component {\r\n\r\n    state = {\r\n        date: [],\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 5,\r\n            total: ''\r\n        },\r\n        loading: false,\r\n        status: 'willdelivery',\r\n        ofDetails: []\r\n    };\r\n\r\n    // 根据状态来切换订单信息中订单状态的className来切换其颜色\r\n    confirmStatus = () => {\r\n        switch (this.state.status) {\r\n            case \"willdelivery\":\r\n                return \"willdelivery\"\r\n            case \"delivery\":\r\n                return \"delivery\"\r\n            case \"success\":\r\n                return \"success\"\r\n            case \"refund\":\r\n                return \"refund\"\r\n            case \"refunded\":\r\n                return \"refunded\"\r\n            default:\r\n                return \"sendgoods\"\r\n        }\r\n    }\r\n\r\n    getColumns = () => {\r\n        let columns = [\r\n            {\r\n                title: '订单id',\r\n                dataIndex: 'ofid',\r\n                key: 'ofid',\r\n                defaultSortOrder: 'ascend',\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: '用户id',\r\n                dataIndex: 'uid',\r\n                key: 'uid'\r\n            },\r\n            {\r\n                title: '总价',\r\n                dataIndex: 'totalPrice',\r\n                key: 'totalPrice',\r\n            },\r\n\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'remarks',\r\n                key: 'remarks',\r\n            },\r\n            {\r\n                title: '订单状态',\r\n                dataIndex: 'status',\r\n                key: 'status',\r\n                className: this.confirmStatus()\r\n            },\r\n            (this.state.status !== \"success\" && this.state.status !== \"refunded\")\r\n                ?\r\n                {\r\n                    title: '操作',\r\n                    dataIndex: 'ofid',\r\n                    key: 'ofid',\r\n                    render: (ofid) => {\r\n                        return (\r\n                            <>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    style={{ borderRadius: 5, marginLeft: 20 }}\r\n                                >\r\n                                    <Popconfirm\r\n                                        title={`确定${this.changeOprationButtonWord(this.state.status)}吗?`}\r\n                                        onConfirm={this.confirmChangeStatus.bind(this, ofid)}\r\n                                        okText=\"确认\"\r\n                                        cancelText=\"取消\"\r\n                                    >\r\n                                        {this.changeOprationButtonWord(this.state.status)}\r\n                                    </Popconfirm>\r\n                                </Button>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n                :\r\n                {\r\n                    className: \"of-last-item-hidden\"\r\n                }\r\n        ];\r\n        return columns\r\n    }\r\n\r\n    // 更改操作按钮中的文字\r\n    changeOprationButtonWord = (status) => {\r\n        switch (status) {\r\n            case \"willdelivery\":\r\n                return \"发货\"\r\n            case \"delivery\":\r\n                return \"完成订单\"\r\n            case \"refund\":\r\n                return \"退款\"\r\n            default:\r\n                return \"发货\"\r\n        }\r\n    }\r\n\r\n    // 确认更改订单状态操作\r\n    confirmChangeStatus = (ofid) => {\r\n        let { current, pageSize } = this.state.pagination\r\n        const data = {\r\n            ofid: ofid,\r\n            current,\r\n            pageSize,\r\n            startStatus: this.state.status,\r\n            endStatus: this.confirmEndStatus()\r\n        }\r\n        reqwest({\r\n            // 后端接口\r\n            url: '/om/changeofstatus',\r\n            method: 'post',\r\n            type: 'json',\r\n            // 传递给后端的数据\r\n            data: data\r\n        })\r\n            //根据返回的状态码status判断是否删除用户成功\r\n            .then(res => {\r\n                console.log(res)\r\n                let data = res\r\n                ofStatusToChinese(data.results)\r\n                this.setState({\r\n                    data: data.results\r\n                })\r\n                if (res.status === 'success') {\r\n                    message.success('处理成功');\r\n                } else {\r\n                    message.error('处理失败');\r\n                }\r\n            })\r\n    }\r\n    // 根据startStatus来判断endStatus\r\n    confirmEndStatus = () => {\r\n        switch (this.state.status) {\r\n            case \"willdelivery\":\r\n                return \"delivery\"\r\n            case \"delivery\":\r\n                return \"success\"\r\n            case \"refund\":\r\n                return \"refunded\"\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    // 更改日期的提交格式\r\n    dateOnChange = (value, dateString) => {\r\n        let startDate = dateString[0].replace(/\\//g, \"-\")\r\n        let endDate = dateString[1].replace(/\\//g, \"-\")\r\n        let date = [startDate, endDate]\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    // 搜索操作\r\n    OmSearch = () => {\r\n        console.log(this.state.date)\r\n        let [ofid, uid, dateSta, dateEnd, status] = [\r\n            this.ofidInput.value,\r\n            this.uidInput.state.value,\r\n            this.state.date[0],\r\n            this.state.date[1],\r\n            this.state.status\r\n        ]\r\n        dateSta = JSON.stringify(dateSta)\r\n        dateEnd = JSON.stringify(dateEnd)\r\n        const data = { ofid, uid, dateSta, dateEnd, status }\r\n        console.log(data)\r\n        reqwest({\r\n            url: '/om/searchorderform',\r\n            method: 'post',\r\n            type: 'json',\r\n            data: data\r\n        })\r\n            .then(data => {\r\n                // 数据处理-给每条数据添加独立的key\r\n                if (data.total !== 0) {\r\n                    console.log(data)\r\n                    data.results.forEach(item => {\r\n                        item.key = nanoid()\r\n                    })\r\n                    ofStatusToChinese(data.results)\r\n                    let pagination = this.state.pagination\r\n                    pagination.total = data.total\r\n                    this.setState({\r\n                        data: data.results,\r\n                        pagination\r\n                    })\r\n                    message.success(\"查询成功\")\r\n                } else {\r\n                    message.error(\"查无订单\")\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    // 点击Table按钮 渲染组件\r\n    handleTableChange = (pagination) => {\r\n        console.log(pagination)\r\n        let { current, pageSize } = pagination\r\n        // console.log(pagination)\r\n        this.setState({\r\n            pagination: {\r\n                current,\r\n                pageSize\r\n            }\r\n        })\r\n        this.fetch({\r\n            pagination,\r\n        });\r\n    };\r\n\r\n    getRandomuserParams = params => ({\r\n        current: params.pagination.current,\r\n        pageSize: params.pagination.pageSize,\r\n        status: this.state.status\r\n    });\r\n\r\n    fetch = (params = {}) => {\r\n        this.setState({ loading: true });\r\n        reqwest({\r\n            // 后端接口\r\n            url: '/om/oflist',\r\n            method: 'post',\r\n            type: 'json',\r\n            // 传递给后端的数据\r\n            data: this.getRandomuserParams(params),\r\n        })\r\n            .then(data => {\r\n                // 数据处理-给每条数据添加独立的key\r\n                data.results.forEach(item => {\r\n                    item.key = nanoid()\r\n                })\r\n                // 数据处理-将status从英文变成中文在页面显示\r\n                console.log(data)\r\n                ofStatusToChinese(data.results)\r\n                this.setState({\r\n                    loading: false,\r\n                    // 根据接口返回的数据源\r\n                    data: data.results,\r\n                    pagination: {\r\n                        ...params.pagination,\r\n                        // 根据接口返回的总条数\r\n                        total: data.total,\r\n                    },\r\n                });\r\n            })\r\n            ;\r\n    };\r\n\r\n    // 点击状态按钮切换渲染\r\n    changeStatusAndPost = (status) => {\r\n        const { pagination } = this.state;\r\n        this.setState({\r\n            status: status\r\n        }, () => {\r\n            this.fetch({ pagination });\r\n        })\r\n\r\n    }\r\n\r\n    willdeliveryClick = () => {\r\n        this.changeStatusAndPost(\"willdelivery\")\r\n    }\r\n    deliveryClick = () => {\r\n        this.changeStatusAndPost(\"delivery\")\r\n    }\r\n    successClick = () => {\r\n        this.changeStatusAndPost(\"success\")\r\n    }\r\n    refundClick = () => {\r\n        this.changeStatusAndPost(\"refund\")\r\n    }\r\n    refundedClick = () => {\r\n        this.changeStatusAndPost(\"refunded\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { pagination } = this.state;\r\n        this.fetch({ pagination });\r\n    }\r\n\r\n    render() {\r\n        const { data, pagination, loading } = this.state;\r\n        return (\r\n            <div>\r\n                <Divider style={{ margin: 0 }} />\r\n                <div className=\"Om-head\">\r\n                    <div className=\"Om-desc-wraper\">\r\n                        <Breadcrumb className=\"bdc\">\r\n                            <Breadcrumb.Item>\r\n                                <a href=\"/home\">主页</a>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>订单信息管理</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <Descriptions title=\"订单管理\" className=\"desc\">\r\n                            <Descriptions.Item>展示订单信息，查询订单，查看订单状态，处理订单的发货，确认送达和同意退款</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </div>\r\n                    <div className=\"status-switch\">\r\n                        <Space>\r\n                            <Button className=\"status-button\" onClick={this.willdeliveryClick}>待发货</Button>\r\n                            <Button className=\"status-button\" onClick={this.deliveryClick}>配送中</Button>\r\n                            <Button className=\"status-button\" onClick={this.successClick}>已成交</Button>\r\n                            <Button className=\"status-button\" onClick={this.refundClick}>待退款</Button>\r\n                            <Button className=\"status-button\" onClick={this.refundedClick}>已退款</Button>\r\n                        </Space>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search\">\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <Space style={{ marginTop: 20 }} size={20}>\r\n                        <div>\r\n                            订单id:\r\n                            <InputNumber name='Oid' className=\"Om-input\" ref={elev => { this.ofidInput = elev }} />\r\n                        </div>\r\n                        <div>\r\n                            用户id:\r\n                            <Input name=\"commodity\" className=\"Om-input\" ref={elev => { this.uidInput = elev }} />\r\n                        </div>\r\n                        <div>\r\n                            时间:\r\n                            <ConfigProvider locale={zh_CN}>\r\n                                <RangePicker\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.dateOnChange}\r\n                                    ref={elev => { this.dateElev = elev }}\r\n                                />\r\n                            </ConfigProvider>\r\n                        </div>\r\n                        <div style={{ marginLeft: 20 }}>\r\n                            <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} onClick={this.OmSearch} />\r\n                        </div>\r\n                    </Space>\r\n                </div>\r\n                <div className=\"tableWraper contentWraper\">\r\n                    <Table\r\n                        columns={this.getColumns()}\r\n                        dataSource={data}\r\n                        pagination={pagination}\r\n                        loading={loading}\r\n                        onChange={this.handleTableChange}\r\n                        bordered={true}\r\n                        expandable={{\r\n                            onExpand: (boo, item) => {\r\n                                console.log(item, 222222222, this.state.ofDetails)\r\n                                let tag = 1\r\n                                this.state.ofDetails.forEach(detail => {\r\n                                    console.log(detail.user.uid, item.uid)\r\n                                    if (detail.commodityDetails[0].ofid === item.ofid) {\r\n                                        tag = 0\r\n                                    }\r\n                                })\r\n                                if (tag) {\r\n                                    let data = {\r\n                                        ofid: item.ofid,\r\n                                        uid: item.uid\r\n                                    }\r\n                                    reqwest({\r\n                                        url: '/om/ofdetails',\r\n                                        method: \"post\",\r\n                                        type: \"json\",\r\n                                        data: data\r\n                                    })\r\n                                        .then(res => {\r\n                                            console.log(res)\r\n                                            res.commodityDetails.forEach(item => {\r\n                                                item.key = nanoid()\r\n                                            })\r\n                                            let ofDetails = this.state.ofDetails\r\n                                            ofDetails.push(res)\r\n                                            this.setState({\r\n                                                ofDetails: ofDetails\r\n                                            })\r\n                                        })\r\n                                }\r\n                            },\r\n                            expandedRowRender: item => {\r\n                                console.log(item.uid)\r\n                                console.log(this.state.ofDetails)\r\n                                let tag = 0\r\n                                let index\r\n                                this.state.ofDetails.forEach((detail, ind) => {\r\n                                    console.log(detail.user.uid, item.uid)\r\n                                    if (detail.commodityDetails[0].ofid === item.ofid) {\r\n                                        tag = 1\r\n                                        index = ind\r\n                                    }\r\n                                })\r\n                                if (tag) {\r\n                                    if (this.state.ofDetails !== null && this.state.ofDetails[index].user !== undefined && this.state.ofDetails[index].commodityDetails !== undefined) {\r\n                                        const user = this.state.ofDetails[index].user\r\n                                        const commodityDetails = this.state.ofDetails[index].commodityDetails\r\n                                        return <div className=\"sub-order\">\r\n                                            <p>用户收货地址: {user.address} {user.uname} {user.phone} </p>\r\n                                            <p style={{ fontWeight: 600, fontSize: 14 }}>商品详情:</p>\r\n                                            {commodityDetails.map(item => {\r\n                                                return <div className=\"commodity-details\" >\r\n                                                    <div className=\"commodity-details-item\" >编号: {item.cid}</div>\r\n                                                    <div className=\"commodity-details-item\" >名称: {item.commodityName}</div>\r\n                                                    <div className=\"commodity-details-item\" >数量: {item.count}</div>\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n                                    } else {\r\n                                        return <Empty />\r\n                                    }\r\n                                }\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Divider, Breadcrumb, Popconfirm, Button, List, message, Space, Input, Spin } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { nanoid } from 'nanoid'\r\nimport './index.css'\r\n\r\nexport default class Category extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        loading: false,\r\n        hasMore: true,\r\n        total: '',\r\n        isAddCategory: false,\r\n        count: 0,\r\n        pageSize: 8\r\n    };\r\n\r\n    fetchData = callback => {\r\n        let count = this.state.count\r\n        let pageSize = this.state.pageSize\r\n        count += 1\r\n        this.setState({\r\n            count: count\r\n        })\r\n        let data = { count, pageSize }\r\n        // console.log(data)\r\n        reqwest({\r\n            url: '/category/categorylist',\r\n            method: 'post',\r\n            data: data,\r\n            type: 'json',\r\n            success: res => {\r\n                callback(res);\r\n            },\r\n        });\r\n    };\r\n\r\n    handleInfiniteOnLoad = () => {\r\n        let { data, total } = this.state;\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        if (data.length >= total) {\r\n            message.warning('分类已展示完毕');\r\n            this.setState({\r\n                hasMore: false,\r\n                loading: false,\r\n            });\r\n            return;\r\n        }\r\n        this.fetchData(res => {\r\n            data = data.concat(res.results);\r\n            this.setState({\r\n                data,\r\n                loading: false,\r\n                total: res.total\r\n            });\r\n        });\r\n    };\r\n\r\n    // 判断新加的分类是否已存在\r\n    judgeCategoryNameIsExist = (categoryName) => {\r\n        let tag = 0\r\n        this.state.data.forEach(item => {\r\n            if (item.category === categoryName) {\r\n                tag = 1\r\n            }\r\n        })\r\n        return tag\r\n    }\r\n\r\n    addCategory = () => {\r\n        // console.log(this.categoryInput.state.value)\r\n        let categoryName = this.categoryInput.state.value\r\n        let pageSize = this.state.pageSize\r\n        if (\r\n            undefined !== categoryName &&\r\n            categoryName !== '' &&\r\n            categoryName.search(/\\s/) === -1\r\n        ) {\r\n            if (this.judgeCategoryNameIsExist(categoryName)) {\r\n                message.error(\"分类已存在！\")\r\n            } else {\r\n                categoryName = categoryName.replace(/[A-z]|[0-9]/g,'')\r\n                categoryName = categoryName.replace(/[$￥@#*（）【】/，:：‘’“”\"\"[\\]{}()-_——+~·^%&',;=?$\\x22]/g,'')\r\n                console.log(categoryName)\r\n                reqwest({\r\n                    url: '/category/addcategory',\r\n                    method: 'post',\r\n                    type: 'json',\r\n                    data: { categoryName, pageSize },\r\n                })\r\n                    .then(res => {\r\n                        // console.log(res, 1111111111)\r\n                        this.setState({\r\n                            data: res.results\r\n                        })\r\n                        this.categoryInput.input.value = ''\r\n                        this.categoryInput.state.value = ''\r\n                        if (res.status === 'success') {\r\n                            message.success(\"新增分类成功！\")\r\n                        } else {\r\n                            message.error(\"新增分类失败！\")\r\n                        }\r\n                    })\r\n            }\r\n        } else {\r\n            message.warning(\"输入内容不能为空或含有空格\")\r\n        }\r\n    }\r\n\r\n    deleteCategory = (caid) => {\r\n        let count = this.state.count\r\n        let pageSize = this.state.pageSize\r\n        let end = count * pageSize\r\n        reqwest({\r\n            url: '/category/deletecategory',\r\n            method: 'post',\r\n            type: 'json',\r\n            data: { caid, end },\r\n        })\r\n            .then((res) => {\r\n                this.setState({\r\n                    data: res.results\r\n                })\r\n                if (res.status === 'success') {\r\n                    message.success(\"删除分类成功！\")\r\n                } else {\r\n                    message.error(\"删除分类失败！\")\r\n                }\r\n            })\r\n    }\r\n\r\n    AddCategoryIsTrue = () => {\r\n        this.setState({\r\n            isAddCategory: true\r\n        })\r\n    }\r\n\r\n    AddCategoryIsFalse = () => {\r\n        this.setState({\r\n            isAddCategory: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                data: res.results,\r\n                total: res.total\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Divider style={{ margin: 0 }} />\r\n                <div className=\"descwraper\">\r\n                    <Breadcrumb className=\"bdc\">\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/home\">主页</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>商品分类管理</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Descriptions title=\"分类管理\" className=\"desc\">\r\n                        <Descriptions.Item>商品分类展示，新增分类，删除分类</Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n                <div className=\"search\">\r\n                    <Divider style={{ margin: 0 }} />\r\n                    <Space style={{ marginTop: 20 }} size={20}>\r\n\r\n                        {\r\n                            (this.state.isAddCategory)\r\n                                ?\r\n                                <>\r\n                                    <div>\r\n                                        分类名称:\r\n                                        <Input name='category' className=\"CimInput\" ref={elev => { this.categoryInput = elev }} />\r\n                                    </div>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        style={{ borderRadius: 5 }}\r\n                                        onClick={this.addCategory}\r\n                                    >\r\n                                        确定\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        danger\r\n                                        style={{ borderRadius: 5 }}\r\n                                        onClick={this.AddCategoryIsFalse}\r\n                                    >\r\n                                        取消\r\n                                    </Button>\r\n                                </>\r\n                                :\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    style={{ borderRadius: 5 }}\r\n                                    onClick={this.AddCategoryIsTrue}\r\n                                >\r\n                                    新增分类\r\n                                </Button>\r\n\r\n                        }\r\n                    </Space>\r\n                </div>\r\n                <div className=\"contentWraper\">\r\n                    <div className=\"demo-infinite-container\">\r\n                        <InfiniteScroll\r\n                            initialLoad={false}\r\n                            pageStart={0}\r\n                            loadMore={this.handleInfiniteOnLoad}\r\n                            hasMore={!this.state.loading && this.state.hasMore}\r\n                            useWindow={false}\r\n                        >\r\n                            <List\r\n                                dataSource={this.state.data}\r\n                                renderItem={item => (\r\n                                    <List.Item key={nanoid()}>\r\n                                        <List.Item.Meta\r\n                                            title={item.category}\r\n                                            style={{ fontSize: 20 }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            danger\r\n                                            style={{ borderRadius: 5 }}\r\n                                        >\r\n                                            <Popconfirm\r\n                                                title=\"确定删除该分类吗?\"\r\n                                                onConfirm={this.deleteCategory.bind(this, item.caid)}\r\n                                                okText=\"确认\"\r\n                                                cancelText=\"取消\"\r\n                                            >\r\n                                                删除分类\r\n                                            </Popconfirm>\r\n                                        </Button>\r\n                                    </List.Item>\r\n                                )}\r\n                            >\r\n                                {this.state.loading && this.state.hasMore && (\r\n                                    <div className=\"demo-loading-container\">\r\n                                        <Spin />\r\n                                    </div>\r\n                                )}\r\n                            </List>\r\n                        </InfiniteScroll>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Uim from './Uim/Uim'\r\nimport Adm from './Adm/Adm'\r\nimport Cim from './Cim/Cim'\r\nimport Dashboard from './Dashboard/Dashboard'\r\nimport Om from './Om/Om'\r\nimport Category from './Category/Category'\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        let name = this.props.match.params.name\r\n        switch (name) {\r\n            case 'category':\r\n                return <Category />\r\n            case 'adm':\r\n                return <Adm />\r\n            case 'cim':\r\n                return <Cim />\r\n            case 'uim':\r\n                return <Uim />\r\n            case 'om':\r\n                return <Om />\r\n            default:\r\n                return <Dashboard />\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    UserOutlined,\r\n    AppstoreOutlined,\r\n    AlignLeftOutlined,\r\n    PieChartOutlined,\r\n    FileTextOutlined,\r\n    AccountBookOutlined\r\n} from '@ant-design/icons';\r\nimport { Menu } from 'antd';\r\n\r\nexport default class MeNu extends Component {\r\n\r\n    state = {\r\n        current: 1\r\n    }\r\n\r\n    menuClick = (e) => {\r\n        this.setState({\r\n            current: e.key\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu\r\n                id=\"menu\"\r\n                theme=\"dark\"\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={[`1`]}\r\n                onClick={this.menuClick}\r\n            >\r\n                <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                    <Link to=\"/home/dashboard\">\r\n                        数据概况\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n                    <Link to=\"/home/uim\" >\r\n                        用户信息管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" icon={<AppstoreOutlined />}>\r\n                    <Link to=\"/home/cim\" >\r\n                        商品信息管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\" icon={<AlignLeftOutlined />} >\r\n                    <Link to=\"/home/category\" >\r\n                        商品分类管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"5\" icon={<FileTextOutlined />}>\r\n                        <Link to=\"/home/om\" >\r\n                            订单信息管理\r\n                        </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\" icon={<AccountBookOutlined />}>\r\n                    <Link to=\"/home/adm\" >\r\n                        广告投放管理\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { Layout, Affix } from 'antd';\r\nimport './index.css';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n} from '@ant-design/icons';\r\n//导入组件\r\nimport Conten from '../../components/Content/Content'\r\nimport MeNu from '../../components/Menu/MeNu'\r\n\r\nconst { Header, Sider } = Layout;\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logoClick = () => {\r\n        window.location.href = 'http://localhost:3000/home'\r\n    }\r\n\r\n    showContent = () => {\r\n        return <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ paddingLeft: 16, height: 35 }} >\r\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                    className: 'trigger',\r\n                    onClick: this.toggle,\r\n                })}\r\n            </Header>\r\n            <div>\r\n                <Route path=\"/home/:name?\" component={Conten} />\r\n            </div>\r\n        </Layout>\r\n    }\r\n\r\n    showSider = () => {\r\n        return <Affix >\r\n            <Sider id='sider' trigger={null} collapsible collapsed={this.state.collapsed} style={{ minHeight: '100vh' }}>\r\n                <div className=\"logo\" style={{ color: 'white', textAlign: 'center', padding: 19 }}>\r\n                    <div onClick={this.logoClick} id=\"logo\">\r\n                        重邮超市管理系统\r\n                    </div>\r\n                </div>\r\n                <MeNu />\r\n            </Sider>\r\n        </Affix>\r\n    }\r\n\r\n    render() {\r\n        let adminObj = JSON.parse(sessionStorage.getItem(\"admin\"))\r\n        return (adminObj === null) ? <Redirect path='/login' /> :\r\n            (\r\n                <BrowserRouter>\r\n                    <Layout>    \r\n                        {this.showSider()}\r\n                        {this.showContent()}\r\n                    </Layout>\r\n                </BrowserRouter>\r\n            )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {  Upload, message, Button } from 'antd'\r\n\r\nconst props = {\r\n    name: 'file',\r\n    action: '/modifyad',\r\n    headers: {\r\n        authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    },\r\n};\r\n\r\nexport default class Test extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload {...props}>\r\n                    <Button type=\"primary\">Click to Upload</Button>\r\n                </Upload>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Login from './pages/Login/Login';\r\nimport Home from './pages/Home/Home'\r\nimport Test from './pages/Test/Test'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter >\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"/home\" component={Home} />\r\n                        <Route path=\"/test\" component={Test} />\r\n                        <Redirect path=\"/\" to=\"/login\" />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}